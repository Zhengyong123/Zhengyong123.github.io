<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>剑出花残</title>
  <subtitle>come on</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-12-10T07:37:10.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>郑勇</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>原生JS实现购物车</title>
    <link href="http://yoursite.com/2016/12/15/jsShoping/"/>
    <id>http://yoursite.com/2016/12/15/jsShoping/</id>
    <published>2016-12-15T07:35:31.000Z</published>
    <updated>2016-12-10T07:37:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近学习商城网页制作，遇到了购物车这一模块，比较棘手，最后在网上找到了一篇用原生JS写的购物车代码，觉得非常易懂，于是就转载下来了<br>html<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"catbox"</span>&gt;</div><div class="line">    &lt;table id="cartTable"&gt;</div><div class="line">        &lt;thead&gt;</div><div class="line">        &lt;tr&gt;</div><div class="line">            &lt;th&gt;&lt;label&gt;</div><div class="line">                &lt;input class="check-all check" type="checkbox"&gt;&amp;nbsp;&amp;nbsp;全选&lt;/label&gt;&lt;/th&gt;</div><div class="line">            &lt;th&gt;商品&lt;/th&gt;</div><div class="line">            &lt;th&gt;单价&lt;/th&gt;</div><div class="line">            &lt;th&gt;数量&lt;/th&gt;</div><div class="line">            &lt;th&gt;小计&lt;/th&gt;</div><div class="line">            &lt;th&gt;操作&lt;/th&gt;</div><div class="line">        &lt;/tr&gt;</div><div class="line">        &lt;/thead&gt;</div><div class="line">        &lt;tbody&gt;</div><div class="line">        &lt;tr class="on"&gt;</div><div class="line">            &lt;td class="checkbox"&gt;&lt;input class="check-one check" type="checkbox"&gt;&lt;/td&gt;</div><div class="line">            &lt;td class="goods"&gt;&lt;img src="" alt=""&gt;&lt;span&gt;Casio/卡西欧 EX-TR350&lt;/span&gt;&lt;/td&gt;</div><div class="line">            &lt;td class="price"&gt;5999.88&lt;/td&gt;</div><div class="line">            &lt;td class="count"&gt;&lt;span class="reduce"&gt;&lt;/span&gt;</div><div class="line">                &lt;input class="count-input" type="text" value="1"&gt;</div><div class="line">                &lt;span class="add"&gt;+&lt;/span&gt;&lt;/td&gt;</div><div class="line">            &lt;td class="subtotal"&gt;5999.88&lt;/td&gt;</div><div class="line">            &lt;td class="operation"&gt;&lt;span class="delete"&gt;删除&lt;/span&gt;&lt;/td&gt;</div><div class="line">        &lt;/tr&gt;</div><div class="line">        &lt;tr class="on"&gt;</div><div class="line">            &lt;td class="checkbox"&gt;&lt;input class="check-one check" type="checkbox"&gt;&lt;/td&gt;</div><div class="line">            &lt;td class="goods"&gt;&lt;img src="" alt=""&gt;&lt;span&gt;Canon/佳能 PowerShot SX50 HS&lt;/span&gt;&lt;/td&gt;</div><div class="line">            &lt;td class="price"&gt;3888.50&lt;/td&gt;</div><div class="line">            &lt;td class="count"&gt;&lt;span class="reduce"&gt;&lt;/span&gt;</div><div class="line">                &lt;input class="count-input" type="text" value="1"&gt;</div><div class="line">                &lt;span class="add"&gt;+&lt;/span&gt;&lt;/td&gt;</div><div class="line">            &lt;td class="subtotal"&gt;3888.50&lt;/td&gt;</div><div class="line">            &lt;td class="operation"&gt;&lt;span class="delete"&gt;删除&lt;/span&gt;&lt;/td&gt;</div><div class="line">        &lt;/tr&gt;</div><div class="line">        &lt;tr class="on"&gt;</div><div class="line">            &lt;td class="checkbox"&gt;&lt;input class="check-one check" type="checkbox"&gt;&lt;/td&gt;</div><div class="line">            &lt;td class="goods"&gt;&lt;img src="" alt=""&gt;&lt;span&gt;Sony/索尼 DSC-WX300&lt;/span&gt;&lt;/td&gt;</div><div class="line">            &lt;td class="price"&gt;1428.50&lt;/td&gt;</div><div class="line">            &lt;td class="count"&gt;&lt;span class="reduce"&gt;&lt;/span&gt;</div><div class="line">                &lt;input class="count-input" type="text" value="1"&gt;</div><div class="line">                &lt;span class="add"&gt;+&lt;/span&gt;&lt;/td&gt;</div><div class="line">            &lt;td class="subtotal"&gt;1428.50&lt;/td&gt;</div><div class="line">            &lt;td class="operation"&gt;&lt;span class="delete"&gt;删除&lt;/span&gt;&lt;/td&gt;</div><div class="line">        &lt;/tr&gt;</div><div class="line">        &lt;tr class="on"&gt;</div><div class="line">            &lt;td class="checkbox"&gt;&lt;input class="check-one check" type="checkbox"&gt;&lt;/td&gt;</div><div class="line">            &lt;td class="goods"&gt;&lt;img src="" alt=""&gt;&lt;span&gt;Fujifilm/富士 instax mini 25&lt;/span&gt;&lt;/td&gt;</div><div class="line">            &lt;td class="price"&gt;640.60&lt;/td&gt;</div><div class="line">            &lt;td class="count"&gt;&lt;span class="reduce"&gt;&lt;/span&gt;</div><div class="line">                &lt;input class="count-input" type="text" value="1"&gt;</div><div class="line">                &lt;span class="add"&gt;+&lt;/span&gt;&lt;/td&gt;</div><div class="line">            &lt;td class="subtotal"&gt;640.60&lt;/td&gt;</div><div class="line">            &lt;td class="operation"&gt;&lt;span class="delete"&gt;删除&lt;/span&gt;&lt;/td&gt;</div><div class="line">        &lt;/tr&gt;</div><div class="line">        &lt;/tbody&gt;</div><div class="line">    &lt;/table&gt;</div><div class="line">    &lt;div class="foot" id="foot"&gt;</div><div class="line">        &lt;label class="fl select-all"&gt;&lt;input type="checkbox" class="check-all check"&gt;&amp;nbsp;&amp;nbsp;全选&lt;/label&gt;</div><div class="line">        &lt;a class="fl delete" id="deleteAll" href="javascript:;"&gt;删除&lt;/a&gt;</div><div class="line">        &lt;div class="fr closing" onclick="getTotal();"&gt;结 算&lt;/div&gt;</div><div class="line">        &lt;input type="hidden" id="cartTotalPrice"&gt;</div><div class="line">        &lt;div class="fr total"&gt;合计：￥&lt;span id="priceTotal"&gt;11957.48&lt;/span&gt;&lt;/div&gt;</div><div class="line">        &lt;div class="fr selected" id="selected"&gt;已选商品&lt;span id="selectedTotal"&gt;4&lt;/span&gt;件&lt;span class="arrow up"&gt;︽&lt;/span&gt;&lt;span class="arrow down"&gt;︾&lt;/span&gt;&lt;/div&gt;</div><div class="line">        &lt;div class="selected-view"&gt;</div><div class="line">            &lt;div id="selectedViewList" class="clearfix"&gt;&lt;div&gt;&lt;img src="http://www.jq22.com/demo/jquery-guc20151105/images/1.jpg"&gt;&lt;span class="del" index="0"&gt;取消选择&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;img src="http://www.jq22.com/demo/jquery-guc20151105/images/2.jpg"&gt;&lt;span class="del" index="1"&gt;取消选择&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;img src="http://www.jq22.com/demo/jquery-guc20151105/images/3.jpg"&gt;&lt;span class="del" index="2"&gt;取消选择&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;img src="http://www.jq22.com/demo/jquery-guc20151105/images/4.jpg"&gt;&lt;span class="del" index="3"&gt;取消选择&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;</div><div class="line">            &lt;span class="arrow"&gt;◆&lt;span&gt;◆&lt;/span&gt;&lt;/span&gt; &lt;/div&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure></p>
<p>css<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line">&lt;style type="text/css"&gt;</div><div class="line">        *&#123;margin:0;padding:0;list-style-type:none;&#125;</div><div class="line">        a&#123;color:#666;text-decoration:none;&#125;</div><div class="line">        table&#123;border-collapse:collapse;border-spacing:0;border:0;&#125;</div><div class="line">        body&#123;color:#666;font:12px/180% Arial, Helvetica, sans-serif, "新宋体";&#125;</div><div class="line">        clearfix:after&#123;content:".";display:block;height:0;clear:both;visibility:hidden&#125;</div><div class="line">        .clearfix&#123;display:inline-table&#125;</div><div class="line">        *html .clearfix&#123;height:1%&#125;</div><div class="line">        .clearfix&#123;display:block&#125;</div><div class="line">        *+html .clearfix&#123;min-height:1%&#125;</div><div class="line">        .fl&#123;float:left;&#125;</div><div class="line">        .fr&#123;float:right;&#125;</div><div class="line">        .catbox&#123;width:940px;margin:100px auto;&#125;</div><div class="line">        .catbox table&#123;text-align:center;width:100%;&#125;</div><div class="line">        .catbox table th,.catbox table td&#123;border:1px solid #CADEFF;&#125;</div><div class="line">        .catbox table th&#123;background:#e2f2ff;border-top:3px solid #a7cbff;height:30px;&#125;</div><div class="line">        .catbox table td&#123;padding:10px;color:#444;&#125;</div><div class="line">        .catbox table tbody tr:hover&#123;background:RGB(238,246,255);&#125;</div><div class="line">        .checkbox&#123;width:60px;&#125;</div><div class="line">        .check-all&#123; vertical-align:middle;&#125;</div><div class="line">        .goods&#123;width:300px;&#125;</div><div class="line">        .goods span&#123;width:180px;margin-top:20px;text-align:left;float:left;&#125;</div><div class="line">        .goods img&#123;width:100px;height:80px;margin-right:10px;float:left;&#125;</div><div class="line">        .price&#123;width:130px;&#125;</div><div class="line">        .count&#123;width:90px;&#125;</div><div class="line">        .count .add, .count input, .count .reduce&#123;float:left;margin-right:-1px;position:relative;z-index:0;&#125;</div><div class="line">        .count .add, .count .reduce&#123;height:23px;width:17px;border:1px solid #e5e5e5;background:#f0f0f0;text-align:center;line-height:23px;color:#444;&#125;</div><div class="line">        .count .add:hover, .count .reduce:hover&#123;color:#f50;z-index:3;border-color:#f60;cursor:pointer;&#125;</div><div class="line">        .count input&#123;width:50px;height:25px;line-height:15px;border:1px solid #aaa;color:#343434;text-align:center;padding:4px 0;background-color:#fff;z-index:2;&#125;</div><div class="line">        .subtotal&#123;width:150px;color:red;font-weight:bold;&#125;</div><div class="line">        .operation span:hover,a:hover&#123;cursor:pointer;color:red;text-decoration:underline;&#125;</div><div class="line"></div><div class="line">        .foot&#123;margin-top:0px;color:#666;height:48px;border:1px solid #c8c8c8;border-top:0;background-color:#eaeaea;background-image:linear-gradient(RGB(241,241,241),RGB(226,226,226));position:relative;z-index:8;&#125;</div><div class="line">        .foot div, .foot a&#123;line-height:48px;height:48px;&#125;</div><div class="line">        .foot .select-all&#123;width:80px;height:48px;line-height:48px;color:#666;text-align:center;&#125;</div><div class="line">        .foot .delete&#123;padding-left:10px;&#125;</div><div class="line">        .foot .closing&#123;border-left:1px solid #c8c8c8;width:103px;text-align:center;color:#666;font-weight:bold;cursor:pointer;background-image:linear-gradient(RGB(241,241,241),RGB(226,226,226));&#125;</div><div class="line">        .foot .closing:hover&#123;background-image:linear-gradient(RGB(226,226,226),RGB(241,241,241));color:#333;&#125;</div><div class="line">        .foot .total&#123;margin:0 20px;cursor:pointer;&#125;</div><div class="line">        .foot  #priceTotal, .foot #selectedTotal&#123;color:red;font-family:"Microsoft Yahei";font-weight:bold;&#125;</div><div class="line">        .foot .selected&#123;cursor:pointer;&#125;</div><div class="line">        .foot .selected .arrow&#123;position:relative;top:-3px;margin-left:3px;&#125;</div><div class="line">        .foot .selected .down&#123;position:relative;top:3px;display:none;&#125;</div><div class="line">        .show .selected .down&#123;display:inline;&#125;</div><div class="line">        .show .selected .up&#123;display:none;&#125;</div><div class="line">        .foot .selected:hover .arrow&#123;color:red;&#125;</div><div class="line">        .foot .selected-view&#123;width:938px;border:1px solid #c8c8c8;position:absolute;height:auto;background:#ffffff;z-index:9;bottom:48px;left:-1px;display:none;&#125;</div><div class="line">        .show .selected-view&#123;display:block;&#125;</div><div class="line">        .foot .selected-view div&#123;height:auto;&#125;</div><div class="line">        .foot .selected-view .arrow&#123;font-size:16px;line-height:100%;color:#c8c8c8;position:absolute;right:330px;bottom:-9px;&#125;</div><div class="line">        .foot .selected-view .arrow span&#123;color:#ffffff;position:absolute;left:0px;bottom:1px;&#125;</div><div class="line"></div><div class="line">        #selectedViewList&#123;padding:10px 20px 10px 20px;&#125;</div><div class="line">        #selectedViewList div&#123;display:inline-block;position:relative;width:100px;height:80px;border:1px solid #ccc;margin:10px;float:left;&#125;</div><div class="line">        #selectedViewList div img&#123;width:100px;height:80px;margin-right:10px;float:left;&#125;</div><div class="line">        #selectedViewList div span&#123;display:none;color:#ffffff;font-size:12px;position:absolute;top:0px;right:0px;width:60px;height:18px;line-height:18px;text-align:center;background:#000;cursor:pointer;&#125;</div><div class="line">        #selectedViewList div:hover span&#123;display:block;&#125;</div><div class="line">    &lt;/style&gt;</div></pre></td></tr></table></figure></p>
<p>js<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Created by an www.jq22.com</div><div class="line">     */</div><div class="line">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span> (!<span class="built_in">document</span>.getElementsByClassName) &#123;</div><div class="line">            <span class="built_in">document</span>.getElementsByClassName = <span class="function"><span class="keyword">function</span> (<span class="params">cls</span>) </span>&#123;</div><div class="line">                <span class="keyword">var</span> ret = [];</div><div class="line">                <span class="keyword">var</span> els = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'*'</span>);</div><div class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, len = els.length; i &lt; len; i++) &#123;</div><div class="line"></div><div class="line">                    <span class="keyword">if</span> (els[i].className.indexOf(cls + <span class="string">' '</span>) &gt;=<span class="number">0</span> || els[i].className.indexOf(<span class="string">' '</span> + cls + <span class="string">' '</span>) &gt;=<span class="number">0</span> || els[i].className.indexOf(<span class="string">' '</span> + cls) &gt;=<span class="number">0</span>) &#123;</div><div class="line">                        ret.push(els[i]);</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">return</span> ret;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">var</span> table = <span class="built_in">document</span>.getElementById(<span class="string">'cartTable'</span>); <span class="comment">// 购物车表格</span></div><div class="line">        <span class="keyword">var</span> selectInputs = <span class="built_in">document</span>.getElementsByClassName(<span class="string">'check'</span>); <span class="comment">// 所有勾选框</span></div><div class="line">        <span class="keyword">var</span> checkAllInputs = <span class="built_in">document</span>.getElementsByClassName(<span class="string">'check-all'</span>) <span class="comment">// 全选框</span></div><div class="line">        <span class="keyword">var</span> tr = table.children[<span class="number">1</span>].rows; <span class="comment">//行</span></div><div class="line">        <span class="keyword">var</span> selectedTotal = <span class="built_in">document</span>.getElementById(<span class="string">'selectedTotal'</span>); <span class="comment">//已选商品数目容器</span></div><div class="line">        <span class="keyword">var</span> priceTotal = <span class="built_in">document</span>.getElementById(<span class="string">'priceTotal'</span>); <span class="comment">//总计</span></div><div class="line">        <span class="keyword">var</span> deleteAll = <span class="built_in">document</span>.getElementById(<span class="string">'deleteAll'</span>); <span class="comment">// 删除全部按钮</span></div><div class="line">        <span class="keyword">var</span> selectedViewList = <span class="built_in">document</span>.getElementById(<span class="string">'selectedViewList'</span>); <span class="comment">//浮层已选商品列表容器</span></div><div class="line">        <span class="keyword">var</span> selected = <span class="built_in">document</span>.getElementById(<span class="string">'selected'</span>); <span class="comment">//已选商品</span></div><div class="line">        <span class="keyword">var</span> foot = <span class="built_in">document</span>.getElementById(<span class="string">'foot'</span>);</div><div class="line"></div><div class="line">        <span class="comment">// 更新总数和总价格，已选浮层</span></div><div class="line">        <span class="function"><span class="keyword">function</span> <span class="title">getTotal</span>(<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="keyword">var</span> seleted = <span class="number">0</span>;</div><div class="line">            <span class="keyword">var</span> price = <span class="number">0</span>;</div><div class="line">            <span class="keyword">var</span> HTMLstr = <span class="string">''</span>;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, len = tr.length; i &lt; len; i++) &#123;</div><div class="line">                <span class="keyword">if</span> (tr[i].getElementsByTagName(<span class="string">'input'</span>)[<span class="number">0</span>].checked) &#123;</div><div class="line">                    tr[i].className = <span class="string">'on'</span>;</div><div class="line">                    seleted += <span class="built_in">parseInt</span>(tr[i].getElementsByTagName(<span class="string">'input'</span>)[<span class="number">1</span>].value);</div><div class="line">                    price += <span class="built_in">parseFloat</span>(tr[i].cells[<span class="number">4</span>].innerHTML);</div><div class="line">                    HTMLstr += <span class="string">'&lt;div&gt;&lt;img src="'</span> + tr[i].getElementsByTagName(<span class="string">'img'</span>)[<span class="number">0</span>].src + <span class="string">'"&gt;&lt;span class="del" index="'</span> + i + <span class="string">'"&gt;取消选择&lt;/span&gt;&lt;/div&gt;'</span></div><div class="line">                &#125;</div><div class="line">                <span class="keyword">else</span> &#123;</div><div class="line">                    tr[i].className = <span class="string">''</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            selectedTotal.innerHTML = seleted;</div><div class="line">            priceTotal.innerHTML = price.toFixed(<span class="number">2</span>);</div><div class="line">            selectedViewList.innerHTML = HTMLstr;</div><div class="line"></div><div class="line">            <span class="keyword">if</span> (seleted == <span class="number">0</span>) &#123;</div><div class="line">                foot.className = <span class="string">'foot'</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// 计算单行价格</span></div><div class="line">        <span class="function"><span class="keyword">function</span> <span class="title">getSubtotal</span>(<span class="params">tr</span>) </span>&#123;</div><div class="line">            <span class="keyword">var</span> cells = tr.cells;</div><div class="line">            <span class="keyword">var</span> price = cells[<span class="number">2</span>]; <span class="comment">//单价</span></div><div class="line">            <span class="keyword">var</span> subtotal = cells[<span class="number">4</span>]; <span class="comment">//小计td</span></div><div class="line">            <span class="keyword">var</span> countInput = tr.getElementsByTagName(<span class="string">'input'</span>)[<span class="number">1</span>]; <span class="comment">//数目input</span></div><div class="line">            <span class="keyword">var</span> span = tr.getElementsByTagName(<span class="string">'span'</span>)[<span class="number">1</span>]; <span class="comment">//-号</span></div><div class="line">            <span class="comment">//写入HTML</span></div><div class="line">            subtotal.innerHTML = (<span class="built_in">parseInt</span>(countInput.value) * <span class="built_in">parseFloat</span>(price.innerHTML)).toFixed(<span class="number">2</span>);</div><div class="line">            <span class="comment">//如果数目只有一个，把-号去掉</span></div><div class="line">            <span class="keyword">if</span> (countInput.value == <span class="number">1</span>) &#123;</div><div class="line">                span.innerHTML = <span class="string">''</span>;</div><div class="line">            &#125;<span class="keyword">else</span>&#123;</div><div class="line">                span.innerHTML = <span class="string">'-'</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">// 点击选择框</span></div><div class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; selectInputs.length; i++ )&#123;</div><div class="line">            selectInputs[i].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">                <span class="keyword">if</span> (<span class="keyword">this</span>.className.indexOf(<span class="string">'check-all'</span>) &gt;= <span class="number">0</span>) &#123; <span class="comment">//如果是全选，则吧所有的选择框选中</span></div><div class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; selectInputs.length; j++) &#123;</div><div class="line">                        selectInputs[j].checked = <span class="keyword">this</span>.checked;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">if</span> (!<span class="keyword">this</span>.checked) &#123; <span class="comment">//只要有一个未勾选，则取消全选框的选中状态</span></div><div class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; checkAllInputs.length; i++) &#123;</div><div class="line">                        checkAllInputs[i].checked = <span class="literal">false</span>;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">                getTotal();<span class="comment">//选完更新总计</span></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">// 显示已选商品弹层</span></div><div class="line">        selected.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="keyword">if</span> (selectedTotal.innerHTML != <span class="number">0</span>) &#123;</div><div class="line">                foot.className = (foot.className == <span class="string">'foot'</span> ? <span class="string">'foot show'</span> : <span class="string">'foot'</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">//已选商品弹层中的取消选择按钮</span></div><div class="line">        selectedViewList.onclick = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</div><div class="line">            <span class="keyword">var</span> e = e || <span class="built_in">window</span>.event;</div><div class="line">            <span class="keyword">var</span> el = e.srcElement;</div><div class="line">            <span class="keyword">if</span> (el.className==<span class="string">'del'</span>) &#123;</div><div class="line">                <span class="keyword">var</span> input =  tr[el.getAttribute(<span class="string">'index'</span>)].getElementsByTagName(<span class="string">'input'</span>)[<span class="number">0</span>]</div><div class="line">                input.checked = <span class="literal">false</span>;</div><div class="line">                input.onclick();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">//为每行元素添加事件</span></div><div class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; tr.length; i++) &#123;</div><div class="line">            <span class="comment">//将点击事件绑定到tr元素</span></div><div class="line">            tr[i].onclick = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</div><div class="line">                <span class="keyword">var</span> e = e || <span class="built_in">window</span>.event;</div><div class="line">                <span class="keyword">var</span> el = e.target || e.srcElement; <span class="comment">//通过事件对象的target属性获取触发元素</span></div><div class="line">                <span class="keyword">var</span> cls = el.className; <span class="comment">//触发元素的class</span></div><div class="line">                <span class="keyword">var</span> countInout = <span class="keyword">this</span>.getElementsByTagName(<span class="string">'input'</span>)[<span class="number">1</span>]; <span class="comment">// 数目input</span></div><div class="line">                <span class="keyword">var</span> value = <span class="built_in">parseInt</span>(countInout.value); <span class="comment">//数目</span></div><div class="line">                <span class="comment">//通过判断触发元素的class确定用户点击了哪个元素</span></div><div class="line">                <span class="keyword">switch</span> (cls) &#123;</div><div class="line">                    <span class="keyword">case</span> <span class="string">'add'</span>: <span class="comment">//点击了加号</span></div><div class="line">                        countInout.value = value + <span class="number">1</span>;</div><div class="line">                        getSubtotal(<span class="keyword">this</span>);</div><div class="line">                        <span class="keyword">break</span>;</div><div class="line">                    <span class="keyword">case</span> <span class="string">'reduce'</span>: <span class="comment">//点击了减号</span></div><div class="line">                        <span class="keyword">if</span> (value &gt; <span class="number">1</span>) &#123;</div><div class="line">                            countInout.value = value - <span class="number">1</span>;</div><div class="line">                            getSubtotal(<span class="keyword">this</span>);</div><div class="line">                        &#125;</div><div class="line">                        <span class="keyword">break</span>;</div><div class="line">                    <span class="keyword">case</span> <span class="string">'delete'</span>: <span class="comment">//点击了删除</span></div><div class="line">                        <span class="keyword">var</span> conf = confirm(<span class="string">'确定删除此商品吗？'</span>);</div><div class="line">                        <span class="keyword">if</span> (conf) &#123;</div><div class="line">                            <span class="keyword">this</span>.parentNode.removeChild(<span class="keyword">this</span>);</div><div class="line">                        &#125;</div><div class="line">                        <span class="keyword">break</span>;</div><div class="line">                &#125;</div><div class="line">                getTotal();</div><div class="line">            &#125;</div><div class="line">            <span class="comment">// 给数目输入框绑定keyup事件</span></div><div class="line">            tr[i].getElementsByTagName(<span class="string">'input'</span>)[<span class="number">1</span>].onkeyup = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">                <span class="keyword">var</span> val = <span class="built_in">parseInt</span>(<span class="keyword">this</span>.value);</div><div class="line">                <span class="keyword">if</span> (<span class="built_in">isNaN</span>(val) || val &lt;= <span class="number">0</span>) &#123;</div><div class="line">                    val = <span class="number">1</span>;</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">if</span> (<span class="keyword">this</span>.value != val) &#123;</div><div class="line">                    <span class="keyword">this</span>.value = val;</div><div class="line">                &#125;</div><div class="line">                getSubtotal(<span class="keyword">this</span>.parentNode.parentNode); <span class="comment">//更新小计</span></div><div class="line">                getTotal(); <span class="comment">//更新总数</span></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// 点击全部删除</span></div><div class="line">        deleteAll.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="keyword">if</span> (selectedTotal.innerHTML != <span class="number">0</span>) &#123;</div><div class="line">                <span class="keyword">var</span> con = confirm(<span class="string">'确定删除所选商品吗？'</span>); <span class="comment">//弹出确认框</span></div><div class="line">                <span class="keyword">if</span> (con) &#123;</div><div class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; tr.length; i++) &#123;</div><div class="line">                        <span class="comment">// 如果被选中，就删除相应的行</span></div><div class="line">                        <span class="keyword">if</span> (tr[i].getElementsByTagName(<span class="string">'input'</span>)[<span class="number">0</span>].checked) &#123;</div><div class="line">                            tr[i].parentNode.removeChild(tr[i]); <span class="comment">// 删除相应节点</span></div><div class="line">                            i--; <span class="comment">//回退下标位置</span></div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                alert(<span class="string">'请选择商品！'</span>);</div><div class="line">            &#125;</div><div class="line">            getTotal(); <span class="comment">//更新总数</span></div><div class="line">        &#125;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">"\u767e\u5ea6\u641c\u7d22\u3010\u7d20\u6750\u5bb6\u56ed\u3011\u4e0b\u8f7d\u66f4\u591aJS\u7279\u6548\u4ee3\u7801"</span>);</div><div class="line">        <span class="comment">// 默认全选</span></div><div class="line">        checkAllInputs[<span class="number">0</span>].checked = <span class="literal">true</span>;</div><div class="line">        checkAllInputs[<span class="number">0</span>].onclick();</div><div class="line">    &#125;</div><div class="line">&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近学习商城网页制作，遇到了购物车这一模块，比较棘手，最后在网上找到了一篇用原生JS写的购物车代码，觉得非常易懂，于是就转载下来了&lt;br&gt;html&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;g
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>js中利用cookie实现记住密码功能</title>
    <link href="http://yoursite.com/2016/12/13/jscookie/"/>
    <id>http://yoursite.com/2016/12/13/jscookie/</id>
    <published>2016-12-13T07:33:39.000Z</published>
    <updated>2016-12-10T07:37:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>在登录界面添加记住密码功能，我首先想到的是在java后台中调用cookie存放账号密码，大致如下：</p>

<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">HttpServletRequest request  </div><div class="line">HttpServletResponse response</div><div class="line">Cookie username = <span class="keyword">new</span> Cookie(<span class="string">"username "</span>,<span class="string">"cookievalue"</span>);</div><div class="line">Cookie password = <span class="keyword">new</span> Cookie(<span class="string">"password "</span>,<span class="string">"cookievalue"</span>);</div><div class="line">response.addCookie(username );</div><div class="line">response.addCookie(password );</div></pre></td></tr></table></figure>
<p>但是为安全起见，我们在后台获取的密码大多是在js中通过MD5加密后的密文，如果将密文放到cookie中，在js中获取到也没有作用；<br>然后考虑在js中存取cookie，代码如下：</p>

<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//设置cookie</span></div><div class="line"> <span class="keyword">var</span> passKey = <span class="string">'4c05c54d952b11e691d76c0b843ea7f9'</span>;</div><div class="line"> <span class="function"><span class="keyword">function</span> <span class="title">setCookie</span>(<span class="params">cname, cvalue, exdays</span>) </span>&#123;</div><div class="line">     <span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">Date</span>();</div><div class="line">     d.setTime(d.getTime() + (exdays*<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>*<span class="number">1000</span>));</div><div class="line">     <span class="keyword">var</span> expires = <span class="string">"expires="</span>+d.toUTCString();</div><div class="line">      <span class="built_in">document</span>.cookie = cname + <span class="string">"="</span> + encrypt(<span class="built_in">escape</span>(cvalue), passKey) + <span class="string">"; "</span> + expires;</div><div class="line"> &#125;</div><div class="line">  <span class="comment">//获取cookie</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getCookie</span>(<span class="params">cname</span>) </span>&#123;</div><div class="line">     <span class="keyword">var</span> name = cname + <span class="string">"="</span>;</div><div class="line">     <span class="keyword">var</span> ca = <span class="built_in">document</span>.cookie.split(<span class="string">';'</span>);</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;ca.length; i++) &#123;</div><div class="line">         <span class="keyword">var</span> c = ca[i];</div><div class="line">         <span class="keyword">while</span> (c.charAt(<span class="number">0</span>)==<span class="string">' '</span>) c = c.substring(<span class="number">1</span>);</div><div class="line">        <span class="keyword">if</span> (c.indexOf(name) != <span class="number">-1</span>)&#123;</div><div class="line">           <span class="keyword">var</span> cnameValue = <span class="built_in">unescape</span>(c.substring(name.length, c.length));</div><div class="line">           <span class="keyword">return</span> decrypt(cnameValue, passKey);</div><div class="line">         &#125; </div><div class="line">     &#125;</div><div class="line">     <span class="keyword">return</span> <span class="string">""</span>;</div><div class="line"> &#125;</div><div class="line"> <span class="comment">//清除cookie  </span></div><div class="line"> <span class="function"><span class="keyword">function</span> <span class="title">clearCookie</span>(<span class="params">cname</span>) </span>&#123;  </div><div class="line">     setCookie(cname, <span class="string">""</span>, <span class="number">-1</span>);  </div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<p></p><p>setCookie(cname, cvalue, exdays)三个参数分别是存放的cookie名字、cookie值、cookie有效天数</p><p></p>
<p></p><p>由于cookie中不能包含等号、空格、分号等特殊字符，我在设置cookie时使用escape() 函数对字符串进行编码，获取cookie时使用unescape()函数解码。但是escape()函数不会对 ASCII 字母和数字进行编码，所以存放到cookie中的账号、密码是以明文存放的，不安全。于是上网找了一个对字符串加密解密算法，该算法需要传两个参数，一个需要加密的字符串，一个自定义加密密钥passKey。设置cookie时使用encrypt(value, passkey)加密，读取cookie时使用decrypt(value, passKey)解密，该算法附在本文最后。</p><p></p>
<p></p><p>存取cookie方法的调用：</p><p></p>
<h4 id="1、定义checkbox"><a href="#1、定义checkbox" class="headerlink" title="1、定义checkbox"></a>1、定义checkbox</h4><pre><code>&lt;input type=&quot;checkbox&quot; id=&quot;rememberMe&quot; checked=&quot;checked&quot;/&gt;记住密码
</code></pre><h4 id="2、判断帐号密码输入无误后调用"><a href="#2、判断帐号密码输入无误后调用" class="headerlink" title="2、判断帐号密码输入无误后调用"></a>2、判断帐号密码输入无误后调用</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span>($(<span class="string">'#rememberMe'</span>).is(<span class="string">':checked'</span>))&#123;</div><div class="line">         setCookie(<span class="string">'customername'</span>, $(<span class="string">'#username'</span>).val().trim(), <span class="number">7</span>)</div><div class="line">        setCookie(<span class="string">'customerpass'</span>, $(<span class="string">'#password'</span>).val().trim(), <span class="number">7</span>)</div><div class="line">       &#125;</div></pre></td></tr></table></figure>
<h4 id="3、进入登录界面后，判断cookie中是否有帐号密码，如果有就自动填充"><a href="#3、进入登录界面后，判断cookie中是否有帐号密码，如果有就自动填充" class="headerlink" title="3、进入登录界面后，判断cookie中是否有帐号密码，如果有就自动填充"></a>3、进入登录界面后，判断cookie中是否有帐号密码，如果有就自动填充</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">    $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  <span class="comment">//获取cookie</span></div><div class="line">  <span class="keyword">var</span> cusername = getCookie(<span class="string">'customername'</span>);</div><div class="line">  <span class="keyword">var</span> cpassword = getCookie(<span class="string">'customerpass'</span>);</div><div class="line">  <span class="keyword">if</span>(cusername != <span class="string">""</span> &amp;&amp; cpassword != <span class="string">""</span>)&#123;</div><div class="line">    $(<span class="string">"#username"</span>).val(cusername);</div><div class="line">    $(<span class="string">"#password"</span>).val(cpassword);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p> 最后附上字符串加密解密算法<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">eval</span>(<span class="function"><span class="keyword">function</span>(<span class="params">p,a,c,k,e,r</span>)</span>&#123;e=<span class="function"><span class="keyword">function</span>(<span class="params">c</span>)</span>&#123;<span class="keyword">return</span>(c&lt;a?<span class="string">''</span>:e(<span class="built_in">parseInt</span>(c/a)))+((c=c%a)&gt;<span class="number">35</span>?<span class="built_in">String</span>.fromCharCode(c+<span class="number">29</span>):c.toString(<span class="number">36</span>))&#125;;<span class="keyword">if</span>(!<span class="string">''</span>.replace(<span class="regexp">/^/</span>,<span class="built_in">String</span>))&#123;<span class="keyword">while</span>(c--)r[e(c)]=k[c]||e(c);k=[<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> r[e]&#125;];e=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">'\\w+'</span>&#125;;c=<span class="number">1</span>&#125;;<span class="keyword">while</span>(c--)<span class="keyword">if</span>(k[c])p=p.replace(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">'\\b'</span>+e(c)+<span class="string">'\\b'</span>,<span class="string">'g'</span>),k[c]);<span class="keyword">return</span> p&#125;(<span class="string">'A G(a,b)&#123;x(b==v||b.7&lt;=0)&#123;D.y("z R P O");t v&#125;6 c="";s(6 i=0;i&lt;b.7;i++)&#123;c+=b.u(i).n()&#125;6 d=m.r(c.7/5);6 e=l(c.9(d)+c.9(d*2)+c.9(d*3)+c.9(d*4)+c.9(d*5));6 f=m.M(b.7/2);6 g=m.B(2,C)-1;x(e&lt;2)&#123;D.y("L K J z");t v&#125;6 h=m.F(m.H()*N)%I;c+=h;w(c.7&gt;q)&#123;c=(l(c.o(0,q))+l(c.o(q,c.7))).n()&#125;c=(e*c+f)%g;6 j="";6 k="";s(6 i=0;i&lt;a.7;i++)&#123;j=l(a.u(i)^m.r((c/g)*E));x(j&lt;p)&#123;k+="0"+j.n(p)&#125;Q k+=j.n(p);c=(e*c+f)%g&#125;h=h.n(p);w(h.7&lt;8)h="0"+h;k+=h;t k&#125;A S(a,b)&#123;6 c="";s(6 i=0;i&lt;b.7;i++)&#123;c+=b.u(i).n()&#125;6 d=m.r(c.7/5);6 e=l(c.9(d)+c.9(d*2)+c.9(d*3)+c.9(d*4)+c.9(d*5));6 f=m.F(b.7/2);6 g=m.B(2,C)-1;6 h=l(a.o(a.7-8,a.7),p);a=a.o(0,a.7-8);c+=h;w(c.7&gt;q)&#123;c=(l(c.o(0,q))+l(c.o(q,c.7))).n()&#125;c=(e*c+f)%g;6 j="";6 k="";s(6 i=0;i&lt;a.7;i+=2)&#123;j=l(l(a.o(i,i+2),p)^m.r((c/g)*E));k+=T.U(j);c=(e*c+f)%g&#125;t k&#125;'</span>,<span class="number">57</span>,<span class="number">57</span>,<span class="string">'||||||var|length||charAt||||||||||||parseInt|Math|toString|substring|16|10|floor|for|return|charCodeAt|null|while|if|log|key|function|pow|31|console|255|round|encrypt|random|100000000|the|change|plesae|ceil|1000000000|empty|be|else|cannot|decrypt|String|fromCharCode'</span>.split(<span class="string">'|'</span>),<span class="number">0</span>,&#123;&#125;))</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在登录界面添加记住密码功能，我首先想到的是在java后台中调用cookie存放账号密码，大致如下：&lt;/p&gt;

&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>css中input与button高度不一致的原因及解决方法</title>
    <link href="http://yoursite.com/2016/12/10/cssHieght/"/>
    <id>http://yoursite.com/2016/12/10/cssHieght/</id>
    <published>2016-12-10T07:32:16.000Z</published>
    <updated>2016-12-10T07:32:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>【css文本框与按钮不对齐解决方案 】button在高度计算上始终使用了Quirks模式。在Quirks模式下，边框的计算是在元素的宽度内的，而不像标准模式一样计算在外部（button的高度包含边框的高度，而文本框text则不包含边框高度。）</p>
<p>表单是网页中的重要元素，以及高频率出现的元素，如何把表单做的漂亮非常重要。首先我们需要解决一个实际的问题，就是文本框与按钮不对齐的问题。这个看似简单的问题追究到底可以发现很多我们未尝想到的原理。按钮(button)的高的解析问题导致了不对其问题的根本原因。下面演示正确的代码示范。</p>
<p>文字要包含在label标签中，并设置行高，否则文字会与文本框的顶 端对齐。文本框要设置vertical-align:middle;否则文本框与button顶端对齐。button中文字垂直居中，要设置高和行高，行高要小于高。</p>
<p>对input标记设定样式，代码如下：</p>
<p>html 代码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;form&gt; &lt;input type=”text” name=”textfield” id=”textfield” /&gt;</div><div class="line">&lt;input type=”submit” name=”button” id=”button” value=”提交” /&gt;</div><div class="line">&lt;/form&gt;</div></pre></td></tr></table></figure></p>
<p>CSS 代码<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#textfield&#123;border:1px solid #000;height:16px;&#125;</div><div class="line">#button&#123;background:#FFF;color:#000;border:1px solid #000;height:20px;&#125;</div></pre></td></tr></table></figure></p>
<p>文本域设置高度 16px，按钮高度需要设置 20px。按照 IE 的标准正常对齐，但在 Firefox 中文本域和按钮高度是错开的。</p>
<p>此时通过对 input 标记设定左浮动 (float:left)，即可兼容 Firefox，CSS 代码如下：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#textfield&#123;border:1px solid #000;height:16px;float:left;&#125;</div><div class="line">#button&#123;background:#FFF;color:#000;border:1px solid #000;height:20px;float:left;&#125;</div></pre></td></tr></table></figure></p>
<p>当然，可以使用CSS Hack以更有针对性地控制浏览器表现。</p>
<p>小结：button在高度计算上始终使用了Quirks模式。在Quirks模式下，边框的计算是在元素的宽度内的，而不像标准模式一样计算在外部，所以在text和button上同时设置边框就会得到button的高度比text小的现象。所以文本框要与button按钮对齐，button的高度是要高于文本text</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;【css文本框与按钮不对齐解决方案 】button在高度计算上始终使用了Quirks模式。在Quirks模式下，边框的计算是在元素的宽度内的，而不像标准模式一样计算在外部（button的高度包含边框的高度，而文本框text则不包含边框高度。）&lt;/p&gt;
&lt;p&gt;表单是网页中的重
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Vue.js中组件props数据传递简单示例</title>
    <link href="http://yoursite.com/2016/12/06/vueProps/"/>
    <id>http://yoursite.com/2016/12/06/vueProps/</id>
    <published>2016-12-06T07:30:08.000Z</published>
    <updated>2016-12-10T07:31:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>Vue.js中的组件非常重要，我们首先还是先来理清其中比较简单的部分，用props传递数据。<br>首先什么是props呢？<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">组件实例的作用域是孤立的。这意味着不能并且不应该在子组件的模板内直接引用父组件的数据。可以使用 props 把数据传给子组件。</div></pre></td></tr></table></figure></p>
<p>官方的解释，反正就是组件不让用父组件的data，也就是说不能把new Vue里写好的data当做公用的来用了，必须一步步的传递给子组件。OK，上代码看<br>首先是html部分，简单的写一个app<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;div id=<span class="string">"app3"</span>&gt;</div><div class="line">    &lt;my-component :showname="showname" :data="data" :shownone="shownone"&gt;&lt;/my-component&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure></p>
<p>拉下来是js部分 </p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</div><div class="line">    <span class="keyword">var</span> mycom2 = Vue.extend(&#123;</div><div class="line">        <span class="attr">template</span>:<span class="string">'&#123;&#123;data.name&#125;&#125;&lt;br/&gt;&#123;&#123;data.age&#125;&#125;&lt;br/&gt;&#123;&#123;showname&#125;&#125;&lt;br/&gt;&#123;&#123;bname&#125;&#125;&lt;br/&gt;&#123;&#123;bdata.bchild&#125;&#125;'</span>,</div><div class="line">        <span class="attr">props</span>:[<span class="string">'showname'</span>,<span class="string">'data'</span>,<span class="string">'bname'</span>,<span class="string">'bdata'</span>]</div><div class="line">    &#125;);</div><div class="line">    <span class="keyword">var</span> bind_data = &#123;</div><div class="line">        <span class="attr">bname</span>:<span class="string">'外部绑定的名字在这里(来自mycom组件并且是外部定义的var，试试console里修改bind_data.bname=XXXX)'</span>,</div><div class="line">        <span class="attr">bdata</span>:&#123;</div><div class="line">            <span class="attr">bchild</span>:<span class="string">'外部的child(来自mycom组件并且是外部定义的var，试试console里修改bind_data.bdata.bchild=XXXX)'</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">var</span> mycom = Vue.component(<span class="string">'my-component'</span>,&#123;</div><div class="line">        <span class="attr">template</span>:<span class="string">'&#123;&#123;showname&#125;&#125;：&lt;br/&gt;&lt;my-component2 :data="data" :bname="bname" :bdata="bdata" showname="直接显示名字(来自直接传递)"&gt;&lt;/my-component2&gt;&lt;br/&gt;shownone:&#123;&#123;shownone&#125;&#125;'</span>,</div><div class="line">        <span class="attr">props</span>:[<span class="string">'showname'</span>,<span class="string">'data'</span>],</div><div class="line">        <span class="attr">components</span>:&#123;</div><div class="line">            <span class="string">'my-component2'</span>:mycom2</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">data</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            <span class="keyword">return</span> bind_data;</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">    <span class="keyword">new</span> Vue(&#123;</div><div class="line">        <span class="attr">el</span>:<span class="string">'#app3'</span>,</div><div class="line">        <span class="attr">data</span>:&#123;</div><div class="line">            <span class="string">'showname'</span>:<span class="string">'测试通信(来自vue)'</span>,</div><div class="line">            <span class="string">'data'</span>:&#123;</div><div class="line">                <span class="attr">name</span>:<span class="string">'名字(来自vue)'</span>,</div><div class="line">                <span class="attr">age</span>:<span class="string">'年龄(来自vue)'</span></div><div class="line">            &#125;,</div><div class="line">            <span class="string">'shownone'</span>:<span class="string">'这段显示不出来'</span></div><div class="line">        &#125;</div><div class="line">    &#125;)</div><div class="line">&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure>
<p>1.先从下往上看，我们在Vue对象中定义了一个data，里面有三个字段，showname,data,shownone，在第一级组件my-component中显示showname,shownone，可以看出，如果不在mycom的props属性中加入shownone的话，shownone是无法显示的</p>
<p>2.在mycom中，也定义了一个data，并且使用了外部变量bind_data，另外给mycom2传递的showname没有用:号，也就是不是绑定的数据，直接传递的字符串，同时将Vue对象中的data直接传递到下一层</p>
<p>3.mycom2的模板就是把上几级传来的东西全部显示出来 </p>
<p> 大家测试的时候，可以使用console来调试变量，可以修改mycom和mycom2中的props来体会效果。</p>
<p>官方文档链接：<a href="http://cn.vuejs.org/guide/components.html#u52A8_u6001_Props" target="_blank" rel="external">http://cn.vuejs.org/guide/components.html#u52A8_u6001_Props</a> </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Vue.js中的组件非常重要，我们首先还是先来理清其中比较简单的部分，用props传递数据。&lt;br&gt;首先什么是props呢？&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>移动端1px的边框</title>
    <link href="http://yoursite.com/2016/12/03/Moblie/"/>
    <id>http://yoursite.com/2016/12/03/Moblie/</id>
    <published>2016-12-03T07:25:18.000Z</published>
    <updated>2016-12-10T07:28:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍几种 移动端视网膜（Retina）屏幕下1px边框线的解决方法。</p>
<h2 id="1、通过viewport-rem的方式来兼容。"><a href="#1、通过viewport-rem的方式来兼容。" class="headerlink" title="1、通过viewport + rem的方式来兼容。"></a>1、通过viewport + rem的方式来兼容。</h2><p>目前这种兼容方案相对比较完美，适合新项目（老项目改用REM单位成本会比较高)。<br>在devicePixelRatio = 2 时，输出viewport</p>
<p><pre><meta name="viewport" content="initial-scale=0.5, maximum-scale=0.5, minimum-scale=0.5, user-scalable=no"></pre><br>在devicePixelRatio = 3 时，输出viewport</p>
<p><pre><meta name="viewport" content="initial-scale=0.3333333333333333, maximum-scale=0.3333333333333333, minimum-scale=0.3333333333333333, user-scalable=no"></pre><br>同时通过设置对应viewport的rem基准值，这种方式就可以像以前一样轻松愉快的写1px了。</p>
<p>##2、transform: scale(0.5)<br>实现方式<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">height:<span class="number">1</span>px;</div><div class="line">-webkit-transform: scaleY(<span class="number">0.5</span>);</div><div class="line">-webkit-transform-origin:<span class="number">0</span> <span class="number">0</span>;</div><div class="line">overflow: hidden;</div></pre></td></tr></table></figure></p>
<p>优点</p>
<p>圆角无法实现，hack代码多，实现4条边框比较闹心</p>
<p>缺点</p>
<p>只能单独使用，如果嵌套，scale的作用也会对包含的元素产生，不想要的影响，所以此种方案配合:after和:before独立使用较多，比如画一个商品的边框四条线，容器的after和before可以画2条线，利用容器的父元素的after、before再画2条线。<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">.after-scale&#123;</div><div class="line">  position: relative;</div><div class="line">&#125;</div><div class="line">.after-scale:after&#123;</div><div class="line">  content:"";</div><div class="line">  position: absolute;</div><div class="line">  bottom:0px;</div><div class="line">  left:0px;</div><div class="line">  right:0px;</div><div class="line">  border-bottom:1px solid #c8c7cc;</div><div class="line">  -webkit-transform:scaleY(.5);</div><div class="line">  -webkit-transform-origin:0 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="3、box-shadow"><a href="#3、box-shadow" class="headerlink" title="3、box-shadow"></a>3、box-shadow</h2><p>实现方式</p>
<p>利用css 对阴影处理的方式实现0.5px的效果</p>
<p>底部一条线</p>
<p><pre>-webkit-box-shadow:0 1px 1px -1px rgba(0, 0, 0, 0.5);</pre><br>著作权归作者所有。<br>商业转载请联系作者获得授权,非商业转载请注明出处。<br>链接:<a href="http://caibaojian.com/mobile-1px-border.html" target="_blank" rel="external">http://caibaojian.com/mobile-1px-border.html</a><br>来源:<a href="http://caibaojian.com" target="_blank" rel="external">http://caibaojian.com</a></p>
<p>优点基本所有场景都能满足，包含圆角的button，单条，多条线，</p>
<p>缺点</p>
<p>颜色不好处理， 黑色 rgba(0,0,0,1) 最浓的情况了。有阴影出现，不好用。</p>
<h2 id="4、background-image"><a href="#4、background-image" class="headerlink" title="4、background-image"></a>4、background-image</h2><p>实现方式</p>
<p>设置1px通过css 实现的image，50%有颜色，50%透明<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">.border &#123;</div><div class="line">  background-image:linear-gradient(<span class="number">180</span>deg, red, red <span class="number">50</span>%, transparent <span class="number">50</span>%),</div><div class="line">  linear-gradient(<span class="number">270</span>deg, red, red <span class="number">50</span>%, transparent <span class="number">50</span>%),</div><div class="line">  linear-gradient(<span class="number">0</span>deg, red, red <span class="number">50</span>%, transparent <span class="number">50</span>%),</div><div class="line">  linear-gradient(<span class="number">90</span>deg, red, red <span class="number">50</span>%, transparent <span class="number">50</span>%);</div><div class="line">  background-size: <span class="number">100</span>% <span class="number">1</span>px,<span class="number">1</span>px <span class="number">100</span>% ,<span class="number">100</span>% <span class="number">1</span>px, <span class="number">1</span>px <span class="number">100</span>%;</div><div class="line">  background-repeat: no-repeat;</div><div class="line">  background-position: top, right top,  bottom, left top;</div><div class="line">  padding: <span class="number">10</span>px;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>优点</p>
<p>配合background-image,background-size,background-position 可以实现单条，多条边框。边框的颜色随意设置<br>缺点<br>如果有圆角的效果，很sorry 圆角的地方没有线框的颜色。都要写的代码也不少</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍几种 移动端视网膜（Retina）屏幕下1px边框线的解决方法。&lt;/p&gt;
&lt;h2 id=&quot;1、通过viewport-rem的方式来兼容。&quot;&gt;&lt;a href=&quot;#1、通过viewport-rem的方式来兼容。&quot; class=&quot;headerlink&quot; title=&quot;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>jQuery发送验证码60秒倒计时</title>
    <link href="http://yoursite.com/2016/11/30/proving/"/>
    <id>http://yoursite.com/2016/11/30/proving/</id>
    <published>2016-11-30T07:23:36.000Z</published>
    <updated>2016-12-10T07:24:24.000Z</updated>
    
    <content type="html"><![CDATA[<p></p><p>平时我们在登录注册时有很多需要发送验证码，今天我就来说说关于发送验证码是的倒计时是如何实现的</p><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line"></div><div class="line"> &lt;meta  http-equiv="content-type" content="text/html; charset=UTF-8"&gt;</div><div class="line"> &lt;meta content="width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no" id="viewport" name="viewport"&gt;</div><div class="line"> &lt;title&gt;&lt;/title&gt;</div><div class="line">&lt;script src="http://libs.baidu.com/jquery/1.10.2/jquery.min.js"&gt;&lt;/script&gt;</div><div class="line">&lt;script type="text/javascript"&gt; </div><div class="line">var countdown=60; </div><div class="line">function settime(obj) &#123; </div><div class="line">    if (countdown == 0) &#123; </div><div class="line">        obj.removeAttribute("disabled");    </div><div class="line">        obj.value="免费获取验证码"; </div><div class="line">        countdown = 60; </div><div class="line">        return;</div><div class="line">    &#125; else &#123; </div><div class="line">        obj.setAttribute("disabled", true); </div><div class="line">        obj.value="重新发送(" + countdown + ")"; </div><div class="line">        countdown--; </div><div class="line">    &#125; </div><div class="line">setTimeout(function() &#123; </div><div class="line">    settime(obj) &#125;</div><div class="line">    ,1000) </div><div class="line">&#125;</div><div class="line">  </div><div class="line">&lt;/script&gt;</div><div class="line"></div><div class="line">&lt;body&gt; </div><div class="line">&lt;input type="button" id="btn" value="免费获取验证码" onclick="settime(this)" /&gt; </div><div class="line"></div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure><p></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p&gt;平时我们在登录注册时有很多需要发送验证码，今天我就来说说关于发送验证码是的倒计时是如何实现的&lt;/p&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>9个常用的正则表达式</title>
    <link href="http://yoursite.com/2016/11/28/regular/"/>
    <id>http://yoursite.com/2016/11/28/regular/</id>
    <published>2016-11-28T07:21:57.000Z</published>
    <updated>2016-12-10T07:22:35.000Z</updated>
    
    <content type="html"><![CDATA[<p></p><p>正则表达式，一个十分古老而又强大的文本处理工具，仅仅用一段非常简短的表达式语句，便能够快速实现一个非常复杂的业务逻辑。熟练地掌握正则表达式的话，能够使你的开发效率得到极大的提升。&lt;/p</p>
<p></p><p>正则表达式经常被用于字段或任意字符串的校验，如下面这段校验基本日期格式的JavaScript代码：</p><p></p>
<p></p><p></p>
<p><pre>var reg = /^(\d{1,4})(-|\/)(\d{1,2})\2(\d{1,2})$/;<br>var r = fieldValue.match(reg);<br>if(r==null)alert(‘Date format error!’);`<br></pre></p>
<p></p><p>下面是技匠整理的，在前端开发中经常使用到的20个正则表达式。</p><p></p>
<h3 id="1-校验密码强度"><a href="#1-校验密码强度" class="headerlink" title="1.校验密码强度"></a>1.校验密码强度</h3><p></p><p>密码的强度必须是包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间。</p><p></p>
<p><pre>^(?=.<em>\d)(?=.</em>[a-z])(?=.*[A-Z]).{8,10}$</pre></p>
<p>###2.校验中文</p>
<p></p><p>字符串仅能是中文。</p><p></p>
<p><pre>^[\u4e00-\u9fa5]{0,}$</pre></p>
<h3 id="3-由数字、26个英文字母或下划线组成的字符串"><a href="#3-由数字、26个英文字母或下划线组成的字符串" class="headerlink" title="3. 由数字、26个英文字母或下划线组成的字符串"></a>3. 由数字、26个英文字母或下划线组成的字符串</h3><p><pre>^\w+$</pre></p>
<p>###4. 校验E-Mail 地址</p>
<p></p><p>同密码一样，下面是E-mail地址合规性的正则检查语句。</p><p></p>
<p><pre>[\w!#$%&amp;’<em>+/=?^_`{|}~-]+(?:\.[\w!#$%&amp;’</em>+/=?^_`{|}~-]+)<em>@(?:[\w](?:[\w-]</em>[\w])?\.)+<a href="?:[\\w-]*[\\w]">\w</a>?</pre></p>
<h3 id="5-校验身份证号码"><a href="#5-校验身份证号码" class="headerlink" title="5.校验身份证号码"></a>5.校验身份证号码</h3><p></p><p>下面是身份证号码的正则校验。15 或 18位。</p><p></p>
<p></p><p>15位：</p><p></p>
<p><pre>^[1-9]\d{7}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{3}$</pre></p>
<p></p><p>18位：</p><p></p>
<p><pre>^[1-9]\d{5}[1-9]\d{3}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{3}([0-9]|X)$</pre></p>
<h3 id="6-校验日期"><a href="#6-校验日期" class="headerlink" title="6.校验日期"></a>6.校验日期</h3><p></p><p>“yyyy-mm-dd“ 格式的日期校验，已考虑平闰年。</p><p></p>
<p><pre>^(?:(?!0000)[0-9]{4}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)-02-29)$</pre></p>
<h3 id="7-校验金额"><a href="#7-校验金额" class="headerlink" title="7.校验金额"></a>7.校验金额</h3><p></p><p>金额校验，精确到2位小数。</p><p></p>
<p><pre>^[0-9]+(.[0-9]{2})?$</pre></p>
<h3 id="8-校验手机号"><a href="#8-校验手机号" class="headerlink" title="8.校验手机号"></a>8.校验手机号</h3><p></p><p>下面是国内 13、15、18开头的手机号正则表达式。</p><p></p>
<p><pre>^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\d{8}$</pre></p>
<h3 id="9-判断IE的版本"><a href="#9-判断IE的版本" class="headerlink" title="9.判断IE的版本"></a>9.判断IE的版本</h3><p></p><p>IE目前还没被完全取代，很多页面还是需要做版本兼容，下面是IE版本检查的表达式。</p><p></p>
<p><pre>^.<em>MSIE <a href="?:\\.[0-9]+">5-8</a>?(?!.</em>Trident\/[5-9]\.0).*$</pre></p>
<p></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p&gt;正则表达式，一个十分古老而又强大的文本处理工具，仅仅用一段非常简短的表达式语句，便能够快速实现一个非常复杂的业务逻辑。熟练地掌握正则表达式的话，能够使你的开发效率得到极大的提升。&amp;lt;/p&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;p&gt;正则表达式经常被用于字段或任意字符串的校
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>人人须知的 jQuery 技巧</title>
    <link href="http://yoursite.com/2016/11/26/jqSkill/"/>
    <id>http://yoursite.com/2016/11/26/jqSkill/</id>
    <published>2016-11-26T11:19:10.000Z</published>
    <updated>2016-12-09T11:38:52.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="检查-jQuery-是否加载"><a href="#检查-jQuery-是否加载" class="headerlink" title="检查 jQuery 是否加载"></a>检查 jQuery 是否加载</h2><p><br>在使用 jQuery 进行任何操作之前，你需要先确认它已经加载：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">if (typeof jQuery == &apos;undefined&apos;) &#123;</div><div class="line">  console.log(&apos;jQuery hasn\&apos;t loaded&apos;);</div><div class="line">&#125; else &#123;</div><div class="line">  console.log(&apos;jQuery has loaded&apos;);</div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br>## 返回顶部按钮<br><p><br>利用 jQuery 中的 animate 和 scrollTop 方法，你无需插件就可以创建简单的 scroll up 效果:<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">// 返回顶部</div><div class="line">$(&apos;a.top&apos;).click(function (e) &#123;</div><div class="line">  e.preventDefault();</div><div class="line">  $(document.body).animate(&#123;scrollTop: 0&#125;, 800);</div><div class="line">&#125;);</div></pre></td></tr></table></figure><br><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;!-- 设置锚 --&gt;</div><div class="line">&lt;a class=&quot;top&quot; href=&quot;#&quot;&gt;Back to top&lt;/a&gt;</div></pre></td></tr></table></figure><br><br><p><br>调整 scrollTop 的值即可改变滚动着陆位置。你实际所做的是在 800 毫秒内不断设置文档主体的位置，直到它滚动到顶部。<br></p>

<h2 id="预加载图片"><a href="#预加载图片" class="headerlink" title="预加载图片"></a>预加载图片</h2><p><br>如果你的网页使用了大量并非立即可见的图片（例如悬停鼠标触发的图片），那么预加载这些图片就显得很有意义了:<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$.preloadImages = function () &#123;</div><div class="line">  for (var i = 0; i &lt; arguments.length; i++) &#123;</div><div class="line">    $(&apos;&lt;img&gt;&apos;).attr(&apos;src&apos;, arguments[i]);</div><div class="line">  &#125;</div><div class="line">&#125;;</div><div class="line">$.preloadImages(&apos;img/hover-on.png&apos;, &apos;img/hover-off.png&apos;);</div></pre></td></tr></table></figure><br><br>## 判断图片是否加载完成<br><p><br>在有些情况下，为了继续执行脚本，你需要检查图片是否已经完全加载:<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(&apos;img&apos;).load(function () &#123;</div><div class="line">  console.log(&apos;image load successful&apos;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure><br><br><p><br>同样，换用一个带有 id 或者 class 属性的 <img> 标签，你也可以检查特定图片是否加载完成。<br></p>

<h2 id="自动修复失效图片"><a href="#自动修复失效图片" class="headerlink" title="自动修复失效图片"></a>自动修复失效图片</h2><p><br>如果你在你的网站上发现了失效的图片链接，逐个去替换它们将会是个苦差。这段简单的代码可以很大程度地减轻痛苦：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(&apos;img&apos;).on(&apos;error&apos;, function () &#123;</div><div class="line">  if(!$(this).hasClass(&apos;broken-image&apos;)) &#123;</div><div class="line">    $(this).prop(&apos;src&apos;, &apos;img/broken.png&apos;).addClass(&apos;broken-image&apos;);</div><div class="line">  &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure><br><br><p><br>即使你暂无任何失效的链接，添加这段代码也不会有任何损失。<br></p>

<h2 id="鼠标悬停切换-class"><a href="#鼠标悬停切换-class" class="headerlink" title="鼠标悬停切换 class"></a>鼠标悬停切换 class</h2><p><br>如果你希望在用户将鼠标悬停在某个可点击元素上时改变它的视觉效果，你可以在该元素被悬停时给它添加一个 class，当鼠标不再悬停时，移除这个 class：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(&apos;.btn&apos;).hover(function () &#123;</div><div class="line">  $(this).addClass(&apos;hover&apos;);</div><div class="line">&#125;, function () &#123;</div><div class="line">  $(this).removeClass(&apos;hover&apos;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure><br><br><p><br>如果你还寻求更简单的途径，可以使用 toggleClass 方法，仅需添加必要的 CSS：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(&apos;.btn&apos;).hover(function () &#123;</div><div class="line">  $(this).toggleClass(&apos;hover&apos;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure><br><br><p><br>注：在这种情况下，使用 CSS 或许是一个更快速的解决方案，但这种方法仍然值得稍作了解。<br></p>

<h2 id="禁用输入字段"><a href="#禁用输入字段" class="headerlink" title="禁用输入字段"></a>禁用输入字段</h2><p><br>有时，你可能希望在用户完成特定操作（例如，勾选“我已阅读条例”的确认框）前禁用表单的提交按钮或禁用其中某个输入框。你可以在你的输入字段上添加 disabled 属性，而后你能在需要时启用它：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(&apos;input[type=&quot;submit&quot;]&apos;).prop(&apos;disabled&apos;, true);</div></pre></td></tr></table></figure><br><br><p><br>你只需在输入字段上再次运行 prop 方法, 但是这一次把 disabled 值改为 false：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(&apos;input[type=&quot;submit&quot;]&apos;).prop(&apos;disabled&apos;, false);</div></pre></td></tr></table></figure><br><br>## 阻止链接加载<br><p><br>有时你不希望链接到指定页面或者重载当前页面，而是想让它们干些别的，例如触发其它脚本。这需要在阻止默认动作上做些文章：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(&apos;a.no-link&apos;).click(function (e) &#123;</div><div class="line">  e.preventDefault();</div><div class="line">&#125;);</div></pre></td></tr></table></figure><br><br>## 缓存 jQuery 选择器<br><p><br>想想你在项目中一次又一次地写了多少相同的选择器吧。每个 $(‘.element’) 都必须查询一次整个 DOM,不管它是否曾这样执行过。作为代替，我们只运行一次选择器，并把结果储存在一个变量中：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var blocks = $(&apos;#blocks&apos;).find(&apos;li&apos;);</div></pre></td></tr></table></figure><br><br><p><br>现在你能在任何地方使用 blocks 变量而无需每次查询 DOM 了:<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$(&apos;#hideBlocks&apos;).click(function () &#123;</div><div class="line">  blocks.fadeOut();</div><div class="line">&#125;);</div><div class="line"></div><div class="line">$(&apos;#showBlocks&apos;).click(function () &#123;</div><div class="line">  blocks.fadeIn();</div><div class="line">&#125;);</div></pre></td></tr></table></figure><br><br><p><br>缓存 jQuery 的选择器是种简单的性能提升。<br></p>

<h2 id="切换淡出-滑动"><a href="#切换淡出-滑动" class="headerlink" title="切换淡出 / 滑动"></a>切换淡出 / 滑动</h2><p><br>淡出和滑动都是我们在 jQuery 中大量使用的效果。你可能只想在用户点击后展现某个元素，此时用 fadeIn 和 slideDown 方法就很完美。但是如果你希望这个元素在首次点击时出现，在再次点击时消失，这段代码就很有用了：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">// 淡出</div><div class="line">$(&apos;.btn&apos;).click(function () &#123;</div><div class="line">  $(&apos;.element&apos;).fadeToggle(&apos;slow&apos;);</div><div class="line">&#125;);</div><div class="line">// 切换</div><div class="line">$(&apos;.btn&apos;).click(function () &#123;</div><div class="line">  $(&apos;.element&apos;).slideToggle(&apos;slow&apos;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure><br><br>## 简单的手风琴效果<br><p><br>这是一个快速实现手风琴效果的简单方法:<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">// 关闭所有面板</div><div class="line">$(&apos;#accordion&apos;).find(&apos;.content&apos;).hide();</div><div class="line">// 手风琴效果</div><div class="line">$(&apos;#accordion&apos;).find(&apos;.accordion-header&apos;).click(function () &#123;</div><div class="line">  var next = $(this).next();</div><div class="line">  next.slideToggle(&apos;fast&apos;);</div><div class="line">  $(&apos;.content&apos;).not(next).slideUp(&apos;fast&apos;);</div><div class="line">  return false;</div><div class="line">&#125;);</div></pre></td></tr></table></figure><br><br><p><br>通过添加这段脚本，你实际要做的只是提供必要的 HTML 元素以便它正常运行。<br></p>

<h2 id="使两个-div-等高"><a href="#使两个-div-等高" class="headerlink" title="使两个 div 等高"></a>使两个 div 等高</h2><p><br>有时你希望无论两个 div 各自包含什么内容，它们总有相同的高度：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(&apos;.div&apos;).css(&apos;min-height&apos;, $(&apos;.main-div&apos;).height());</div></pre></td></tr></table></figure><br><br><p><br>这个例子设置了 min-height，意味着高度可以大于主 div 而不能小于它。然而，更灵活的方法是遍历一组元素，然后将高度设置为最高元素的高度：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">var $columns = $(&apos;.column&apos;);</div><div class="line">var height = 0;</div><div class="line">$columns.each(function () &#123;</div><div class="line">  if ($(this).height() &gt; height) &#123;</div><div class="line">    height = $(this).height();</div><div class="line">  &#125;</div><div class="line">&#125;);</div><div class="line">$columns.height(height);</div></pre></td></tr></table></figure><br><br><p><br>如果你希望所有列高度相同：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var $rows = $(&apos;.same-height-columns&apos;);</div><div class="line">$rows.each(function () &#123;</div><div class="line">  $(this).find(&apos;.column&apos;).height($(this).height());</div><div class="line">&#125;);</div></pre></td></tr></table></figure><br><br>## 在新标签页 / 新窗口打开外部链接<br><p><br>在一个新的浏览器标签页或窗口中打开外部链接，并确保相同来源的链接在同一个标签页或者窗口中打开：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(&apos;a[href^=&quot;http&quot;]&apos;).attr(&apos;target&apos;, &apos;_blank&apos;);</div><div class="line">$(&apos;a[href^=&quot;//&quot;]&apos;).attr(&apos;target&apos;, &apos;_blank&apos;);</div><div class="line">$(&apos;a[href^=&quot;&apos; + window.location.origin + &apos;&quot;]&apos;).attr(&apos;target&apos;, &apos;_self&apos;);</div></pre></td></tr></table></figure><br><br>注： window.location.origin 在 IE10 中不可用. <a href="http://tosbourn.com/a-fix-for-window-location-origin-in-internet-explorer/" target="_blank" rel="external">这个修复方案</a> 正是关注于该问题。<br><br><br>## 通过文本查找元素<br><p><br>通过使用 jQuery 的 contains() 选择器，你能够查找元素内容中的文本。若文本不存在，该元素将被隐藏：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var search = $(&apos;#search&apos;).val();</div><div class="line">$(&apos;div:not(:contains(&quot;&apos; + search + &apos;&quot;))&apos;).hide();</div></pre></td></tr></table></figure><br><br>## 在 visibility 属性变化时触发<br><p><br>当用户的焦点离开或者重新回到某个标签页时，触发 Javasrcipt：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$(document).on(&apos;visibilitychange&apos;, function (e) &#123;</div><div class="line">  if (e.target.visibilityState === &quot;visible&quot;) &#123;</div><div class="line">    console.log(&apos;Tab is now in view!&apos;);</div><div class="line">  &#125; else if (e.target.visibilityState === &quot;hidden&quot;) &#123;</div><div class="line">    console.log(&apos;Tab is now hidden!&apos;);</div><div class="line">  &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure><br><br>## Ajax 调用错误处理<br><p><br>当一个 Ajax 调用返回 404 或 500 错误时，错误处理程序将被执行。若错误处理未被定义，其它 jQuery 代码可能不再有效。所以定义一个全局的 Ajax 错误处理:<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(document).ajaxError(function (e, xhr, settings, error) &#123;</div><div class="line">  console.log(error);</div><div class="line">&#125;);</div></pre></td></tr></table></figure><br><br>## 链式插件调用<br><p><br>jQuery 允许通过“链式”插件调用的方法，来缓解反复查询 DOM 和创建多个 jQuery 对象的过程。例如，下面的代码代表着你的插件调用：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(&apos;#elem&apos;).show();</div><div class="line">$(&apos;#elem&apos;).html(&apos;bla&apos;);</div><div class="line">$(&apos;#elem&apos;).otherStuff();</div></pre></td></tr></table></figure><br><br><p><br>通过使用链式操作，有了显著的改善:<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$(&apos;#elem&apos;)</div><div class="line">  .show()</div><div class="line">  .html(&apos;bla&apos;)</div><div class="line">  .otherStuff();</div></pre></td></tr></table></figure><br><br><p><br>另一种方法是在变量（以 $ 为前缀）中，对元素进行缓存：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var $elem = $(&apos;#elem&apos;);</div><div class="line">$elem.hide();</div><div class="line">$elem.html(&apos;bla&apos;);</div><div class="line">$elem.otherStuff();</div></pre></td></tr></table></figure><br><br><p><br>无论是链式操作，还是缓存元素，都是 jQuery 中用以简化和优化代码的最佳实践。<br></p>



<p>转载-&gt;<a href="https://github.com/xitu/gold-miner/blob/master/TODO/jQuery-Tips-Everyone-Should-Know.md" target="_blank" rel="external">https://github.com/xitu/gold-miner/blob/master/TODO/jQuery-Tips-Everyone-Should-Know.md</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;检查-jQuery-是否加载&quot;&gt;&lt;a href=&quot;#检查-jQuery-是否加载&quot; class=&quot;headerlink&quot; title=&quot;检查 jQuery 是否加载&quot;&gt;&lt;/a&gt;检查 jQuery 是否加载&lt;/h2&gt;&lt;p&gt;&lt;br&gt;在使用 jQuery 进行任何操作之
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CSS三栏布局的四种方法</title>
    <link href="http://yoursite.com/2016/11/23/cssLayout/"/>
    <id>http://yoursite.com/2016/11/23/cssLayout/</id>
    <published>2016-11-23T06:30:57.000Z</published>
    <updated>2016-12-09T06:39:25.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><br>总括： 不管是三栏布局还是两栏布局都是我们在平时项目里经常使用的，也许你不知道什么事三栏布局什么是两栏布局但实际已经在用，或许你知道三栏布局的一种或两种方法，但实际操作中也只会依赖那某一种方法，本文具体的介绍了三栏布局的四种方法，并介绍了它的使用场景。<br></p>

<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p><br>所谓三栏布局就是指页面分为左中右三部分然后对中间一部分做自适应的一种布局方式。<br></p>

<h3 id="1-绝对定位法"><a href="#1-绝对定位法" class="headerlink" title="1.绝对定位法"></a>1.绝对定位法</h3><p><br>HTML代码如下:<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;div class=&quot;left&quot;&gt;Left&lt;/div&gt;</div><div class="line">&lt;div class=&quot;main&quot;&gt;Main&lt;/div&gt;</div><div class="line">&lt;div class=&quot;right&quot;&gt;Right&lt;/div&gt;</div></pre></td></tr></table></figure><br><br><p><br>CSS代码如下：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">//简单的进行CSS reset</div><div class="line">body,html&#123;</div><div class="line">    height:100%;</div><div class="line">    padding: 0px;</div><div class="line">    margin:0px;</div><div class="line">&#125;</div><div class="line">//左右绝对定位</div><div class="line">.left,.right&#123;</div><div class="line">    position: absolute;</div><div class="line">    top:0px;</div><div class="line">    background: red;</div><div class="line">    height:100%;</div><div class="line">&#125;</div><div class="line">.left&#123;</div><div class="line">    left:0;</div><div class="line">    width:100px;</div><div class="line">&#125;</div><div class="line">.right&#123;</div><div class="line">    right:0px;</div><div class="line">    width:200px;</div><div class="line">&#125;</div><div class="line">//中间使用margin空出左右元素所占据的空间</div><div class="line">.main&#123;</div><div class="line">    margin:0px 100px 0px 200px;</div><div class="line">    height:100%;</div><div class="line">    background: blue;</div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br><p><br>该方法有个明显的缺点，就是如果中间栏含有最小宽度限制，或是含有宽度的内部元素，当浏览器宽度小到一定程度，会发生层重叠的情况。<br></p>

<h2 id="2-圣杯布局"><a href="#2-圣杯布局" class="headerlink" title="2. 圣杯布局"></a>2. 圣杯布局</h2><p><br>HTML代码如下：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">//注意元素次序</div><div class="line">&lt;div class=&quot;main&quot;&gt;Main&lt;/div&gt;</div><div class="line">&lt;div class=&quot;left&quot;&gt;Left&lt;/div&gt;</div><div class="line">&lt;div class=&quot;right&quot;&gt;Right&lt;/div&gt;</div></pre></td></tr></table></figure><br><br><p><br>CSS代码如下：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">//习惯性的CSS reset</div><div class="line">body,html&#123;</div><div class="line">    height:100%;</div><div class="line">    padding: 0;</div><div class="line">    margin: 0</div><div class="line">&#125;</div><div class="line">//父元素body空出左右栏位</div><div class="line">body &#123;</div><div class="line">    padding-left: 100px;</div><div class="line">    padding-right: 200px;</div><div class="line">&#125;</div><div class="line">//左边元素更改</div><div class="line">.left &#123;</div><div class="line">    background: red;</div><div class="line">    width: 100px;</div><div class="line">    float: left;</div><div class="line">    margin-left: -100%;</div><div class="line">    position: relative;</div><div class="line">    left: -100px;</div><div class="line">    height: 100%;</div><div class="line">&#125;</div><div class="line">//中间部分</div><div class="line">.main &#123;</div><div class="line">    background: blue;</div><div class="line">    width: 100%;</div><div class="line">    height: 100%;</div><div class="line">    float: left;</div><div class="line">&#125;</div><div class="line">//右边元素定义</div><div class="line">.right &#123;</div><div class="line">    background: red;</div><div class="line">    width: 200px;</div><div class="line">    height: 100%;</div><div class="line">    float: left;</div><div class="line">    margin-left: -200px;</div><div class="line">    position: relative;</div><div class="line">    right: -200px;</div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br><p><br>相关解释如下：<br><br>    (1)中间部分需要根据浏览器宽度的变化而变化，所以要用100%，这里设左中右向左浮动，因为中间100%，左层和右层根本没有位置上去<br>    (2)把左层margin负100后，发现left上去了，因为负到出窗口没位置了，只能往上挪<br>    (3)按第二步这个方法，可以得出它只要挪动窗口宽度那么宽就能到最左边了，利用负边距，把左右栏定位<br>    (4)但由于左右栏遮挡住了中间部分，于是采用相对定位方法，各自相对于自己把自己挪出去，得到最终结果<br></p>

<h2 id="3-双飞翼布局"><a href="#3-双飞翼布局" class="headerlink" title="3. 双飞翼布局"></a>3. 双飞翼布局</h2><p><br>HTML代码如下：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;div class=&quot;main&quot;&gt;</div><div class="line">    &lt;div class=&quot;inner&quot;&gt;</div><div class="line">        Main</div><div class="line">    &lt;/div&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">&lt;div class=&quot;left&quot;&gt;Left&lt;/div&gt;</div><div class="line">&lt;div class=&quot;right&quot;&gt;Right&lt;/div&gt;</div></pre></td></tr></table></figure><br><br><p><br>CSS代码如下：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">//CSS reset</div><div class="line">body,html &#123;</div><div class="line">    height:100%;</div><div class="line">    padding: 0;</div><div class="line">    margin: 0</div><div class="line">&#125;</div><div class="line">body &#123;</div><div class="line">    /*padding-left:100px;*/</div><div class="line">    /*padding-right:200px;*/</div><div class="line">&#125;</div><div class="line">.left &#123;</div><div class="line">    background: red;</div><div class="line">    width: 100px;</div><div class="line">    float: left;</div><div class="line">    margin-left: -100%;</div><div class="line">    height: 100%;</div><div class="line">    /*position: relative;*/</div><div class="line">    /*left:-100px;*/</div><div class="line">&#125;</div><div class="line">.main &#123;</div><div class="line">    background: blue;</div><div class="line">    width: 100%;</div><div class="line">    float: left;</div><div class="line">    height: 100%;</div><div class="line">&#125;</div><div class="line">.right &#123;</div><div class="line">    background: red;</div><div class="line">    width: 200px;</div><div class="line">    float: left;</div><div class="line">    margin-left: -200px;</div><div class="line">    height: 100%;</div><div class="line">    /*position:relative;*/</div><div class="line">    /*right:-200px;*/</div><div class="line">&#125;</div><div class="line">//新增inner元素</div><div class="line">.inner &#123;</div><div class="line">    margin-left: 100px;</div><div class="line">    margin-right: 200px;</div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br><p><br>圣杯布局实际看起来是复杂的后期维护性也不是很高，在淘宝UED的探讨下，出来了一种新的布局方式就是双飞翼布局，代码如上。增加多一个div就可以不用相对布局了，只用到了浮动和负边距。和圣杯布局差异的地方已经被注释。<br></p>

<h2 id="4-浮动"><a href="#4-浮动" class="headerlink" title="4. 浮动"></a>4. 浮动</h2><p><br>HTML代码如下：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">//注意元素次序</div><div class="line">&lt;div class=&quot;left&quot;&gt;Left&lt;/div&gt;</div><div class="line">&lt;div class=&quot;right&quot;&gt;Right&lt;/div&gt;</div><div class="line">&lt;div class=&quot;main&quot;&gt;Main&lt;/div&gt;</div></pre></td></tr></table></figure><br><br><p><br>CSS代码如下：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">//CSS reset</div><div class="line">body,html &#123;</div><div class="line">    height:100%;</div><div class="line">    padding: 0;</div><div class="line">    margin: 0</div><div class="line">&#125;</div><div class="line">//左栏左浮动</div><div class="line">.left &#123;</div><div class="line">    background: red;</div><div class="line">    width: 100px;</div><div class="line">    float: left;</div><div class="line">    height: 100%;</div><div class="line">&#125;</div><div class="line">//中间自适应</div><div class="line">.main &#123;</div><div class="line">    background: blue;</div><div class="line">    height: 100%;</div><div class="line">    margin:0px 100px 200px 0px;</div><div class="line">&#125;</div><div class="line">//右栏右浮动</div><div class="line">.right &#123;</div><div class="line">    background: red;</div><div class="line">    width: 200px;</div><div class="line">    float: right;</div><div class="line">    height: 100%;</div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br><p><br>这种方式代码足够简洁与高效，也容易理解<br></p>


<p>转载-&gt;<a href="https://gold.xitu.io/post/58481bf8ac502e006ce8c361" target="_blank" rel="external">https://gold.xitu.io/post/58481bf8ac502e006ce8c361</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;br&gt;总括： 不管是三栏布局还是两栏布局都是我们在平时项目里经常使用的，也许你不知道什么事三栏布局什么是两栏布局但实际已经在用，或许你知道
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>一些有用CSS代码片段(二)</title>
    <link href="http://yoursite.com/2016/11/17/cssPart2/"/>
    <id>http://yoursite.com/2016/11/17/cssPart2/</id>
    <published>2016-11-17T08:45:22.000Z</published>
    <updated>2016-12-08T09:06:25.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CSS3-斑马线"><a href="#CSS3-斑马线" class="headerlink" title="CSS3 斑马线"></a>CSS3 斑马线</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">tbody tr:nth-child(odd) &#123;</div><div class="line">    background-color: #ccc;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="大字段落"><a href="#大字段落" class="headerlink" title="大字段落"></a>大字段落</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">p:first-letter&#123;</div><div class="line">    display: block;</div><div class="line">    margin: 5px 0 0 5px;</div><div class="line">    float: left;</div><div class="line">    color: #ff3366;</div><div class="line">    font-size: 5.4em;</div><div class="line">    font-family: Georgia, Times New Roman, serif;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="内部CSS3-盒阴影"><a href="#内部CSS3-盒阴影" class="headerlink" title="内部CSS3 盒阴影"></a>内部CSS3 盒阴影</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#mydiv &#123; </div><div class="line">    -moz-box-shadow: inset 2px 0 4px #000;</div><div class="line">    -webkit-box-shadow: inset 2px 0 4px #000;</div><div class="line">    box-shadow: inset 2px 0 4px #000;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="外部CSS3-盒阴影"><a href="#外部CSS3-盒阴影" class="headerlink" title="外部CSS3 盒阴影"></a>外部CSS3 盒阴影</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#mydiv &#123; </div><div class="line">    -webkit-box-shadow: 0 2px 2px -2px rgba(0, 0, 0, 0.52);</div><div class="line">    -moz-box-shadow: 0 2px 2px -2px rgba(0, 0, 0, 0.52);</div><div class="line">    box-shadow: 0 2px 2px -2px rgba(0, 0, 0, 0.52);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="三角形列表项目符号"><a href="#三角形列表项目符号" class="headerlink" title="三角形列表项目符号"></a>三角形列表项目符号</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">ul &#123;</div><div class="line">    margin: 0.75em 0;</div><div class="line">    padding: 0 1em;</div><div class="line">    list-style: none;</div><div class="line">&#125;</div><div class="line">li:before &#123; </div><div class="line">    content: &quot;&quot;;</div><div class="line">    border-color: transparent #111;</div><div class="line">    border-style: solid;</div><div class="line">    border-width: 0.35em 0 0.35em 0.45em;</div><div class="line">    display: block;</div><div class="line">    height: 0;</div><div class="line">    width: 0;</div><div class="line">    left: -1em;</div><div class="line">    top: 0.9em;</div><div class="line">    position: relative;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="CSS3-列文本"><a href="#CSS3-列文本" class="headerlink" title="CSS3 列文本"></a>CSS3 列文本</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">#columns-3 &#123;</div><div class="line">    text-align: justify;</div><div class="line">    -moz-column-count: 3;</div><div class="line">    -moz-column-gap: 12px;</div><div class="line">    -moz-column-rule: 1px solid #c4c8cc;</div><div class="line">    -webkit-column-count: 3;</div><div class="line">    -webkit-column-gap: 12px;</div><div class="line">    -webkit-column-rule: 1px solid #c4c8cc;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="CSS固定页脚"><a href="#CSS固定页脚" class="headerlink" title="CSS固定页脚"></a>CSS固定页脚</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">#footer &#123;</div><div class="line">    position: fixed;</div><div class="line">    left: 0px;</div><div class="line">    bottom: 0px;</div><div class="line">    height: 30px;</div><div class="line">    width: 100%;</div><div class="line">    background: #444;</div><div class="line">&#125;</div><div class="line">/* IE 6 */</div><div class="line">* html #footer &#123;</div><div class="line">    position: absolute;</div><div class="line">    top: expression((0-(footer.offsetHeight)+(document.documentElement.clientHeight ? document.documentElement.clientHeight : document.body.clientHeight)+(ignoreMe = document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop))+&apos;px&apos;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="IE6的PNG透明修复"><a href="#IE6的PNG透明修复" class="headerlink" title="IE6的PNG透明修复"></a>IE6的PNG透明修复</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">.bg &#123;</div><div class="line">    width:200px;</div><div class="line">    height:100px;</div><div class="line">    background: url(/folder/yourimage.png) no-repeat;</div><div class="line">    _background:none;</div><div class="line">    _filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=&apos;/folder/yourimage.png&apos;,sizingMethod=&apos;crop&apos;);</div><div class="line">&#125;</div><div class="line">/* 1px gif method */</div><div class="line">img, .png &#123;</div><div class="line">    position: relative;</div><div class="line">    behavior: expression((this.runtimeStyle.behavior=&quot;none&quot;)&amp;&amp;(this.pngSet?this.pngSet=true:(this.nodeName == &quot;IMG&quot; &amp;&amp; this.src.toLowerCase().indexOf(&apos;.png&apos;)&gt;-1?(this.runtimeStyle.backgroundImage = &quot;none&quot;,</div><div class="line">       this.runtimeStyle.filter = &quot;progid:DXImageTransform.Microsoft.AlphaImageLoader(src=&apos;&quot; + this.src + &quot;&apos;, sizingMethod=&apos;image&apos;)&quot;,</div><div class="line">       this.src = &quot;images/transparent.gif&quot;):(this.origBg = this.origBg? this.origBg :this.currentStyle.backgroundImage.toString().replace(&apos;url(&quot;&apos;,&apos;&apos;).replace(&apos;&quot;)&apos;,&apos;&apos;),</div><div class="line">       this.runtimeStyle.filter = &quot;progid:DXImageTransform.Microsoft.AlphaImageLoader(src=&apos;&quot; + this.origBg + &quot;&apos;, sizingMethod=&apos;crop&apos;)&quot;,</div><div class="line">       this.runtimeStyle.backgroundImage = &quot;none&quot;)),this.pngSet=true));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="CSS3-鲜艳的输入"><a href="#CSS3-鲜艳的输入" class="headerlink" title="CSS3 鲜艳的输入"></a>CSS3 鲜艳的输入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">input[type=text], textarea &#123;</div><div class="line">    -webkit-transition: all 0.30s ease-in-out;</div><div class="line">    -moz-transition: all 0.30s ease-in-out;</div><div class="line">    -ms-transition: all 0.30s ease-in-out;</div><div class="line">    -o-transition: all 0.30s ease-in-out;</div><div class="line">    outline: none;</div><div class="line">    padding: 3px 0px 3px 3px;</div><div class="line">    margin: 5px 1px 3px 0px;</div><div class="line">    border: 1px solid #ddd;</div><div class="line">&#125;</div><div class="line">input[type=text]:focus, textarea:focus &#123;</div><div class="line">    box-shadow: 0 0 5px rgba(81, 203, 238, 1);</div><div class="line">    padding: 3px 0px 3px 3px;</div><div class="line">    margin: 5px 1px 3px 0px;</div><div class="line">    border: 1px solid rgba(81, 203, 238, 1);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="基于文件类型的链接样式"><a href="#基于文件类型的链接样式" class="headerlink" title="基于文件类型的链接样式"></a>基于文件类型的链接样式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">/* external links */</div><div class="line">a[href^=&quot;http://&quot;] &#123;</div><div class="line">    padding-right: 13px;</div><div class="line">    background: url(&apos;external.gif&apos;) no-repeat center right;</div><div class="line">&#125;</div><div class="line">/* emails */</div><div class="line">a[href^=&quot;mailto:&quot;] &#123;</div><div class="line">    padding-right: 20px;</div><div class="line">    background: url(&apos;email.png&apos;) no-repeat center right;</div><div class="line">&#125;</div><div class="line">/* pdfs */</div><div class="line">a[href$=&quot;.pdf&quot;] &#123;</div><div class="line">    padding-right: 18px;</div><div class="line">    background: url(&apos;acrobat.png&apos;) no-repeat center right;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="强制换行"><a href="#强制换行" class="headerlink" title="强制换行"></a>强制换行</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">pre &#123;</div><div class="line">    white-space: pre-wrap;       /* css-3 */</div><div class="line">    white-space: -moz-pre-wrap;  /* Mozilla, since 1999 */</div><div class="line">    white-space: -pre-wrap;      /* Opera 4-6 */</div><div class="line">    white-space: -o-pre-wrap;    /* Opera 7 */</div><div class="line">    word-wrap: break-word;       /* Internet Explorer 5.5+ */</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="网页顶部盒阴影"><a href="#网页顶部盒阴影" class="headerlink" title="网页顶部盒阴影"></a>网页顶部盒阴影</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">body:before &#123;</div><div class="line">    content: &quot;&quot;;</div><div class="line">    position: fixed;</div><div class="line">    top: -10px;</div><div class="line">    left: 0;</div><div class="line">    width: 100%;</div><div class="line">    height: 10px;</div><div class="line"></div><div class="line">    -webkit-box-shadow: 0px 0px 10px rgba(0,0,0,.8);</div><div class="line">    -moz-box-shadow: 0px 0px 10px rgba(0,0,0,.8);</div><div class="line">    box-shadow: 0px 0px 10px rgba(0,0,0,.8);</div><div class="line">    z-index: 100;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="CSS3对话气泡"><a href="#CSS3对话气泡" class="headerlink" title="CSS3对话气泡"></a>CSS3对话气泡</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">.chat-bubble &#123;</div><div class="line">    background-color: #ededed;</div><div class="line">    border: 2px solid #666;</div><div class="line">    font-size: 35px;</div><div class="line">    line-height: 1.3em;</div><div class="line">    margin: 10px auto;</div><div class="line">    padding: 10px;</div><div class="line">    position: relative;</div><div class="line">    text-align: center;</div><div class="line">    width: 300px;</div><div class="line">    -moz-border-radius: 20px;</div><div class="line">    -webkit-border-radius: 20px;</div><div class="line">    -moz-box-shadow: 0 0 5px #888;</div><div class="line">    -webkit-box-shadow: 0 0 5px #888;</div><div class="line">    font-family: &apos;Bangers&apos;, arial, serif; </div><div class="line">&#125;</div><div class="line">.chat-bubble-arrow-border &#123;</div><div class="line">    border-color: #666 transparent transparent transparent;</div><div class="line">    border-style: solid;</div><div class="line">    border-width: 20px;</div><div class="line">    height: 0;</div><div class="line">    width: 0;</div><div class="line">    position: absolute;</div><div class="line">    bottom: -42px;</div><div class="line">    left: 30px;</div><div class="line">&#125;</div><div class="line">.chat-bubble-arrow &#123;</div><div class="line">    border-color: #ededed transparent transparent transparent;</div><div class="line">    border-style: solid;</div><div class="line">    border-width: 20px;</div><div class="line">    height: 0;</div><div class="line">    width: 0;</div><div class="line">    position: absolute;</div><div class="line">    bottom: -39px;</div><div class="line">    left: 30px;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="H1-H5默认样式"><a href="#H1-H5默认样式" class="headerlink" title="H1-H5默认样式"></a>H1-H5默认样式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">h1,h2,h3,h4,h5&#123;</div><div class="line">    color: #005a9c;</div><div class="line">&#125;</div><div class="line">h1&#123;</div><div class="line">    font-size: 2.6em;</div><div class="line">    line-height: 2.45em;</div><div class="line">&#125;</div><div class="line">h2&#123;</div><div class="line">    font-size: 2.1em;</div><div class="line">    line-height: 1.9em;</div><div class="line">&#125;</div><div class="line">h3&#123;</div><div class="line">    font-size: 1.8em;</div><div class="line">    line-height: 1.65em;</div><div class="line">&#125;</div><div class="line">h4&#123;</div><div class="line">    font-size: 1.65em;</div><div class="line">    line-height: 1.4em;</div><div class="line">&#125;</div><div class="line">h5&#123;</div><div class="line">    font-size: 1.4em;</div><div class="line">    line-height: 1.25em;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="CSS悬浮提示文本"><a href="#CSS悬浮提示文本" class="headerlink" title="CSS悬浮提示文本"></a>CSS悬浮提示文本</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line">a &#123; </div><div class="line">    border-bottom:1px solid #bbb;</div><div class="line">    color:#666;</div><div class="line">    display:inline-block;</div><div class="line">    position:relative;</div><div class="line">    text-decoration:none;</div><div class="line">&#125;</div><div class="line">a:hover,</div><div class="line">a:focus &#123;</div><div class="line">    color:#36c;</div><div class="line">&#125;</div><div class="line">a:active &#123;</div><div class="line">    top:1px; </div><div class="line">&#125;</div><div class="line">/* Tooltip styling */</div><div class="line">a[data-tooltip]:after &#123;</div><div class="line">    border-top: 8px solid #222;</div><div class="line">    border-top: 8px solid hsla(0,0%,0%,.85);</div><div class="line">    border-left: 8px solid transparent;</div><div class="line">    border-right: 8px solid transparent;</div><div class="line">    content: &quot;&quot;;</div><div class="line">    display: none;</div><div class="line">    height: 0;</div><div class="line">    width: 0;</div><div class="line">    left: 25%;</div><div class="line">    position: absolute;</div><div class="line">&#125;</div><div class="line">a[data-tooltip]:before &#123;</div><div class="line">    background: #222;</div><div class="line">    background: hsla(0,0%,0%,.85);</div><div class="line">    color: #f6f6f6;</div><div class="line">    content: attr(data-tooltip);</div><div class="line">    display: none;</div><div class="line">    font-family: sans-serif;</div><div class="line">    font-size: 14px;</div><div class="line">    height: 32px;</div><div class="line">    left: 0;</div><div class="line">    line-height: 32px;</div><div class="line">    padding: 0 15px;</div><div class="line">    position: absolute;</div><div class="line">    text-shadow: 0 1px 1px hsla(0,0%,0%,1);</div><div class="line">    white-space: nowrap;</div><div class="line">    -webkit-border-radius: 5px;</div><div class="line">    -moz-border-radius: 5px;</div><div class="line">    -o-border-radius: 5px;</div><div class="line">    border-radius: 5px;</div><div class="line">&#125;</div><div class="line">a[data-tooltip]:hover:after &#123;</div><div class="line">    display: block;</div><div class="line">    top: -9px;</div><div class="line">&#125;</div><div class="line">a[data-tooltip]:hover:before &#123;</div><div class="line">    display: block;</div><div class="line">    top: -41px;</div><div class="line">&#125;</div><div class="line">a[data-tooltip]:active:after &#123;</div><div class="line">    top: -10px;</div><div class="line">&#125;</div><div class="line">a[data-tooltip]:active:before &#123;</div><div class="line">    top: -42px;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="深灰色的圆形按钮"><a href="#深灰色的圆形按钮" class="headerlink" title="深灰色的圆形按钮"></a>深灰色的圆形按钮</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">.graybtn &#123;</div><div class="line">    -moz-box-shadow:inset 0px 1px 0px 0px #ffffff;</div><div class="line">    -webkit-box-shadow:inset 0px 1px 0px 0px #ffffff;</div><div class="line">    box-shadow:inset 0px 1px 0px 0px #ffffff;</div><div class="line">    background:-webkit-gradient( linear, left top, left bottom, color-stop(0.05, #ffffff), color-stop(1, #d1d1d1) );</div><div class="line">    background:-moz-linear-gradient( center top, #ffffff 5%, #d1d1d1 100% );</div><div class="line">    filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=&apos;#ffffff&apos;, endColorstr=&apos;#d1d1d1&apos;);</div><div class="line">    background-color:#ffffff;</div><div class="line">    -moz-border-radius:6px;</div><div class="line">    -webkit-border-radius:6px;</div><div class="line">    border-radius:6px;</div><div class="line">    border:1px solid #dcdcdc;</div><div class="line">    display:inline-block;</div><div class="line">    color:#777777;</div><div class="line">    font-family:arial;</div><div class="line">    font-size:15px;</div><div class="line">    font-weight:bold;</div><div class="line">    padding:6px 24px;</div><div class="line">    text-decoration:none;</div><div class="line">    text-shadow:1px 1px 0px #ffffff;</div><div class="line">&#125;</div><div class="line">.graybtn:hover &#123;</div><div class="line">    background:-webkit-gradient( linear, left top, left bottom, color-stop(0.05, #d1d1d1), color-stop(1, #ffffff) );</div><div class="line">    background:-moz-linear-gradient( center top, #d1d1d1 5%, #ffffff 100% );</div><div class="line">    filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=&apos;#d1d1d1&apos;, endColorstr=&apos;#ffffff&apos;);</div><div class="line">    background-color:#d1d1d1;</div><div class="line">&#125;</div><div class="line">.graybtn:active &#123;</div><div class="line">    position:relative;</div><div class="line">    top:1px;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="CSS3-方格图案"><a href="#CSS3-方格图案" class="headerlink" title="CSS3 方格图案"></a>CSS3 方格图案</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">body &#123;</div><div class="line">    background: radial-gradient(circle, white 10%, transparent 10%),</div><div class="line">    radial-gradient(circle, white 10%, black 10%) 50px 50px;</div><div class="line">    background-size: 100px 100px;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="CSS-font属性缩写"><a href="#CSS-font属性缩写" class="headerlink" title="CSS font属性缩写"></a>CSS font属性缩写</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">p &#123;</div><div class="line">  font: italic small-caps bold 1.2em/1.0em Arial, Tahoma, Helvetica;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="论文页面的卷曲效果"><a href="#论文页面的卷曲效果" class="headerlink" title="论文页面的卷曲效果"></a>论文页面的卷曲效果</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line">ul.box &#123;</div><div class="line">    position: relative;</div><div class="line">    z-index: 1; /* prevent shadows falling behind containers with backgrounds */</div><div class="line">    overflow: hidden;</div><div class="line">    list-style: none;</div><div class="line">    margin: 0;</div><div class="line">    padding: 0; </div><div class="line">&#125;</div><div class="line"></div><div class="line">ul.box li &#123;</div><div class="line">    position: relative;</div><div class="line">    float: left;</div><div class="line">    width: 250px;</div><div class="line">    height: 150px;</div><div class="line">    padding: 0;</div><div class="line">    border: 1px solid #efefef;</div><div class="line">    margin: 0 30px 30px 0;</div><div class="line">    background: #fff;</div><div class="line">    -webkit-box-shadow: 0 1px 4px rgba(0, 0, 0, 0.27), 0 0 40px rgba(0, 0, 0, 0.06) inset;</div><div class="line">    -moz-box-shadow: 0 1px 4px rgba(0, 0, 0, 0.27), 0 0 40px rgba(0, 0, 0, 0.06) inset; </div><div class="line">    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.27), 0 0 40px rgba(0, 0, 0, 0.06) inset; </div><div class="line">&#125;</div><div class="line"></div><div class="line">ul.box li:before,</div><div class="line">ul.box li:after &#123;</div><div class="line">    content: &apos;&apos;;</div><div class="line">    z-index: -1;</div><div class="line">    position: absolute;</div><div class="line">    left: 10px;</div><div class="line">    bottom: 10px;</div><div class="line">    width: 70%;</div><div class="line">    max-width: 300px; /* avoid rotation causing ugly appearance at large container widths */</div><div class="line">    max-height: 100px;</div><div class="line">    height: 55%;</div><div class="line">    -webkit-box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);</div><div class="line">    -moz-box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);</div><div class="line">    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);</div><div class="line">    -webkit-transform: skew(-15deg) rotate(-6deg);</div><div class="line">    -moz-transform: skew(-15deg) rotate(-6deg);</div><div class="line">    -ms-transform: skew(-15deg) rotate(-6deg);</div><div class="line">    -o-transform: skew(-15deg) rotate(-6deg);</div><div class="line">    transform: skew(-15deg) rotate(-6deg); </div><div class="line">&#125;</div><div class="line"></div><div class="line">ul.box li:after &#123;</div><div class="line">    left: auto;</div><div class="line">    right: 10px;</div><div class="line">    -webkit-transform: skew(15deg) rotate(6deg);</div><div class="line">    -moz-transform: skew(15deg) rotate(6deg);</div><div class="line">    -ms-transform: skew(15deg) rotate(6deg);</div><div class="line">    -o-transform: skew(15deg) rotate(6deg);</div><div class="line">    transform: skew(15deg) rotate(6deg); </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="鲜艳的锚链接"><a href="#鲜艳的锚链接" class="headerlink" title="鲜艳的锚链接"></a>鲜艳的锚链接</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">a &#123;</div><div class="line">    color: #00e;</div><div class="line">&#125;</div><div class="line">a:visited &#123;</div><div class="line">    color: #551a8b;</div><div class="line">&#125;</div><div class="line">a:hover &#123;</div><div class="line">    color: #06e;</div><div class="line">&#125;</div><div class="line">a:focus &#123;</div><div class="line">    outline: thin dotted;</div><div class="line">&#125;</div><div class="line">a:hover, a:active &#123;</div><div class="line">    outline: 0;</div><div class="line">&#125;</div><div class="line">a, a:visited, a:active &#123;</div><div class="line">    text-decoration: none;</div><div class="line">    color: #fff;</div><div class="line">    -webkit-transition: all .3s ease-in-out;</div><div class="line">&#125;</div><div class="line">a:hover, .glow &#123;</div><div class="line">    color: #ff0;</div><div class="line">    text-shadow: 0 0 10px #ff0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="带CSS3特色的横幅显示"><a href="#带CSS3特色的横幅显示" class="headerlink" title="带CSS3特色的横幅显示"></a>带CSS3特色的横幅显示</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">.featureBanner &#123;</div><div class="line">    position: relative;</div><div class="line">    margin: 20px</div><div class="line">&#125;</div><div class="line">.featureBanner:before &#123;</div><div class="line">    content: &quot;Featured&quot;;</div><div class="line">    position: absolute;</div><div class="line">    top: 5px;</div><div class="line">    left: -8px;</div><div class="line">    padding-right: 10px;</div><div class="line">    color: #232323;</div><div class="line">    font-weight: bold;</div><div class="line">    height: 0px;</div><div class="line">    border: 15px solid #ffa200;</div><div class="line">    border-right-color: transparent;</div><div class="line">    line-height: 0px;</div><div class="line">    box-shadow: -0px 5px 5px -5px #000;</div><div class="line">    z-index: 1;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.featureBanner:after &#123;</div><div class="line">    content: &quot;&quot;;</div><div class="line">    position: absolute;</div><div class="line">    top: 35px;</div><div class="line">    left: -8px;</div><div class="line">    border: 4px solid #89540c;</div><div class="line">    border-left-color: transparent;</div><div class="line">    border-bottom-color: transparent;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>转载-&gt;<a href="http://www.ido321.com/1565.html" target="_blank" rel="external">http://www.ido321.com/1565.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;CSS3-斑马线&quot;&gt;&lt;a href=&quot;#CSS3-斑马线&quot; class=&quot;headerlink&quot; title=&quot;CSS3 斑马线&quot;&gt;&lt;/a&gt;CSS3 斑马线&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>一些有用CSS代码片段(一)</title>
    <link href="http://yoursite.com/2016/11/15/cssPart/"/>
    <id>http://yoursite.com/2016/11/15/cssPart/</id>
    <published>2016-11-15T13:20:32.000Z</published>
    <updated>2016-12-07T13:34:39.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="垂直对齐"><a href="#垂直对齐" class="headerlink" title="垂直对齐"></a>垂直对齐</h2><p></p><p><br>如果你用CSS，则你会有困惑：我该怎么垂直对齐容器中的元素？现在，利用CSS3的Transform，可以很优雅的解决这个困惑：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">.verticalcenter&#123;</div><div class="line">    position: relative;</div><div class="line">    top: 50%;</div><div class="line">    -webkit-transform: translateY(-50%);</div><div class="line">    -o-transform: translateY(-50%);</div><div class="line">    transform: translateY(-50%);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p>
<h2 id="背景渐变动画"><a href="#背景渐变动画" class="headerlink" title="背景渐变动画"></a>背景渐变动画</h2><p></p><p><br>CSS中最具诱惑的一个功能是能添加动画效果，除了渐变，你可以给背景色、透明度、元素大小添加动画。目前，你不能为渐变添加动画，但下面的代码可能有帮助。它通过改变背景位置，让它看起来有动画效果。<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">button &#123;</div><div class="line">    background-image: linear-gradient(#5187c4, #1c2f45);</div><div class="line">    background-size: auto 200%;</div><div class="line">    background-position: 0 100%;</div><div class="line">    transition: background-position 0.5s;</div><div class="line">&#125;    </div><div class="line">button:hover &#123;</div><div class="line">    background-position: 0 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p>
<h2 id="CSS：表格列宽自适用"><a href="#CSS：表格列宽自适用" class="headerlink" title="CSS：表格列宽自适用"></a>CSS：表格列宽自适用</h2><p></p><p><br>对于表格，当谈到调整列宽时，是比较痛苦的。然后，这里有一个可以使用的技巧：给td元素添加 white-space: nowrap;能让文本正确的换行<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">td &#123;</div><div class="line">    white-space: nowrap;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p>
<h2 id="只在一边或两边显示盒子阴影"><a href="#只在一边或两边显示盒子阴影" class="headerlink" title="只在一边或两边显示盒子阴影"></a>只在一边或两边显示盒子阴影</h2><p></p><p><br>如果你要一个盒阴影，试试这个技巧，能为任一边添加阴影。为了实现这个，首先定义一个有具体宽高的盒子，然后正确定位:after伪类。实现底边阴影的代码如下：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">.box-shadow &#123;</div><div class="line">    background-color: #FF8020;</div><div class="line">    width: 160px;</div><div class="line">    height: 90px;</div><div class="line">    margin-top: -45px;</div><div class="line">    margin-left: -80px;</div><div class="line">    position: absolute;</div><div class="line">    top: 50%;</div><div class="line">    left: 50%;</div><div class="line">&#125;</div><div class="line">.box-shadow:after &#123;</div><div class="line">    content: &quot;&quot;;</div><div class="line">    width: 150px;</div><div class="line">    height: 1px;</div><div class="line">    margin-top: 88px;</div><div class="line">    margin-left: -75px;</div><div class="line">    display: block;</div><div class="line">    position: absolute;</div><div class="line">    left: 50%;</div><div class="line">    z-index: -1;</div><div class="line">    -webkit-box-shadow: 0px 0px 8px 2px #000000;</div><div class="line">       -moz-box-shadow: 0px 0px 8px 2px #000000;</div><div class="line">            box-shadow: 0px 0px 8px 2px #000000;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p>
<h2 id="包裹长文本"><a href="#包裹长文本" class="headerlink" title="包裹长文本"></a>包裹长文本</h2><p></p><p><br>如果你碰到一个比自身容器长的文本，这个技巧对你很有用。在这个示例中，默认时，不管容器的宽度，文本都将水平填充。<br></p><br><img src="https://segmentfault.com/image?src=http://media02.hongkiat.com/simple-css-snippets/wrapping-long-text-before.jpg&amp;objectId=1190000002773955&amp;token=1ce75c7400f041e9da2d9045185c72c1" alt="https://segmentfault.com/image?src=http://media02.hongkiat.com/simple-css-snippets/wrapping-long-text-before.jpg&amp;objectId=1190000002773955&amp;token=1ce75c7400f041e9da2d9045185c72c1"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">pre &#123;</div><div class="line">    white-space: pre-line;</div><div class="line">    word-wrap: break-word;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p>
<p></p><p><br>效果看起来如下：<br></p><br><img src="https://segmentfault.com/image?src=http://media02.hongkiat.com/simple-css-snippets/wrapping-long-text-after.jpg&amp;objectId=1190000002773955&amp;token=07541de0bc7468da5b077aa8a2a41a18" alt="https://segmentfault.com/image?src=http://media02.hongkiat.com/simple-css-snippets/wrapping-long-text-after.jpg&amp;objectId=1190000002773955&amp;token=07541de0bc7468da5b077aa8a2a41a18"><p></p>
<h2 id="制造模糊文本"><a href="#制造模糊文本" class="headerlink" title="制造模糊文本"></a>制造模糊文本</h2><p></p><p><br>想要让文本模糊？可以使用color透明和text-shadow实现。<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">.blurry-text &#123;</div><div class="line">   color: transparent;</div><div class="line">   text-shadow: 0 0 5px rgba(0,0,0,0.5);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p>
<h2 id="用CSS动画实现省略号动画"><a href="#用CSS动画实现省略号动画" class="headerlink" title="用CSS动画实现省略号动画"></a>用CSS动画实现省略号动画</h2><p></p><p><br>这个片段将帮助你制造一个ellipsis的动画，对于简单的加载状态是很有用的，而不用去使用gif图像。<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">.loading:after &#123;</div><div class="line">    overflow: hidden;</div><div class="line">    display: inline-block;</div><div class="line">    vertical-align: bottom;</div><div class="line">    animation: ellipsis 2s infinite;</div><div class="line">    content: &quot;\2026&quot;; /* ascii code for the ellipsis character */</div><div class="line">&#125;</div><div class="line">@keyframes ellipsis &#123;</div><div class="line">    from &#123;</div><div class="line">        width: 2px;</div><div class="line">    &#125;</div><div class="line">    to &#123;</div><div class="line">        width: 15px;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p>
<h2 id="典型的CSS清除浮动"><a href="#典型的CSS清除浮动" class="headerlink" title="典型的CSS清除浮动"></a>典型的CSS清除浮动</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">.clearfix:after &#123; content: &quot;.&quot;; display: block; clear: both; visibility: hidden; line-height: 0; height: 0; &#125;</div><div class="line">.clearfix &#123; display: inline-block; &#125;</div><div class="line"></div><div class="line">html[xmlns] .clearfix &#123; display: block; &#125;</div><div class="line">* html .clearfix &#123; height: 1%; &#125;</div></pre></td></tr></table></figure>
<h2 id="CSS引用模板"><a href="#CSS引用模板" class="headerlink" title="CSS引用模板"></a>CSS引用模板</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">blockquote &#123;</div><div class="line">    background: #f9f9f9;</div><div class="line">    border-left: 10px solid #ccc;</div><div class="line">    margin: 1.5em 10px;</div><div class="line">    padding: .5em 10px;</div><div class="line">    quotes: &quot;\201C&quot;&quot;\201D&quot;&quot;\2018&quot;&quot;\2019&quot;;</div><div class="line">&#125;</div><div class="line">blockquote:before &#123;</div><div class="line">    color: #ccc;</div><div class="line">    content: open-quote;</div><div class="line">    font-size: 4em;</div><div class="line">    line-height: .1em;</div><div class="line">    margin-right: .25em;</div><div class="line">    vertical-align: -.4em;</div><div class="line">&#125;</div><div class="line">blockquote p &#123;</div><div class="line">    display: inline;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="个性圆角"><a href="#个性圆角" class="headerlink" title="个性圆角"></a>个性圆角</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">#container &#123;</div><div class="line">    -webkit-border-radius: 4px 3px 6px 10px;</div><div class="line">    -moz-border-radius: 4px 3px 6px 10px;</div><div class="line">    -o-border-radius: 4px 3px 6px 10px;</div><div class="line">    border-radius: 4px 3px 6px 10px;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* alternative syntax broken into each line */</div><div class="line">#container &#123;</div><div class="line">    -webkit-border-top-left-radius: 4px;</div><div class="line">    -webkit-border-top-right-radius: 3px;</div><div class="line">    -webkit-border-bottom-right-radius: 6px;</div><div class="line">    -webkit-border-bottom-left-radius: 10px;</div><div class="line"></div><div class="line">    -moz-border-radius-topleft: 4px;</div><div class="line">    -moz-border-radius-topright: 3px;</div><div class="line">    -moz-border-radius-bottomright: 6px;</div><div class="line">    -moz-border-radius-bottomleft: 10px;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="图片边框偏光"><a href="#图片边框偏光" class="headerlink" title="图片边框偏光"></a>图片边框偏光</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">img.polaroid &#123;</div><div class="line">    background:#000; /*Change this to a background image or remove*/</div><div class="line">    border:solid #fff;</div><div class="line">    border-width:6px 6px 20px 6px;</div><div class="line">    box-shadow:1px 1px 5px #333; /* Standard blur at 5px. Increase for more depth */</div><div class="line">    -webkit-box-shadow:1px 1px 5px #333;</div><div class="line">    -moz-box-shadow:1px 1px 5px #333;</div><div class="line">    height:200px; /*Set to height of your image or desired div*/</div><div class="line">    width:200px; /*Set to width of your image or desired div*/</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="锚链接伪类"><a href="#锚链接伪类" class="headerlink" title="锚链接伪类"></a>锚链接伪类</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">a:link &#123; color: blue; &#125;</div><div class="line">a:visited &#123; color: purple; &#125;</div><div class="line">a:hover &#123; color: red; &#125;</div><div class="line">a:active &#123; color: yellow; &#125;</div></pre></td></tr></table></figure>
<h2 id="CSS3：全屏背景"><a href="#CSS3：全屏背景" class="headerlink" title="CSS3：全屏背景"></a>CSS3：全屏背景</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">html &#123; </div><div class="line">    background: url(&apos;images/bg.jpg&apos;) no-repeat center center fixed; </div><div class="line">    -webkit-background-size: cover;</div><div class="line">    -moz-background-size: cover;</div><div class="line">    -o-background-size: cover;</div><div class="line">    background-size: cover;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="内容垂直居中"><a href="#内容垂直居中" class="headerlink" title="内容垂直居中"></a>内容垂直居中</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">.container &#123;</div><div class="line">    min-height: 6.5em;</div><div class="line">    display: table-cell;</div><div class="line">    vertical-align: middle;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="强制出现垂直滚动条"><a href="#强制出现垂直滚动条" class="headerlink" title="强制出现垂直滚动条"></a>强制出现垂直滚动条</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">html &#123; height: 101% &#125;</div></pre></td></tr></table></figure>
<h2 id="CSS3渐变模板"><a href="#CSS3渐变模板" class="headerlink" title="CSS3渐变模板"></a>CSS3渐变模板</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">#colorbox &#123;</div><div class="line">    background: #629721;</div><div class="line">    background-image: -webkit-gradient(linear, left top, left bottom, from(#83b842), to(#629721));</div><div class="line">    background-image: -webkit-linear-gradient(top, #83b842, #629721);</div><div class="line">    background-image: -moz-linear-gradient(top, #83b842, #629721);</div><div class="line">    background-image: -ms-linear-gradient(top, #83b842, #629721);</div><div class="line">    background-image: -o-linear-gradient(top, #83b842, #629721);</div><div class="line">    background-image: linear-gradient(top, #83b842, #629721);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>转载-&gt;<a href="https://segmentfault.com/a/1190000002773955" target="_blank" rel="external">https://segmentfault.com/a/1190000002773955</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;垂直对齐&quot;&gt;&lt;a href=&quot;#垂直对齐&quot; class=&quot;headerlink&quot; title=&quot;垂直对齐&quot;&gt;&lt;/a&gt;垂直对齐&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;如果你用CSS，则你会有困惑：我该怎么垂直对齐容器中的元素？现在，利用CSS3的Transform，可
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>html单个标签实现跑马灯效果</title>
    <link href="http://yoursite.com/2016/11/11/marquee/"/>
    <id>http://yoursite.com/2016/11/11/marquee/</id>
    <published>2016-11-11T12:48:42.000Z</published>
    <updated>2016-12-07T13:07:20.000Z</updated>
    
    <content type="html"><![CDATA[<p><br>marquee标签，它是成对出现的标签，首标签<code>&lt;marquee&gt;</code>和尾标签<code>&lt;/marquee&gt;</code>之间的内容就是滚动内容。marquee标签的属性主要有behavior、bgcolor、direction、width、height、hspace、vspace、loop、scrollamount、scrolldelay等，它们都是可选的。<br></p>

<h2 id="behavior属性"><a href="#behavior属性" class="headerlink" title="behavior属性"></a>behavior属性</h2><p><br>behavior属性的参数值为alternate、scroll、slide中的一个，分别表示文字来回滚动、单方向循环滚动、只滚动一次，需要注意的是：如果在<code>&lt;marquee&gt;</code>标签中同时出现了direction和behavior属性，那么scroll和slide的滚动方向将依照direction属性中参数的设置。<br></p>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;marquee behavior=&quot;alternate&quot;&gt;我来回滚动&lt;/marquee&gt; </div><div class="line">   &lt;marquee behavior=&quot;scroll&quot;&gt;我单方向循环滚动&lt;/marquee&gt;</div><div class="line">   &lt;marquee behavior=&quot;scroll&quot; direction=&quot;up&quot; height=&quot;30&quot;&gt;我改单方向向上循环滚动&lt;/marquee&gt;            </div><div class="line">   &lt;marquee behavior=&quot;slide&quot;&gt;我只滚动一次&lt;/marquee&gt; </div><div class="line">   &lt;marquee behavior=&quot;slide&quot; direction=&quot;up&quot;&gt;我改向上只滚动一次了&lt;/marquee&gt;</div></pre></td></tr></table></figure>
<h2 id="bgcolor属性"><a href="#bgcolor属性" class="headerlink" title="bgcolor属性"></a>bgcolor属性</h2><p><br>文字滚动范围的背景颜色，参数值是16进制（形式：#AABBCC或#AA5566等）或预定义的颜色名字（如red、yellow、blue等）。如下所示：<code>&lt;marquee behavior==&quot;slide&quot; direction=&quot;left&quot; bgcolor=&quot;red&quot;&gt;我的背景色是红色的&lt;/marquee&gt;</code><br></p>

<h2 id="direction属性"><a href="#direction属性" class="headerlink" title="direction属性"></a>direction属性</h2><p><br>文字滚动的方向，属性的参数值有down、left、right、up共四个单一可选值，分别代表滚动方向向下、向左、向右、向上。如下所示：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;marquee direction=&quot;right&quot;&gt;我向右滚动&lt;/marquee&gt; </div><div class="line">   &lt;marquee direction=&quot;right&quot;&gt;我向下滚动&lt;/marquee&gt;</div></pre></td></tr></table></figure><br><br>## width和height属性<br><p><br>width和height属性的作用决定滚动文字在页面中的矩形范围大小。width属性用以规定矩形的宽度，height属性规定矩形的高度。这两个属性的参数值可以是数字或者百分数，数字表示矩形所占的（宽或高）像素点数，百分数表示矩形所占浏览器窗口的（宽或高）百分比。如下所示：<br></p>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;marquee width=&quot;300&quot; height=&quot;30&quot; bgcolor=&quot;red&quot;&gt;我宽300像素，高30像素。&lt;/marquee&gt;</div></pre></td></tr></table></figure>
<h2 id="hspace和vspace属性"><a href="#hspace和vspace属性" class="headerlink" title="hspace和vspace属性"></a>hspace和vspace属性</h2><p><br>这两个属性决定滚动矩形区域距周围的空白区域.<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;marquee width=&quot;300&quot; height=&quot;30&quot; vspace=&quot;10&quot; hspace=&quot;10&quot; bgcolor=&quot;red&quot;&gt;我矩形边缘水平和垂直距周围各10像素。&lt;/marquee&gt; </div><div class="line">   &lt;marquee width=&quot;300&quot; height=&quot;30&quot; vspace=&quot;50&quot; hspace=&quot;50&quot; bgcolor=&quot;red&quot;&gt;我矩形边缘水平和垂直距周围各50像素。&lt;/marquee&gt;</div></pre></td></tr></table></figure><br><br>## loop属性<br><p><br>loop属性决定滚动文字的滚动次数，缺省是无限循环。参数值可以是任意的正整数，如果设置参数值为-1或infinite时将无限循环。如下所示：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;marquee loop=&quot;2&quot;&gt;我滚动2次。&lt;/marquee&gt; </div><div class="line">  &lt;marquee loop=&quot;infinite&quot;&gt;我无限循环滚动。&lt;/marquee&gt; </div><div class="line">  &lt;marquee loop=&quot;-1&quot;&gt;我无限循环滚动。&lt;/marquee&gt;</div></pre></td></tr></table></figure><br><br>## scrollamount和scrolldelay属性<br><p><br>这两个属性决定文字滚动的速度（scrollamount）和延时（scrolldelay），参数值都是正整数。如下所示：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;marquee scrollamount=&quot;100&quot;&gt;我速度很快.&lt;/marquee&gt; </div><div class="line">   &lt;marquee scrollamount=&quot;50&quot;&gt;我慢了些。&lt;/marquee&gt; </div><div class="line">   &lt;marquee scrolldelay=&quot;30&quot;&gt;我小步前进。&lt;/marquee&gt; </div><div class="line">   &lt;marquee scrolldelay=&quot;1000&quot; scrollamount=&quot;100&quot;&gt;我大步前进。&lt;/marquee&gt;</div></pre></td></tr></table></figure><br><br>## align属性<br><p><br>这个属性决定滚动文字位于距形内边框的上下左右位置。您也可以将<marquee>和</marquee>之间的内容替换为图像或其它对象等功能。<br></p>

<h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><p><br>direction 表示滚动的方向，值可以是left，right，up，down，默认为left<br><br>　　behavior 表示滚动的方式，值可以是scroll（连续滚动）slide（滑动一次）alternate（来回滚动）<br><br>　　loop 表示循环的次数，值是正整数，默认为无限循环<br><br>　　scrollamount 表示运动速度，值是正整数，默认为6<br><br>　　scrolldelay 表示停顿时间，值是正整数，默认为0，单位是毫秒<br><br>　　align 表示元素的垂直对齐方式，值可以是top，middle，bottom，默认为middle<br><br>　　bgcolor 表示运动区域的背景色，值是16进制的RGB颜色，默认为白色<br><br>　　height、width 表示运动区域的高度和宽度，值是正整数（单位是像素）或百分数，默认width=100% height为标签内元素的高度。<br><br>　　hspace、vspace 表示元素到区域边界的水平距离和垂直距离，值是正整数，单位是像素。<br><br>　　onmouseover=this.stop() onmouseout=this.start() 表示当鼠标以上区域的时候滚动停止，当鼠标移开的时候又继续滚动。<br></p>

<h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p><br>MARQUEE 元素的默认宽度与其父元素的宽度相等。如果 MARQUEE 位于没有指定宽度的 TD 内，你就需要明确设置 MARQUEE 的宽度。如果 MARQUEE 和 TD 的宽度都没有指定，那么滚动字幕就将限定于 1 个像素宽。<br><br>　　要创建垂直滚动的字幕，请将其 scrollLeft 属性设定为 0。要创建水平滚动的字幕，请将其 scrollTop 属性设定为 0，这将覆盖任何脚本设置。<br><br>　　scrollLeft 和 scrollTop 属性当字幕滚动时为只读。当不处于滚动状态时，scrollLeft 对于设置为水平滚动的字幕来说为可读写，scrollTop 对于设置为垂直滚动的字幕来说为可读写。<br><br>　　此元素在 Microsoft® Internet Explorer 3.0 的 HTML 中可用，在 Internet Explorer 4.0 的脚本中可用。<br><br>　　此元素是块元素。<br><br>　　此元素需要关闭标签。<br></p>

<p>原文-&gt;<a href="http://www.cnblogs.com/jc5426226/p/5851032.html" target="_blank" rel="external">http://www.cnblogs.com/jc5426226/p/5851032.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;br&gt;marquee标签，它是成对出现的标签，首标签&lt;code&gt;&amp;lt;marquee&amp;gt;&lt;/code&gt;和尾标签&lt;code&gt;&amp;lt;/marquee&amp;gt;&lt;/code&gt;之间的内容就是滚动内容。marquee标签的属性主要有behavior、bgcolor、direc
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>说一说z-index容易被忽略的那些特性</title>
    <link href="http://yoursite.com/2016/11/09/z-index/"/>
    <id>http://yoursite.com/2016/11/09/z-index/</id>
    <published>2016-11-09T12:30:11.000Z</published>
    <updated>2016-12-07T12:42:46.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p><br>HTML文档中有三个div元素，每个div中存在一个span元素，三个span元素分别设置背景颜色为red，green，以及blue。然后每个span都设置为<code>position: absolute，</code>三个span的位置稍微错开以便可以仔细观察它们之间的堆叠顺序。然后将第一个span元素的z-index设置为1，其他两个不设置。具体代码如下：<br></p>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">&lt;div&gt;</div><div class="line">  &lt;span class=&quot;red&quot;&gt;Red&lt;/span&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">&lt;div&gt;</div><div class="line">  &lt;span class=&quot;green&quot;&gt;Green&lt;/span&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">&lt;div&gt;</div><div class="line">  &lt;span class=&quot;blue&quot;&gt;Blue&lt;/span&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">&lt;style&gt;</div><div class="line">.red, .green, .blue &#123;</div><div class="line">  position: absolute;</div><div class="line">  width: 200px;</div><div class="line">  height: 200px;</div><div class="line">&#125;</div><div class="line">.red &#123;</div><div class="line">  background: red;</div><div class="line">  z-index: 1;</div><div class="line">&#125;</div><div class="line">.green &#123;</div><div class="line">  background: green;</div><div class="line">  top: 50px;</div><div class="line">  left: 50px;</div><div class="line">&#125;</div><div class="line">.blue &#123;</div><div class="line">  background: blue;</div><div class="line">  top: 100px;</div><div class="line">  left: 100px;</div><div class="line">&#125;</div><div class="line">&lt;/style&gt;</div></pre></td></tr></table></figure>
<p><img src="http://img.blog.csdn.net/20161206110348135" alt="20161206110348135"></p>
<p><br>那么问题来了，尝试在不打破下述规则的前提下将red span置于blue和green span元素之下：<br><br>    不改变HTML元素的标记<br>    不添加或者改变任何元素的z-index属性<br>    不添加或者改变任何元素的position属性<br>如果不了解z-index的一些特性，对于上述要求估计会有些烦恼。<br></p>

<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p><br>在第一个div（也就是red span）上面添加一个值小于1的opacity属性，如下所示：<br></p>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">div:first-child &#123;</div><div class="line">  opacity: .99;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://img.blog.csdn.net/20161206110628073" alt="20161206110628073"></p>
<p><br>可以看到opacity属性影响到了元素的堆叠顺序，这里就要说一下元素的堆叠顺序了。<br></p>

<h2 id="堆叠顺序"><a href="#堆叠顺序" class="headerlink" title="堆叠顺序"></a>堆叠顺序</h2><p><br>在HTML文档中有一个不变的堆叠准则，任何一个元素都可以叠放在其他元素之上或者之下，决定元素叠放顺序的规则其实很清晰。<br><br>    当不包含z-index属性和position属性时，规则很简单，所有元素的叠放顺序与其所在HTML文档中出现的先后顺序一致。（当然使用负margin来重叠内联元素的特例除外。）<br><br>    当元素浮动float时，浮动块元素被放置于非定位块元素与定位块元素之间，具体的讲，浮动元素显示在普通流中的后代块元素之上，常规流中的后代行内元素之下。<br><br>    当加入position位置属性时，所有具有position属性的元素及其子元素会显示在其他不具有position属性的元素上面。（本文中具有position属性的元素指代的均是元素的position属性的值为除了static的其他值，如relative、absolute。）<br><br>    当引入z-index属性时，规则稍微变得复杂一点。<br>    1) z-index只在设置了position属性的元素上有效，没有position属性的元素上的z-index属性均不生效。<br>    2) z-index值会产生堆叠上下文。<br></p>

<h2 id="堆叠上下文"><a href="#堆叠上下文" class="headerlink" title="堆叠上下文"></a>堆叠上下文</h2><p><br>拥有共同父元素的一组元素共同前移或者后移构成了一个堆叠上下文。每个堆叠上下文有一个单一的根元素，当元素上形成一个新的堆叠上下文时，堆叠上下文中的所有子元素按照堆叠顺序被局限在一个固定的区域内。一个堆叠上下文构成一个整体，其内部元素有相对不同的堆叠顺序，但与其他堆叠上下文比较时，只能整体上移或者下移。<br><br>通俗的讲，如果某个元素被置于其所在堆叠上下文的最底层，我们是没有办法让他显示在另一个拥有更高层的堆叠上下文元素之上的，哪怕你将其z-index设置为无限大。那构成一个堆叠上下文的规则是怎样的呢？有如下情况：<br><br>    文档的根元素<br><br>    元素拥有position属性（除static属性之外），同事设置了不为auto的z-index属性。<br><br>    元素拥有opacity属性，且取值小于1<br><br>    一些新的css属性，如filter、css-regions等需要离屏渲染的属性，均能使元素形成堆叠上下文。<br><br>    指定position:fixed的元素，技术z-index为auto。<br></p>

<h2 id="同一堆叠上下文内子元素的堆叠顺序"><a href="#同一堆叠上下文内子元素的堆叠顺序" class="headerlink" title="同一堆叠上下文内子元素的堆叠顺序"></a>同一堆叠上下文内子元素的堆叠顺序</h2><p><br>从底层到上层依次为：<br><br>    堆叠上下文的根元素<br><br>    设置了position属性，并且z-index为负的元素及其子元素，z-index值较大的元素置于较小元素之上，同等属性值的元素按照html中出现的先后顺序堆叠。<br><br>    没有设置position的元素<br><br>    设置了position属性，并且z-index属性为auto的元素。<br><br>    设置了position属性，并且z-index属性为正值的元素。<br></p>

<h2 id="不同堆叠上下文"><a href="#不同堆叠上下文" class="headerlink" title="不同堆叠上下文"></a>不同堆叠上下文</h2><p><br>    堆叠上下文可以嵌入其他堆叠上下文。<br><br>    每个堆叠上下文和他的统计上下文是独立的。<br><br>    堆叠上下文中子元素按照前述顺序摆放。<br><br>    堆叠上下文内部的子堆叠上下文的z-index只在父堆叠上下文中有意义。<br></p>


<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p><br>在阐述完堆叠上下文的形成、堆叠上下文之间的堆叠规则，堆叠上下文内的堆叠顺序后，让我们回到文章最开始的问题。<br>起初元素的叠放顺序如下：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;div&gt;  //1</div><div class="line">  &lt;span class=&quot;red&quot;&gt;&lt;/span&gt;    //6</div><div class="line">&lt;/div&gt;</div><div class="line">&lt;div&gt;  //2</div><div class="line">  &lt;span class=&quot;green&quot;&gt;&lt;span&gt; //4</div><div class="line">&lt;/div&gt;</div><div class="line">&lt;div&gt;  //3</div><div class="line">  &lt;span class=&quot;blue&quot;&gt;&lt;/span&gt;  //5</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure><br><br><p><br>当添加属性opacity: 0.99后，第一个div形成了一个新的堆叠上下文，red span成为了新的上下文中的第一个子元素。元素结构变为：<br></p>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;div&gt;  //1</div><div class="line">  &lt;span class=&quot;red&quot;&gt;&lt;/span&gt;    //1.1</div><div class="line">&lt;/div&gt;</div><div class="line">&lt;div&gt;  //2</div><div class="line">  &lt;span class=&quot;green&quot;&gt;&lt;span&gt; //4</div><div class="line">&lt;/div&gt;</div><div class="line">&lt;div&gt;  //3</div><div class="line">  &lt;span class=&quot;blue&quot;&gt;&lt;/span&gt;  //5</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure>
<p>转载-&gt;<a href="http://blog.csdn.net/u014346301/article/details/53484968" target="_blank" rel="external">http://blog.csdn.net/u014346301/article/details/53484968</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;&lt;br&gt;HTML文档中有三个div元素，每个div中存在一个span元素，三个span元素分别设置背景颜色为red，green，以及blue
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>JavaScript易错知识点整理</title>
    <link href="http://yoursite.com/2016/11/05/jsBug/"/>
    <id>http://yoursite.com/2016/11/05/jsBug/</id>
    <published>2016-11-05T06:44:14.000Z</published>
    <updated>2016-12-07T06:58:40.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-变量作用域"><a href="#1-变量作用域" class="headerlink" title="1.变量作用域"></a>1.变量作用域</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">var a = 1;</div><div class="line">function test() &#123;</div><div class="line">    var a = 2;</div><div class="line"></div><div class="line">    console.log(a); // 2</div><div class="line">&#125;</div><div class="line"></div><div class="line">test();</div></pre></td></tr></table></figure>
<p><br>上方的函数作用域中声明并赋值了a，且在console之上，所以遵循就近原则输出a等于2。<br></p>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">var a = 1;</div><div class="line">function test2() &#123;</div><div class="line">    console.log(a); // undefined</div><div class="line"></div><div class="line">    var a = 2;</div><div class="line">&#125;</div><div class="line"></div><div class="line">test2();</div></pre></td></tr></table></figure>
<p><br>上方的函数作用域中虽然声明并赋值了a，但位于console之下，a变量被提升，输出时已声明但尚未被赋值，所以输出“undefined”。<br></p>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">var a = 1;</div><div class="line">function test3() &#123;</div><div class="line">    console.log(a); // 1</div><div class="line"></div><div class="line">    a = 2;</div><div class="line">&#125;</div><div class="line"></div><div class="line">test3();</div></pre></td></tr></table></figure>
<p><br>上方的函数作用域中a被重新赋值，未被重新声明，且位于console之下，所以输出全局作用域中的a。<br></p>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">let b = 1;</div><div class="line">function test4() &#123;</div><div class="line">    console.log(b); // b is not defined</div><div class="line"></div><div class="line">    let b = 2;</div><div class="line">&#125;</div><div class="line"></div><div class="line">test4();</div></pre></td></tr></table></figure>
<p><br>上方函数作用域中使用了ES6的let重新声明了变量b，而let不同于var其不存在变量提升的功能，所以输出报错“b is not defined”。<br></p>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">function test5() &#123;</div><div class="line">    let a = 1;</div><div class="line"></div><div class="line">    &#123;</div><div class="line">        let a = 2;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    console.log(a); // 1</div><div class="line">&#125;</div><div class="line"></div><div class="line">test5();</div></pre></td></tr></table></figure>
<p><br>上方的函数作用域中用let声明了a为1，并在块级作用域中声明了a为2，因为console并不在函数内的块级作用域中，所以输出1。<br></p>

<h2 id="2-类型比较"><a href="#2-类型比较" class="headerlink" title="2.类型比较"></a>2.类型比较</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var arr = [],</div><div class="line">    arr2 = [1];</div><div class="line"></div><div class="line">console.log(arr === arr2); // false</div></pre></td></tr></table></figure>
<p><br>上方两个不同的数组比较，console为false。<br></p>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var arr = [],</div><div class="line">    arr2 = [];</div><div class="line"></div><div class="line">console.log(arr === arr2); // false</div></pre></td></tr></table></figure>
<p><br>上方两个相同的数组比较，因为两个单独的数组永不相等，所以console为false。<br></p>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var arr = [],</div><div class="line">    arr2 = &#123;&#125;;</div><div class="line"></div><div class="line">console.log(typeof(arr) === typeof(arr2)); // true</div></pre></td></tr></table></figure>
<p><br>上方利用typeof比较数组和对象，因为typeof获取NULL、数组、对象的类型都为object，所以console为true。<br></p>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var arr = [];</div><div class="line"></div><div class="line">console.log(arr instanceof Object); // true</div><div class="line">console.log(arr instanceof Array); // true</div></pre></td></tr></table></figure>
<p><br>上方利用instanceof判断一个变量是否属于某个对象的实例，因为在JavaScript中数组也是对象的一种，所以两个console都为true。<br></p>

<h2 id="3-this指向"><a href="#3-this指向" class="headerlink" title="3.this指向"></a>3.this指向</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">var obj = &#123;</div><div class="line">    name: &apos;xiaoming&apos;,</div><div class="line">    getName: function () &#123;</div><div class="line">        return this.name</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">console.log(obj.getName());  // &apos;xiaoming&apos;</div></pre></td></tr></table></figure>
<p><br>上方对象方法中的this指向对象本身，所以输出”xiaoming”。<br></p>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">var obj = &#123;</div><div class="line">    myName: &apos;xiaoming&apos;,</div><div class="line">    getName: function () &#123;</div><div class="line">        return this.myName</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">var nameFn = obj.getName;</div><div class="line"></div><div class="line">console.log(nameFn()); // undefined</div></pre></td></tr></table></figure>
<p><br>上方将对象中的方法赋值给了一个变量，此时方法中的this也将不再指向obj对象，从而指向window对象，所以console为”undefined”。<br></p>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">var obj = &#123;</div><div class="line">    myName: &apos;xiaoming&apos;,</div><div class="line">    getName: function () &#123;</div><div class="line">        return this.myName</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">var obj2 = &#123;</div><div class="line">    myName: &apos;xiaohua&apos;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">var nameFn = obj.getName;</div><div class="line"></div><div class="line">console.log(nameFn.apply(obj2)); // &apos;xiaohua&apos;</div></pre></td></tr></table></figure>
<p><br>上方同样将obj对象中的方法赋值给了变量nameFn，但是通过apply方法将this指向了obj2对象，所以最终console为’xiaohua’。<br></p>


<h2 id="4-函数参数"><a href="#4-函数参数" class="headerlink" title="4.函数参数"></a>4.函数参数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">function test6() &#123;</div><div class="line">    console.log(Array.prototype.slice.call(arguments)); // [1, 2]</div><div class="line">&#125;</div><div class="line"></div><div class="line">test6(1, 2);</div></pre></td></tr></table></figure>
<p><br>上方利用函数中的arguments类数组对象获取传入函数的参数数组，所以输出数组[1, 2]。<br></p>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">function test7 () &#123;</div><div class="line">    return function () &#123;</div><div class="line">        console.log(Array.prototype.slice.call(arguments)); // 未执行到此，无输出</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">test7(1, 2);</div></pre></td></tr></table></figure>
<p><br>上方同样利用arguments获取参数，但因test7(1, 2)未执行return中的函数，所以无输出，若执行test7(1, 2)(3, 4)则会输出[3, 4]。<br></p>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">var args = [1, 2];</div><div class="line"></div><div class="line">function test9() &#123;</div><div class="line">    console.log(Array.prototype.slice.call(arguments)); // [1, 2, 3, 4]</div><div class="line">&#125;</div><div class="line"></div><div class="line">Array.prototype.push.call(args, 3, 4);</div><div class="line"></div><div class="line">test9(...args);</div></pre></td></tr></table></figure>
<p><br>上方利用Array.prototype.push.call()方法向args数组中插入了3和4，并利用ES6延展操作符(…)将数组展开并传入test9，所以console为[1, 2, 3, 4]。<br></p>

<h2 id="5-闭包问题"><a href="#5-闭包问题" class="headerlink" title="5.闭包问题"></a>5.闭包问题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">var elem = document.getElementsByTagName(&apos;div&apos;); // 如果页面上有5个div</div><div class="line"></div><div class="line">for(var i = 0; i &lt; elem.length; i++) &#123;</div><div class="line">    elem[i].onclick = function () &#123;</div><div class="line">        alert(i); // 总是5</div><div class="line">    &#125;;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><br>上方是一个很常见闭包问题，点击任何div弹出的值总是5，因为当你触发点击事件的时候i的值早已是5，可以用下面方式解决：<br></p>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">var elem = document.getElementsByTagName(&apos;div&apos;); // 如果页面上有5个div</div><div class="line"></div><div class="line">for(var i = 0; i &lt; elem.length; i++) &#123;</div><div class="line">    (function (w) &#123;</div><div class="line">        elem[w].onclick = function () &#123;</div><div class="line">            alert(w); // 依次为0,1,2,3,4</div><div class="line">        &#125;;</div><div class="line">    &#125;)(i);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><br>在绑定点击事件外部封装一个立即执行函数，并将i传入该函数即可。<br></p>

<h2 id="6-对象拷贝与赋值"><a href="#6-对象拷贝与赋值" class="headerlink" title="6.对象拷贝与赋值"></a>6.对象拷贝与赋值</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">var obj = &#123;</div><div class="line">    name: &apos;xiaoming&apos;,</div><div class="line">    age: 23</div><div class="line">&#125;;</div><div class="line"></div><div class="line">var newObj = obj;</div><div class="line"></div><div class="line">newObj.name = &apos;xiaohua&apos;;</div><div class="line"></div><div class="line">console.log(obj.name); // &apos;xiaohua&apos;</div><div class="line">console.log(newObj.name); // &apos;xiaohua&apos;</div></pre></td></tr></table></figure>
<p><br>上方我们将obj对象赋值给了newObj对象，从而改变newObj的name属性，但是obj对象的name属性也被篡改，这是因为实际上newObj对象获得的只是一个内存地址，而不是真正 的拷贝，所以obj对象被篡改。<br></p>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">var obj2 = &#123;</div><div class="line">    name: &apos;xiaoming&apos;,</div><div class="line">    age: 23</div><div class="line">&#125;;</div><div class="line"></div><div class="line">var newObj2 = Object.assign(&#123;&#125;, obj2, &#123;color: &apos;blue&apos;&#125;);</div><div class="line"></div><div class="line">newObj2.name = &apos;xiaohua&apos;;</div><div class="line"></div><div class="line">console.log(obj2.name); // &apos;xiaoming&apos;</div><div class="line">console.log(newObj2.name); // &apos;xiaohua&apos;</div><div class="line">console.log(newObj2.color); // &apos;blue&apos;</div></pre></td></tr></table></figure>
<p><br>上方利用Object.assign()方法进行对象的深拷贝可以避免源对象被篡改的可能。因为Object.assign() 方法可以把任意多个的源对象自身的可枚举属性拷贝给目标对象，然后返回目标对象。<br></p>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">var obj3 = &#123;</div><div class="line">    name: &apos;xiaoming&apos;,</div><div class="line">    age: 23</div><div class="line">&#125;;</div><div class="line"></div><div class="line">var newObj3 = Object.create(obj3);</div><div class="line"></div><div class="line">newObj3.name = &apos;xiaohua&apos;;</div><div class="line"></div><div class="line">console.log(obj3.name); // &apos;xiaoming&apos;</div><div class="line">console.log(newObj3.name); // &apos;xiaohua&apos;</div></pre></td></tr></table></figure>
<p><br>我们也可以使用Object.create()方法进行对象的拷贝，Object.create()方法可以创建一个具有指定原型对象和属性的新对象。<br></p>


<p>转载-&gt;<a href="https://gold.xitu.io/post/584268a561ff4b006c27c7b9" target="_blank" rel="external">https://gold.xitu.io/post/584268a561ff4b006c27c7b9</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-变量作用域&quot;&gt;&lt;a href=&quot;#1-变量作用域&quot; class=&quot;headerlink&quot; title=&quot;1.变量作用域&quot;&gt;&lt;/a&gt;1.变量作用域&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>JavaScript面向对象与原型</title>
    <link href="http://yoursite.com/2016/11/02/jsObject/"/>
    <id>http://yoursite.com/2016/11/02/jsObject/</id>
    <published>2016-11-02T07:46:33.000Z</published>
    <updated>2016-12-02T08:36:34.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="工厂模式：无法识别对象"><a href="#工厂模式：无法识别对象" class="headerlink" title="工厂模式：无法识别对象"></a>工厂模式：无法识别对象</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">function createObject(name, age) &#123; //集中实例化的函数</div><div class="line">　　var obj = new Object();</div><div class="line">　　obj.name = name;</div><div class="line">　　obj.age = age;</div><div class="line">　　obj.run = function () &#123;</div><div class="line">　　　　return this.name + this.age + &apos;运行中...&apos;;</div><div class="line">　　&#125;;</div><div class="line">　　return obj;</div><div class="line">&#125;</div><div class="line">var box1 = createObject(&apos;Lee&apos;, 100); //第一个实例</div><div class="line">var box2 = createObject(&apos;Jack&apos;, 200); //第二个实例</div><div class="line">alert(box1.run());</div><div class="line">alert(box2.run()); //保持独立</div><div class="line">alert(typeof box1); //Object</div><div class="line">alert(box1 instanceof Object); //true</div></pre></td></tr></table></figure>
<h2 id="构造函数-构造方法-：可以识别对象"><a href="#构造函数-构造方法-：可以识别对象" class="headerlink" title="构造函数(构造方法)：可以识别对象"></a>构造函数(构造方法)：可以识别对象</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">function Box(name, age) &#123; //构造函数模式</div><div class="line">　　this.name = name;</div><div class="line">　　this.age = age;</div><div class="line">　　this.run = function () &#123;</div><div class="line">　　　　return this.name + this.age + &apos;运行中...&apos;;</div><div class="line">　　&#125;;</div><div class="line">&#125;</div><div class="line">var box1 = new Box(&apos;Lee&apos;, 100); //new Box()即可</div><div class="line">var box2 = new Box(&apos;Jack&apos;, 200);</div><div class="line">alert(box1.run());</div><div class="line">alert(box1 instanceof Box); //很清晰的识别他从属于 Box</div></pre></td></tr></table></figure>
<h2 id="构造函数的方法有一些规范："><a href="#构造函数的方法有一些规范：" class="headerlink" title="构造函数的方法有一些规范："></a>构造函数的方法有一些规范：</h2><p><br>1.函数名和实例化构造名相同且大写，(PS：非强制，但这么写有助于区分构造函数和普通函数)；<br>2.通过构造函数创建对象，必须使用 new 运算符。<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var o = new Object();</div><div class="line">Box.call(o, &apos;Jack&apos;, 200) //对象冒充调用</div><div class="line">alert(o.run());</div></pre></td></tr></table></figure><br><br><p><br>原型（共享）：创建的每个函数都有一个 prototype(原型)属性，这个属性是一个对象，它的用途是包含可以由特定类型的所有实例共享的属性和方法。逻辑上可以这么理解：prototype 通过调用构造函数而创建的那个对象的原型对象。使用原型的好处可以让所有对象实例共享它所包含的属性和方法。也就是说，不必在构造函数中定义对象信息，而是可以直接将这些信息添加到原型中。<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">unction Box() &#123;&#125; //声明一个构造函数</div><div class="line">Box.prototype.name = &apos;Lee&apos;; //在原型里添加属性</div><div class="line">Box.prototype.age = 100;</div><div class="line">Box.prototype.run = function () &#123; //在原型里添加方法</div><div class="line">　　return this.name + this.age + &apos;运行中...&apos;;</div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br><img src="https://zhaoxingzi.github.io/img/js.png" alt="js.png"><br><p><br>在原型模式声明中，多了两个属性，这两个属性都是创建对象时自动生成的。<br>proto属性：是实例指向原型对象的一个指针，它的作用就是指向构造函数的原型属性 constructor 。通过这两个属性，就可以访问到原型里的属性和方法了。<br>PS：IE 浏览器在脚本访问proto会不能识别，火狐和谷歌浏览器及其他某些浏览器均能识别。虽然可以输出，但无法获取内部信息。<br>判断一个对象是否指向了该构造函数的原型对象，可以使用 isPrototypeOf()方法来测试。<br>exp：alert(Box.prototype.isPrototypeOf(box)); //只要实例化对象，即都会指向<br></p>

<h2 id="原型模式的执行流程："><a href="#原型模式的执行流程：" class="headerlink" title="原型模式的执行流程："></a>原型模式的执行流程：</h2><p><br>1.先查找构造函数实例里的属性或方法，如果有，立刻返回；<br>2.如果构造函数实例里没有，则去它的原型对象里找，如果有，就返回；<br>虽然我们可以通过对象实例访问保存在原型中的值，但却不能访问通过对象实例重写原型中的值。<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">var box1 = new Box();</div><div class="line">alert(box1.name); //Lee，原型里的值</div><div class="line">box1.name = &apos;Jack&apos;;</div><div class="line">alert(box.1name); //Jack，就近原则，</div><div class="line">var box2 = new Box();</div><div class="line">alert(box2.name); //Lee，原型里的值，没有被 box1 修改</div><div class="line">如果想要 box1 也能在后面继续访问到原型里的值，可以把构造函数里的属性删除即可 ，具体如下：</div><div class="line">delete box1.name; //删除属性</div><div class="line">alert(box1.name);</div><div class="line">如何判断属性是在构造函数的实例里，还是在原型里？可以使用 hasOwnProperty()函数来验证：</div><div class="line">alert(box.hasOwnProperty(&apos;name&apos;)); //实例里有返回 true，否则返回 false</div></pre></td></tr></table></figure><br><br><p><br>in 操作符会在通过对象能够访问给定属性时返回 true，无论该属性存在于实例中还是原型中。<br>alert(‘name’ in box); //true，存在实例中或原型中<br>我们可以通过 hasOwnProperty()方法检测属性是否存在实例中，也可以通过 in 来判断实例或原型中是否存在属性。那么结合这两种方法，可以判断原型中是否存在属性。<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">function isProperty(object, property) &#123; //判断原型中是否存在属性</div><div class="line">　　return !object.hasOwnProperty(property) &amp;&amp; (property in object);</div><div class="line">&#125;</div><div class="line">var box = new Box();</div><div class="line">alert(isProperty(box, &apos;name&apos;)) //true，如果原型有</div></pre></td></tr></table></figure><br><br><p><br>    为了让属性和方法更好的体现封装的效果，并且减少不必要的输入，原型的创建可以使用字面量的方式：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">function Box() &#123;&#125;;</div><div class="line">Box.prototype = &#123; //使用字面量的方式</div><div class="line">　　name : &apos;Lee&apos;,</div><div class="line">　　age : 100,</div><div class="line">　　run : function () &#123;</div><div class="line">　　　　return this.name + this.age + &apos;运行中...&apos;;</div><div class="line">　　&#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure><br><br><p><br>使用构造函数创建原型对象和使用字面量创建对象在使用上基本相同，但还是有一些区别，字面量创建的方式使用 constructor 属性不会指向实例，而会指向 Object，构造函数创建的方式则相反。<br>如果想让字面量方式的 constructor 指向实例对象，那么可以这么做：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Box.prototype = &#123;</div><div class="line">　　constructor : Box, //直接强制指向即可</div><div class="line">&#125;;</div></pre></td></tr></table></figure><br><br><p><br>原型对象不仅仅可以在自定义对象的情况下使用，而 ECMAScript 内置的引用类型都可以使用这种方式，并且内置的引用类型本身也使用了原型。<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">alert(Array.prototype.sort); //sort 就是 Array 类型的原型方法</div><div class="line">alert(String.prototype.substring); //substring 就是 String 类型的原型方法</div><div class="line">String.prototype.addstring = function () &#123; //给 String 类型添加一个方法</div><div class="line">　　return this + &apos;，被添加了！&apos;; //this 代表调用的字符串</div><div class="line">&#125;;</div><div class="line">alert(&apos;Lee&apos;.addstring()); //使用这个方法</div></pre></td></tr></table></figure><br><br><p><br>PS：尽管给原生的内置引用类型添加方法使用起来特别方便，但我们不推荐使用这种方法。因为它可能会导致命名冲突，不利于代码维护。<br></p>

<h2 id="动态原型模式"><a href="#动态原型模式" class="headerlink" title="动态原型模式"></a>动态原型模式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">function Box(name ,age) &#123; //将所有信息封装到函数体内</div><div class="line">　　this.name = name;</div><div class="line">　　this.age = age;</div><div class="line">　　if (typeof this.run != &apos;function&apos;) &#123; //仅在第一次调用的初始化</div><div class="line">　　　　Box.prototype.run = function () &#123;</div><div class="line">　　　　　　return this.name + this.age + &apos;运行中...&apos;;</div><div class="line">　　　　&#125;;</div><div class="line">　　&#125;</div><div class="line">&#125;</div><div class="line">var box = new Box(&apos;Lee&apos;, 100);</div><div class="line">alert(box.run());</div></pre></td></tr></table></figure>
<p><br>PS：使用动态原型模式，要注意一点，不可以再使用字面量的方式重写原型，因为会切断实例和新原型之间的联系。<br></p>

<h2 id="寄生构造函数"><a href="#寄生构造函数" class="headerlink" title="寄生构造函数"></a>寄生构造函数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">function Box(name, age) &#123;</div><div class="line">　　var obj = new Object();</div><div class="line">　　obj.name = name;</div><div class="line">　　obj.age = age;</div><div class="line">　　obj.run = function () &#123;</div><div class="line">　　　　return this.name + this.age + &apos;运行中...&apos;;</div><div class="line">　　&#125;;</div><div class="line">　　return obj;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="稳妥构造函数"><a href="#稳妥构造函数" class="headerlink" title="稳妥构造函数"></a>稳妥构造函数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">function Box(name , age) &#123;</div><div class="line">　　var obj = new Object();</div><div class="line">　　obj.run = function () &#123;</div><div class="line">　　　　return name + age + &apos;运行中...&apos;; //直接打印参数即可</div><div class="line">　　&#125;;</div><div class="line">　　return obj;</div><div class="line">&#125;</div><div class="line">var box = Box(&apos;Lee&apos;, 100); //直接调用函数</div><div class="line">alert(box.run());</div></pre></td></tr></table></figure>
<h2 id="继承：依靠原型链完成"><a href="#继承：依靠原型链完成" class="headerlink" title="继承：依靠原型链完成"></a>继承：依靠原型链完成</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">function Box() &#123; //Box 构造</div><div class="line">　　this.name = &apos;Lee&apos;;</div><div class="line">&#125;</div><div class="line">function Desk() &#123; //Desk 构造</div><div class="line">　　this.age = 100;</div><div class="line">&#125;</div><div class="line">Desk.prototype = new Box(); //Desc 继承了 Box，通过原型，形成链条</div><div class="line">var desk = new Desk();</div><div class="line">alert(desk.age);</div><div class="line">alert(desk.name); //得到被继承的属性</div><div class="line">function Table() &#123; //Table 构造</div><div class="line">　　this.level = &apos;AAAAA&apos;;</div><div class="line">&#125;</div><div class="line">Table.prototype = new Desk(); //继续原型链继承</div><div class="line">var table = new Table();</div><div class="line">alert(table.name); //继承了 Box 和 Desk</div></pre></td></tr></table></figure>
<p><img src="https://zhaoxingzi.github.io/img/js1.png" alt="js1.png"></p>
<p><br>在 JavaScript 里，被继承的函数称为超类型(父类，基类也行，其他语言叫法)，继承的函数称为子类型(子类，派生类)。继承也有之前问题，比如字面量重写原型会中断关系，使用引用类型的原型，并且子类型还无法给超类型传递参数。<br></p>

<h2 id="对象冒充-伪造对象、经典继承、借用构造函数-：解决引用共享和超类型无法传参的问题"><a href="#对象冒充-伪造对象、经典继承、借用构造函数-：解决引用共享和超类型无法传参的问题" class="headerlink" title="对象冒充(伪造对象、经典继承、借用构造函数)：解决引用共享和超类型无法传参的问题"></a>对象冒充(伪造对象、经典继承、借用构造函数)：解决引用共享和超类型无法传参的问题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">function Box(age) &#123;</div><div class="line">　　this.name = [&apos;Lee&apos;, &apos;Jack&apos;, &apos;Hello&apos;]</div><div class="line">　　this.age = age;</div><div class="line">&#125;</div><div class="line">function Desk(age) &#123;</div><div class="line">　　Box.call(this, age); //对象冒充，给超类型传参</div><div class="line">&#125;</div><div class="line">var desk = new Desk(200);</div><div class="line">alert(desk.age);</div><div class="line">alert(desk.name);</div><div class="line">desk.name.push(&apos;AAA&apos;); //添加的新数据，只给 desk</div><div class="line">alert(desk.name);</div></pre></td></tr></table></figure>
<h2 id="组合继承：原型链-借用构造函数"><a href="#组合继承：原型链-借用构造函数" class="headerlink" title="组合继承：原型链+ 借用构造函数"></a>组合继承：原型链+ 借用构造函数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">function Box(age) &#123;</div><div class="line">　　this.name = [&apos;Lee&apos;, &apos;Jack&apos;, &apos;Hello&apos;]</div><div class="line">　　this.age = age;</div><div class="line">&#125;</div><div class="line">Box.prototype.run = function () &#123;</div><div class="line">　　return this.name + this.age;</div><div class="line">&#125;;</div><div class="line">function Desk(age) &#123;</div><div class="line">　　Box.call(this, age); //对象冒充</div><div class="line">&#125;</div><div class="line">Desk.prototype = new Box(); //原型链继承</div><div class="line">var desk = new Desk(100);</div><div class="line">alert(desk.run());</div></pre></td></tr></table></figure>
<h2 id="寄生组合继承"><a href="#寄生组合继承" class="headerlink" title="寄生组合继承"></a>寄生组合继承</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">function obj(o) &#123;     //传递一个字面量函数</div><div class="line">　　function F() &#123;&#125;    //临时新建一个构造函数，用来存储传递进来的对象</div><div class="line">　　F.prototype = o;    //将o对象实例赋值给F构造的原型对象</div><div class="line">　　return new F();    //返回实例化后的构造函数</div><div class="line">&#125;</div><div class="line">function create(box, desk) &#123;</div><div class="line">　　var f = obj(box.prototype);</div><div class="line">　　f.constructor = desk;</div><div class="line">　　desk.prototype = f;</div><div class="line">&#125;</div><div class="line">function Box(name) &#123;</div><div class="line">　　this.name = name;</div><div class="line">　　this.arr = [&apos;哥哥&apos;,&apos;妹妹&apos;,&apos;父母&apos;];</div><div class="line">&#125;</div><div class="line">Box.prototype.run = function () &#123;</div><div class="line">　　return this.name;</div><div class="line">&#125;;</div><div class="line">function Desk(name, age) &#123;</div><div class="line">　　Box.call(this, name);</div><div class="line">　　this.age = age;</div><div class="line">&#125;</div><div class="line">inPrototype(Box, Desk); //通过这里实现继承</div><div class="line">var desk = new Desk(&apos;Lee&apos;,100);</div><div class="line">desk.arr.push(&apos;姐姐&apos;);</div><div class="line">alert(desk.arr);</div><div class="line">alert(desk.run()); //只共享了方法</div><div class="line">var desk2 = new Desk(&apos;Jack&apos;, 200);</div><div class="line">alert(desk2.arr); //引用问题解决</div></pre></td></tr></table></figure>
<p>转载-&gt;<a href="http://www.cnblogs.com/sctnl/p/6086121.html" target="_blank" rel="external">http://www.cnblogs.com/sctnl/p/6086121.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;工厂模式：无法识别对象&quot;&gt;&lt;a href=&quot;#工厂模式：无法识别对象&quot; class=&quot;headerlink&quot; title=&quot;工厂模式：无法识别对象&quot;&gt;&lt;/a&gt;工厂模式：无法识别对象&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;tabl
    
    </summary>
    
    
      <category term="JavaScript,面向对象" scheme="http://yoursite.com/tags/JavaScript-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>css正方体滚动</title>
    <link href="http://yoursite.com/2016/10/31/cssCube/"/>
    <id>http://yoursite.com/2016/10/31/cssCube/</id>
    <published>2016-10-31T11:37:14.000Z</published>
    <updated>2016-12-01T11:41:01.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">	&lt;head&gt;</div><div class="line">		&lt;meta charset=&quot;utf-8&quot;&gt;</div><div class="line">		&lt;title&gt;立方体&lt;/title&gt;</div><div class="line">	&lt;/head&gt;</div><div class="line">	&lt;body&gt;</div><div class="line">		&lt;div class=&quot;eyes&quot;&gt;</div><div class="line">			&lt;div class=&quot;box&quot;&gt;</div><div class="line">				&lt;div class=&quot;div1&quot;&gt;1&lt;/div&gt;</div><div class="line">				&lt;div class=&quot;div11&quot;&gt;1&lt;/div&gt;</div><div class="line">				&lt;div class=&quot;div2&quot;&gt;2&lt;/div&gt;</div><div class="line">				&lt;div class=&quot;div22&quot;&gt;2&lt;/div&gt;</div><div class="line">				&lt;div class=&quot;div3&quot;&gt;3&lt;/div&gt;</div><div class="line">				&lt;div class=&quot;div33&quot;&gt;3&lt;/div&gt;</div><div class="line">				&lt;div class=&quot;div4&quot;&gt;4&lt;/div&gt;</div><div class="line">				&lt;div class=&quot;div44&quot;&gt;4&lt;/div&gt;</div><div class="line">				&lt;div class=&quot;div5&quot;&gt;5&lt;/div&gt;</div><div class="line">				&lt;div class=&quot;div55&quot;&gt;5&lt;/div&gt;</div><div class="line">				&lt;div class=&quot;div6&quot;&gt;6&lt;/div&gt;</div><div class="line">				&lt;div class=&quot;div66&quot;&gt;6&lt;/div&gt;</div><div class="line">			&lt;/div&gt;</div><div class="line">		&lt;/div&gt;</div><div class="line">	&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div></pre></td><td class="code"><pre><div class="line">&lt;style type=&quot;text/css&quot;&gt;</div><div class="line">	.eyes&#123;</div><div class="line">		perspective: 1200px;</div><div class="line">		perspective-origin: 50% 50%;</div><div class="line">	&#125;</div><div class="line">	.box&#123;</div><div class="line">		transform-style: preserve-3d;</div><div class="line">		background-color: red;				</div><div class="line">		height: 200px;</div><div class="line">		width: 200px;</div><div class="line">		margin-top: 30vh;</div><div class="line">		margin-left: 40vw;</div><div class="line">		position: absolute;</div><div class="line">		animation: move 9s linear infinite;</div><div class="line">		animation-direction: alternate;</div><div class="line">	&#125;</div><div class="line">	@keyframes move&#123;</div><div class="line">		0%&#123;transform: rotateX(0) rotateY(0);&#125;</div><div class="line">		100%&#123;transform: rotateX(720deg) rotateY(720deg);&#125;</div><div class="line">	&#125;</div><div class="line">	.box:hover .div1&#123;</div><div class="line">		transform: rotateX(90deg) translateZ(300px) scale(2,2);</div><div class="line">	&#125;</div><div class="line">	.box:hover .div2&#123;</div><div class="line">		transform: rotateX(270deg) translateZ(300px) scale(2,2);</div><div class="line">	&#125;</div><div class="line">	.box:hover .div3&#123;</div><div class="line">		transform: rotateY(270deg) translateZ(300px) scale(2,2);</div><div class="line">	&#125;</div><div class="line">	.box:hover .div4&#123;</div><div class="line">		transform: rotateY(90deg) translateZ(300px) scale(2,2);</div><div class="line">	&#125;</div><div class="line">	.box:hover .div5&#123;</div><div class="line">		transform: translateZ(300px) scale(2,2);</div><div class="line">	&#125;</div><div class="line">	.box:hover .div6&#123;</div><div class="line">		transform: translateZ(-300px) scale(2,2);</div><div class="line">	&#125;</div><div class="line">	.box div&#123;</div><div class="line">		width: 200px;</div><div class="line">		height: 200px;</div><div class="line">		font-size: 80px;</div><div class="line">		text-align: center;</div><div class="line">		line-height: 200px;</div><div class="line">		color: white;</div><div class="line">		position: absolute;</div><div class="line">		opacity: 0.5;</div><div class="line">	&#125;</div><div class="line">	.div1&#123;</div><div class="line">		background-color: lightblue;</div><div class="line">		transform: rotateX(90deg) translateZ(100px);</div><div class="line">		transition: 1s;</div><div class="line"></div><div class="line">	&#125;</div><div class="line">	.div11&#123;</div><div class="line">		background-color: lightblue;</div><div class="line">		transform: rotateX(90deg) translateZ(100px);</div><div class="line">		transition: 1s;</div><div class="line"></div><div class="line">	&#125;</div><div class="line">	.div2&#123;</div><div class="line">		background-color: red;</div><div class="line">		transform: rotateX(270deg) translateZ(100px);</div><div class="line">		transition: 1s;</div><div class="line">	&#125;</div><div class="line">	.div22&#123;</div><div class="line">		background-color: red;</div><div class="line">		transform: rotateX(270deg) translateZ(100px);</div><div class="line">		transition: 1s;</div><div class="line">	&#125;</div><div class="line">	.div3&#123;</div><div class="line">		background-color: yellow;</div><div class="line">		transform: rotateY(270deg) translateZ(100px);</div><div class="line">		transition: 1s;</div><div class="line">	&#125;</div><div class="line">	.div33&#123;</div><div class="line">		background-color: yellow;</div><div class="line">		transform: rotateY(270deg) translateZ(100px);</div><div class="line">		transition: 1s;</div><div class="line">	&#125;</div><div class="line">	.div4&#123;</div><div class="line">		background-color: lightgreen;</div><div class="line">		transform: rotateY(90deg) translateZ(100px);</div><div class="line">		transition: 1s;</div><div class="line">	&#125;</div><div class="line">	.div44&#123;</div><div class="line">		background-color: lightgreen;</div><div class="line">		transform: rotateY(90deg) translateZ(100px);</div><div class="line">		transition: 1s;</div><div class="line">	&#125;</div><div class="line">	.div5&#123;</div><div class="line">		background-color: purple;</div><div class="line">		transform: translateZ(100px);</div><div class="line">		transition: 1s;</div><div class="line">		</div><div class="line">	&#125;</div><div class="line">	.div55&#123;</div><div class="line">		background-color: purple;</div><div class="line">		transform: translateZ(100px);</div><div class="line">		transition: 1s;</div><div class="line">		</div><div class="line">	&#125;</div><div class="line">	.div6&#123;</div><div class="line">		background-color: pink;</div><div class="line">		transform: translateZ(-100px);</div><div class="line">		transition: 1s;</div><div class="line">	&#125;</div><div class="line">	.div66&#123;</div><div class="line">		background-color: pink;</div><div class="line">		transform: translateZ(-100px);</div><div class="line">		transition: 1s;</div><div class="line">	&#125;</div><div class="line">&lt;/style&gt;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;HTML&quot;&gt;&lt;a href=&quot;#HTML&quot; class=&quot;headerlink&quot; title=&quot;HTML&quot;&gt;&lt;/a&gt;HTML&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Math随机数做双色球</title>
    <link href="http://yoursite.com/2016/10/28/MathSuiji/"/>
    <id>http://yoursite.com/2016/10/28/MathSuiji/</id>
    <published>2016-10-28T08:07:55.000Z</published>
    <updated>2016-11-26T08:13:38.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">	&lt;head&gt;</div><div class="line">		&lt;meta charset=&quot;utf-8&quot;&gt;</div><div class="line">		&lt;title&gt;&lt;/title&gt;</div><div class="line">	&lt;/head&gt;</div><div class="line">	&lt;body&gt;</div><div class="line">		&lt;div class=&quot;wrap&quot;&gt;</div><div class="line">			&lt;input type=&quot;button&quot; class=&quot;btn&quot; value=&quot;点击摇奖&quot;&gt;</div><div class="line">			&lt;div class=&quot;loading&quot;&gt;请开始摇奖&lt;/div&gt;</div><div class="line">			&lt;div class=&quot;case&quot;&gt;</div><div class="line">				&lt;ul&gt;					</div><div class="line">				&lt;/ul&gt;</div><div class="line">				&lt;ol&gt;					</div><div class="line">				&lt;/ol&gt;</div><div class="line">			&lt;/div&gt;</div><div class="line">		&lt;/div&gt;	</div><div class="line">	&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<h2 id="CSS样式"><a href="#CSS样式" class="headerlink" title="CSS样式"></a>CSS样式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line">&lt;style type=&quot;text/css&quot;&gt;</div><div class="line">	.wrap&#123;</div><div class="line">		width: 400px;</div><div class="line">		height: 600px;</div><div class="line">		background-color: red;</div><div class="line">		position: relative;</div><div class="line">		margin: 0 auto;</div><div class="line">	&#125;</div><div class="line">	.wrap .btn&#123;</div><div class="line">		width: 150px;</div><div class="line">		height: 40px;</div><div class="line">		font-size: 20px;</div><div class="line">		display: block;</div><div class="line">		margin: 0 auto 30px;</div><div class="line">		text-align: center;</div><div class="line">		line-height: 40px;</div><div class="line">		color: gold;</div><div class="line">		border: none;</div><div class="line">	&#125;</div><div class="line">	.loading&#123;</div><div class="line">		width: 400px;</div><div class="line">		height: 60px;</div><div class="line">		background-color: white;</div><div class="line">		margin: 0 auto;</div><div class="line">		line-height: 60px;</div><div class="line">		color: #666;</div><div class="line">		text-align: center;</div><div class="line">		font-size: 30px;</div><div class="line">	&#125;</div><div class="line">	.case&#123;</div><div class="line">		display: none;</div><div class="line">	&#125;</div><div class="line">	.case&#123;</div><div class="line">		width: 300px;</div><div class="line">		height: 60px;</div><div class="line">		background-color: white;</div><div class="line">		margin: 0 auto;</div><div class="line">	&#125;</div><div class="line">	.case ul&#123;</div><div class="line">		left: 20px;</div><div class="line">		position: absolute;</div><div class="line">		list-style: none;</div><div class="line">		width: 260px;</div><div class="line">	&#125;</div><div class="line">	.case ol&#123;</div><div class="line">		list-style: none;</div><div class="line">		width: 50px;</div><div class="line">		float: right;</div><div class="line">	&#125;</div><div class="line">	.case ol li&#123;</div><div class="line">		width: 30px;</div><div class="line">		height: 30px;</div><div class="line">		border-radius: 50%;</div><div class="line">		color: white;</div><div class="line">		background-color: blue;</div><div class="line">		line-height: 30px;</div><div class="line">		text-align: center;</div><div class="line">	&#125;</div><div class="line">	.case ul li&#123;</div><div class="line">		width: 30px;</div><div class="line">		height: 30px;</div><div class="line">		border-radius: 50%;</div><div class="line">		color: white;</div><div class="line">		background-color: red;</div><div class="line">		float: left;</div><div class="line">		margin: 0 3px;</div><div class="line">		line-height: 30px;</div><div class="line">		text-align: center;</div><div class="line">	&#125;</div><div class="line">&lt;/style&gt;</div></pre></td></tr></table></figure>
<h2 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">&lt;script type=&quot;text/javascript&quot;&gt;</div><div class="line">	var btn = document.querySelector(&quot;.btn&quot;);		</div><div class="line">	btn.onclick = function()&#123;</div><div class="line">		var redNum = 6;</div><div class="line">		var blueNum = 1;</div><div class="line">		var redList = [];</div><div class="line">		var blueList = [];</div><div class="line">		var redHtml = &quot;&quot;;</div><div class="line">		var blueHtml = &quot;&quot;;</div><div class="line">		var loading = document.querySelector(&quot;.loading&quot;);</div><div class="line">		var ca = document.querySelector(&quot;.case&quot;);</div><div class="line">		loading.style.display = &quot;none&quot;;</div><div class="line">		ca.style.display = &quot;block&quot;;</div><div class="line">		for (var i = 0;i&lt;redNum;i++) &#123;</div><div class="line">			redList.push(random(1,33));</div><div class="line">		&#125;</div><div class="line">		for (var j = 0;j&lt;blueNum;j++) &#123;</div><div class="line">			blueList.push(random(1,16));</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		for (var h = 0;h&lt;redList.length;h++) &#123;</div><div class="line">			if (redList[h]&lt; 10) &#123;</div><div class="line">				redHtml +=&quot;&lt;li&gt;0&quot;+redList[h]+&quot;&lt;/li&gt;&quot;;</div><div class="line">			&#125;else&#123;</div><div class="line">				redHtml +=&quot;&lt;li&gt;&quot;+redList[h]+&quot;&lt;/li&gt;&quot;;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		if (blueList[0]&lt; 10) &#123;</div><div class="line">			blueHtml +=&quot;&lt;li&gt;0&quot;+blueList[0]+&quot;&lt;/li&gt;&quot;;</div><div class="line">		&#125;else&#123;</div><div class="line">			blueHtml +=&quot;&lt;li&gt;&quot;+blueList[0]+&quot;&lt;/li&gt;&quot;;</div><div class="line">		&#125;</div><div class="line">		document.querySelector(&quot;.case ul&quot;).innerHTML = redHtml;</div><div class="line">		document.querySelector(&quot;.case ol&quot;).innerHTML = blueHtml;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	function random(m,n) &#123;</div><div class="line">		var num = Math.max(m,n) - Math.min(m,n);</div><div class="line">		return Math.round(Math.random()*num+Math.min(m,n));</div><div class="line">	&#125;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;HTML&quot;&gt;&lt;a href=&quot;#HTML&quot; class=&quot;headerlink&quot; title=&quot;HTML&quot;&gt;&lt;/a&gt;HTML&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>canvas绘制熊本熊</title>
    <link href="http://yoursite.com/2016/10/26/canvasXiong/"/>
    <id>http://yoursite.com/2016/10/26/canvasXiong/</id>
    <published>2016-10-26T06:36:27.000Z</published>
    <updated>2016-11-26T07:28:30.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="从网上看到一个用canvas绘制的熊本熊"><a href="#从网上看到一个用canvas绘制的熊本熊" class="headerlink" title="从网上看到一个用canvas绘制的熊本熊"></a>从网上看到一个用canvas绘制的熊本熊</h3><p><img src="http://cdn.saymagic.cn/o_1aqq369m11jrs4o4g3o7pe10119.png" alt="o_1aqq369m11jrs4o4g3o7pe10119.png"></p>
<h2 id="HTML-amp-CSS"><a href="#HTML-amp-CSS" class="headerlink" title="HTML &amp; CSS"></a>HTML &amp; CSS</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">	&lt;!-- html文件 --&gt;</div><div class="line">&lt;canvas class=&quot;kumamon&quot; id=&quot;kumamon&quot; width=&quot;500&quot; height=&quot;500&quot;&gt;kumamon</div></pre></td></tr></table></figure>
<p><br>    为了清楚地看到画布位置，我们来给画布加个黑色边框：<br></p>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">/*css文件*/</div><div class="line">.kumamon&#123;</div><div class="line">    border: 1px solid #000;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><br>    画整幅图的函数：<br></p>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">function drawKumamon() &#123;</div><div class="line">    var ku = document.getElementById(&quot;kumamon&quot;);</div><div class="line">    if (ku.getContext) &#123;</div><div class="line">        var ctx = ku.getContext(&quot;2d&quot;);</div><div class="line">        //绘图代码</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><br>    文档加载后绘图（防止<code>getElementById()</code>取到空值）：<br></p>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">window.onload = function() &#123;</div><div class="line">    drawKumamon();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><br>    跨浏览器的事件监听方法（本例中只会用到 addHandler）：<br></p>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">var EventUtil = &#123;</div><div class="line">    addHandler: function(ele, type, handler) &#123;</div><div class="line">        if (ele.addEventListener) &#123;</div><div class="line">            ele.addEventListener(type, handler, false);</div><div class="line">        &#125; else if (ele.attachEvent) &#123;</div><div class="line">            ele.attachEvent(&quot;on&quot; + type, handler);</div><div class="line">        &#125; else &#123;</div><div class="line">            ele[&quot;on&quot; + type] = handler;</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line">    removeHandler: function(ele, type, handler) &#123;</div><div class="line">        if (ele.removeEventListener) &#123;</div><div class="line">            ele.removeEventListener(type, handler, false);</div><div class="line">        &#125; else if (ele.detachEvent) &#123;</div><div class="line">            ele.detachEvent(&quot;on&quot; + type, handler);</div><div class="line">        &#125; else &#123;</div><div class="line">            ele[&quot;on&quot; + type] = null;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p><br>    为了让接下来的白色圈等效果更加明显，我们先涂背景。这里背景用纯色，暂定为深红色，颜色值为<code>rgb(174,0,0)</code>。<br><br>我们把制作背景色的代码封装成一个函数，然后在主函数中调用。这类工具绘图类函数我们以 paintXXX 命名。<br></p>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">function paintBackground(ctx, sColor) &#123;</div><div class="line">    v_color = sColor;</div><div class="line">    ctx.fillStyle = sColor;</div><div class="line">    ctx.fillRect(0, 0, 500, 500);</div><div class="line">&#125;</div><div class="line">var v_color = &quot;rgb(174,0,0)&quot;;</div></pre></td></tr></table></figure>
<p><br>    在主函数<code>drawKumamon()</code>中调用：<br></p>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">paintBackground(ctx, v_color);</div></pre></td></tr></table></figure>
<p><br>    熊本住在一个白色的圆圈里，它脸上的腮红也是圆圈。所以同样的，我们把画圆的代码封装成一个函数。<br></p>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">function paintCircle(ctx, x, y, r, i, sColor) &#123;</div><div class="line">    ctx.beginPath();</div><div class="line">    ctx.moveTo(x - r, y);</div><div class="line">    ctx.arc(x, y, r, 0, i * Math.PI, false);</div><div class="line">    ctx.fillStyle = sColor;</div><div class="line">    ctx.fill();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><br>    在主函数中调用：<br></p>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">paintCircle(ctx, 250, 224, 191, 2, &quot;#fff&quot;);</div></pre></td></tr></table></figure>
<p><br>    这样，就在画布中间偏上的位置上有一个住着熊本熊的圆了。<br></p>

<h2 id="耳朵"><a href="#耳朵" class="headerlink" title="耳朵"></a>耳朵</h2><p><br>    熊本熊的两只耳朵就是黑色圆上面画一个小一点的白色圆。这两个圆的圆心是同一点。<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">//左耳朵</div><div class="line">paintCircle(ctx, 138, 120, 28, 2, &quot;#000&quot;);</div><div class="line">paintCircle(ctx, 138, 120, 15, 2, &quot;#fff&quot;);</div><div class="line">//右耳朵</div><div class="line">paintCircle(ctx, 365, 120, 28, 2, &quot;#000&quot;);</div><div class="line">paintCircle(ctx, 365, 120, 15, 2, &quot;#fff&quot;);</div></pre></td></tr></table></figure><br><br>## 脸<br><p><br>    熊本熊的脸是个椭圆。我们先来建一个绘制椭圆的工具函数。<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">function paintOval(ctx, x, y, a, b, i, sColor) &#123;</div><div class="line">    ctx.save();</div><div class="line">    var r = (a &gt; b) ? a : b;</div><div class="line">    var ratioX = a / r;</div><div class="line">    var ratioY = b / r;</div><div class="line">    ctx.scale(ratioX, ratioY);</div><div class="line">    ctx.beginPath();</div><div class="line">    ctx.arc(x / ratioX, y / ratioY, r, 0, i * Math.PI, false);</div><div class="line">    ctx.closePath();</div><div class="line">    ctx.restore();</div><div class="line">    ctx.fillStyle = sColor;</div><div class="line">    ctx.fill();</div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br><p><br>    参数中的<code>(x,y)</code>组成了椭圆中心点的坐标，a，b 是椭圆的长短半径。i 的值为2时可以画出椭圆；sColor 是为椭圆上色的颜色的字符串表示。<br><br>    像这样调用：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">paintOval(ctx, 250, 210, 140, 118, 2, &quot;#000&quot;);</div></pre></td></tr></table></figure><br><br>## 眉毛<br><p><br>    眉毛是两条起末点直线距离（称为底边）相同，弧线最高点到底边的距离不同的二次贝塞尔曲线构成的封闭图形。<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">function bearEyebrow(ctx, h1, h2, x0, y0, y1, d, sColor) &#123;</div><div class="line">    ctx.beginPath();</div><div class="line">    ctx.moveTo(x0, y0);</div><div class="line">    var x1 = x0 + d;</div><div class="line">    var cp1x = x0 + d / 2;</div><div class="line">    var cp1y = y0 - h1;</div><div class="line">    var cp2y = y0 - h2;</div><div class="line">    ctx.quadraticCurveTo(cp1x, cp1y, x1, y1);</div><div class="line">    ctx.quadraticCurveTo(cp1x, cp2y, x0, y0);</div><div class="line">    ctx.fillStyle = sColor;</div><div class="line">    ctx.fill();</div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br><p><br>    调用:<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">bearEyebrow(ctx, 20, 10, 168, 133, 130, 32, &quot;#fff&quot;);</div><div class="line">bearEyebrow(ctx, 20, 10, 298, 130, 133, 32, &quot;#fff&quot;);</div></pre></td></tr></table></figure><br><br><p><br>    因为眉毛宽度和位置不一样显得俏皮一点，所以传入的参数没有设置成对称的。<br></p>

<h2 id="眼睛"><a href="#眼睛" class="headerlink" title="眼睛"></a>眼睛</h2><p><br>    眼黑、眼白都是立起来的椭圆。需要写一个旋转椭圆的函数。<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">function paintRotatedOval(ctx, x, y, a, b, i, sColor, ang) &#123;</div><div class="line">    ctx.save();</div><div class="line">    var r = (a &gt; b) ? a : b;</div><div class="line">    var ratioX = a / r;</div><div class="line">    var ratioY = b / r;</div><div class="line">    ctx.translate(x / ratioX, y / ratioY);</div><div class="line">    ctx.rotate(ang * Math.PI / 180);</div><div class="line">    ctx.scale(ratioX, ratioY);</div><div class="line">    ctx.beginPath();</div><div class="line">    ctx.arc(0, 0, r, 0, i * Math.PI, false);</div><div class="line">    ctx.closePath();</div><div class="line">    ctx.restore();</div><div class="line">    ctx.fillStyle = sColor;</div><div class="line">    ctx.fill();</div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br><p><br>    ↑↑ 最后一个参数是椭圆旋转角度。<br><br>    调用：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">//左眼</div><div class="line">ctx.moveTo(160, 170);</div><div class="line">paintRotatedOval(ctx, 186, 170, 26, 27, 2, &quot;#fff&quot;, 90);</div><div class="line">ctx.moveTo(182, 170);</div><div class="line">paintOval(ctx, 192, 170, 4, 10, 2, &quot;#000&quot;);</div><div class="line">//右眼</div><div class="line">ctx.moveTo(273, 170);</div><div class="line">paintRotatedOval(ctx, 300, 170, 26, 27, 2, &quot;#fff&quot;, 90);</div><div class="line">ctx.moveTo(308, 170);</div><div class="line">paintOval(ctx, 312, 170, 4, 10, 2, &quot;#000&quot;);</div></pre></td></tr></table></figure><br><br>## 嘴<br><p><br>    嘴的部分有椭圆形的白色区域和黑色的两条闭合的二次贝塞尔曲线组成的嘴巴。<br><br>    给被二次贝塞尔围成的闭合区域着色：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">function paintQuadratic(ctx, cpy, x0, y0, d, sColor) &#123;</div><div class="line">    ctx.beginPath();</div><div class="line">    ctx.moveTo(x0, y0);</div><div class="line">    var x1 = x0 + d;</div><div class="line">    var cpx = x0 + d / 2;</div><div class="line">    ctx.quadraticCurveTo(cpx, cpy, x1, y0);</div><div class="line">    ctx.closePath();</div><div class="line">    ctx.fillStyle = sColor;</div><div class="line">    ctx.fill();</div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br><p><br>    调用：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">//嘴区域</div><div class="line">ctx.moveTo(186, 243);</div><div class="line">paintOval(ctx, 251, 243, 65, 52, 2, &quot;#fff&quot;);</div><div class="line">//嘴</div><div class="line">paintQuadratic(ctx, 240, 196, 253, 110, &quot;#000&quot;);</div><div class="line">paintQuadratic(ctx, 290, 196, 253, 110, &quot;#000&quot;);</div></pre></td></tr></table></figure><br><br>## 鼻子<br><p><br>    鼻子能拆成两半，是短半径不同的半椭圆。<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">//鼻子</div><div class="line">ctx.moveTo(228, 217);</div><div class="line">paintOval(ctx, 248, 217, 20, 17, 1, &quot;#000&quot;);</div><div class="line">ctx.moveTo(228, 142);</div><div class="line">paintRotatedOval(ctx, 248, 142, 20, 13, 1, &quot;#000&quot;, 180);</div></pre></td></tr></table></figure><br><br>## 腮红<br><p><br>    腮红是红色的圆。<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">//腮红</div><div class="line">ctx.moveTo(99, 227);</div><div class="line">paintCircle(ctx, 133, 227, 34, 2, &quot;rgb(255,0,2)&quot;);</div><div class="line">paintCircle(ctx, 366, 227, 34, 2, &quot;rgb(255,0,2)&quot;);</div></pre></td></tr></table></figure><br><br>## 身体<br><p><br>    为了让熊本熊头和身体的线条有所区别，身体的构造采用直线。<br><br>    在下巴的地方放一个矩形，营造一点熊本熊（也许有）的短脖子的感觉，然后矩形下面放一个上底和矩形长相同长度的等腰梯形。<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">function bearBody(ctx, x0, y0, rectW, rectH, trapW, trapH, sColor) &#123;</div><div class="line">    var x1 = x0 - (trapW - rectW) / 2;</div><div class="line">    var y1 = y0 + rectH + trapH;</div><div class="line">    ctx.beginPath();</div><div class="line">    ctx.moveTo(x0, y0 + rectH);</div><div class="line">    ctx.lineTo(x1, y1);</div><div class="line">    ctx.lineTo(x1 + trapW, y1);</div><div class="line">    ctx.lineTo(x0 + rectW, y0 + rectH);</div><div class="line">    ctx.closePath();</div><div class="line">    ctx.fillStyle = sColor;</div><div class="line">    ctx.globalCompositeOperation = &quot;source-atop&quot;;</div><div class="line">    ctx.fill();</div><div class="line">    ctx.moveTo(x0, y0);</div><div class="line">    ctx.lineTo(x0 + rectW, y0);</div><div class="line">    ctx.lineTo(x0 + rectW, y0 + rectH);</div><div class="line">    ctx.lineTo(x0, y0 + rectH);</div><div class="line">    ctx.lineTo(x0, y0);</div><div class="line">    ctx.fill();</div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br><p><br>    调用：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bearBody(ctx, 128, 241, 245, 40, 334, 140, &quot;#000&quot;);</div></pre></td></tr></table></figure><br><br>## 文字<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">function paintText(ctx, txt,sColor) &#123;</div><div class="line">    inTxt = txt;</div><div class="line">    sColor = txtColor;</div><div class="line">    ctx.font = &quot;bold 36px Arial&quot;;</div><div class="line">    ctx.textAlign = &quot;center&quot;;</div><div class="line">    ctx.textBaseLine = &quot;middle&quot;;</div><div class="line">    ctx.fillStyle = sColor;</div><div class="line">    ctx.fillText(txt, 250, 462);</div><div class="line">&#125;</div><div class="line">var inTxt = &quot;你为什么不学习？！&quot;;</div><div class="line">var txtColor = &quot;#fff&quot;;</div></pre></td></tr></table></figure><br><br><p><br>    调用：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">paintText(ctx, inTxt,txtColor);</div></pre></td></tr></table></figure><br><br><p><br>    因为之前调用 bearBody 函数时改变过 globalCompositeOperation 为source-atop，也就是说画布上新的绘制将在目标图像顶部显示源图像。源图像位于目标图像之外的部分是不可见的。因为画布上先画的熊本熊待着的那个白色圆圈，所以圆圈以外的部分是不可见的。想看到文字，要在调用 paintText 前先更改 globalCompositeOperation 值为source-over。<br></p>

<h2 id="drawKumamon-js"><a href="#drawKumamon-js" class="headerlink" title="drawKumamon.js"></a>drawKumamon.js</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div></pre></td><td class="code"><pre><div class="line">function drawKumamon() &#123;</div><div class="line">    var ku = document.getElementById(&quot;kumamon&quot;);</div><div class="line">    if (ku.getContext) &#123;</div><div class="line">        var ctx = ku.getContext(&quot;2d&quot;);</div><div class="line">        //绘图代码</div><div class="line">        paintCircle(ctx, 250, 224, 191, 2, &quot;#fff&quot;);</div><div class="line">        bearBody(ctx, 128, 241, 245, 40, 334, 140, &quot;#000&quot;);</div><div class="line">        //左耳朵</div><div class="line">        paintCircle(ctx, 138, 120, 28, 2, &quot;#000&quot;);</div><div class="line">        paintCircle(ctx, 138, 120, 15, 2, &quot;#fff&quot;);</div><div class="line">        //右耳朵</div><div class="line">        paintCircle(ctx, 365, 120, 28, 2, &quot;#000&quot;);</div><div class="line">        paintCircle(ctx, 365, 120, 15, 2, &quot;#fff&quot;);</div><div class="line">        //脸</div><div class="line">        paintOval(ctx, 250, 210, 140, 118, 2, &quot;#000&quot;);</div><div class="line">        //眉毛</div><div class="line">        bearEyebrow(ctx, 20, 10, 168, 133, 130, 32, &quot;#fff&quot;);</div><div class="line">        bearEyebrow(ctx, 20, 10, 298, 130, 133, 32, &quot;#fff&quot;);</div><div class="line">        //左眼</div><div class="line">        ctx.moveTo(160, 170);</div><div class="line">        paintRotatedOval(ctx, 186, 170, 26, 27, 2, &quot;#fff&quot;, 90);</div><div class="line">        ctx.moveTo(182, 170);</div><div class="line">        paintOval(ctx, 192, 170, 4, 10, 2, &quot;#000&quot;);</div><div class="line">        //右眼</div><div class="line">        ctx.moveTo(273, 170);</div><div class="line">        paintRotatedOval(ctx, 300, 170, 26, 27, 2, &quot;#fff&quot;, 90);</div><div class="line">        ctx.moveTo(308, 170);</div><div class="line">        paintOval(ctx, 312, 170, 4, 10, 2, &quot;#000&quot;);</div><div class="line">        //嘴区域</div><div class="line">        ctx.moveTo(186, 243);</div><div class="line">        paintOval(ctx, 251, 243, 65, 52, 2, &quot;#fff&quot;);</div><div class="line">        //嘴</div><div class="line">        paintQuadratic(ctx, 240, 196, 253, 110, &quot;#000&quot;);</div><div class="line">        paintQuadratic(ctx, 290, 196, 253, 110, &quot;#000&quot;);</div><div class="line">        //鼻子</div><div class="line">        ctx.moveTo(228, 217);</div><div class="line">        paintOval(ctx, 248, 217, 20, 17, 1, &quot;#000&quot;);</div><div class="line">        ctx.moveTo(228, 142);</div><div class="line">        paintRotatedOval(ctx, 248, 142, 20, 13, 1, &quot;#000&quot;, 180);</div><div class="line">        //腮红</div><div class="line">        ctx.moveTo(99, 227);</div><div class="line">        paintCircle(ctx, 133, 227, 34, 2, &quot;rgb(255,0,2)&quot;);</div><div class="line">        paintCircle(ctx, 366, 227, 34, 2, &quot;rgb(255,0,2)&quot;);</div><div class="line">        //文字</div><div class="line">        ctx.globalCompositeOperation = &quot;source-over&quot;;</div><div class="line">        paintText(ctx, inTxt,txtColor);</div><div class="line">        paintBackground(ctx, v_color);</div><div class="line">    &#125;</div><div class="line">    &#125;</div><div class="line">    function paintBackground(ctx, sColor) &#123;</div><div class="line">        v_color = sColor;</div><div class="line">        ctx.globalCompositeOperation = &quot;destination-over&quot;;</div><div class="line">        ctx.fillStyle = sColor;</div><div class="line">        ctx.fillRect(0, 0, 500, 500);</div><div class="line">    &#125;</div><div class="line">    function paintCircle(ctx, x, y, r, i, sColor) &#123;</div><div class="line">        ctx.beginPath();</div><div class="line">        ctx.moveTo(x - r, y);</div><div class="line">        ctx.arc(x, y, r, 0, i * Math.PI, false);</div><div class="line">        ctx.fillStyle = sColor;</div><div class="line">        ctx.fill();</div><div class="line">    &#125;</div><div class="line">    function paintOval(ctx, x, y, a, b, i, sColor) &#123;</div><div class="line">        ctx.save();</div><div class="line">        var r = (a &gt; b) ? a : b;</div><div class="line">        var ratioX = a / r;</div><div class="line">        var ratioY = b / r;</div><div class="line">        ctx.scale(ratioX, ratioY);</div><div class="line">        ctx.beginPath();</div><div class="line">        ctx.arc(x / ratioX, y / ratioY, r, 0, i * Math.PI, false);</div><div class="line">        ctx.closePath();</div><div class="line">        ctx.restore();</div><div class="line">        ctx.fillStyle = sColor;</div><div class="line">        ctx.fill();</div><div class="line">    &#125;</div><div class="line">    function bearEyebrow(ctx, h1, h2, x0, y0, y1, d, sColor) &#123;</div><div class="line">        ctx.beginPath();</div><div class="line">        ctx.moveTo(x0, y0);</div><div class="line">        var x1 = x0 + d;</div><div class="line">        var cp1x = x0 + d / 2;</div><div class="line">        var cp1y = y0 - h1;</div><div class="line">        var cp2y = y0 - h2;</div><div class="line">        ctx.quadraticCurveTo(cp1x, cp1y, x1, y1);</div><div class="line">        ctx.quadraticCurveTo(cp1x, cp2y, x0, y0);</div><div class="line">        ctx.fillStyle = sColor;</div><div class="line">        ctx.fill();</div><div class="line">    &#125;</div><div class="line">    function paintRotatedOval(ctx, x, y, a, b, i, sColor, ang) &#123;</div><div class="line">        ctx.save();</div><div class="line">        var r = (a &gt; b) ? a : b;</div><div class="line">        var ratioX = a / r;</div><div class="line">        var ratioY = b / r;</div><div class="line">        ctx.translate(x / ratioX, y / ratioY);</div><div class="line">        ctx.rotate(ang * Math.PI / 180);</div><div class="line">        ctx.scale(ratioX, ratioY);</div><div class="line">        ctx.beginPath();</div><div class="line">        ctx.arc(0, 0, r, 0, i * Math.PI, false);</div><div class="line">        ctx.closePath();</div><div class="line">        ctx.restore();</div><div class="line">        ctx.fillStyle = sColor;</div><div class="line">        ctx.fill();</div><div class="line">    &#125;</div><div class="line">    function paintQuadratic(ctx, cpy, x0, y0, d, sColor) &#123;</div><div class="line">        ctx.beginPath();</div><div class="line">        ctx.moveTo(x0, y0);</div><div class="line">        var x1 = x0 + d;</div><div class="line">        var cpx = x0 + d / 2;</div><div class="line">        ctx.quadraticCurveTo(cpx, cpy, x1, y0);</div><div class="line">        ctx.closePath();</div><div class="line">        ctx.fillStyle = sColor;</div><div class="line">        ctx.fill();</div><div class="line">    &#125;</div><div class="line">    function bearBody(ctx, x0, y0, rectW, rectH, trapW, trapH, sColor) &#123;</div><div class="line">        var x1 = x0 - (trapW - rectW) / 2;</div><div class="line">        var y1 = y0 + rectH + trapH;</div><div class="line">        ctx.beginPath();</div><div class="line">        ctx.moveTo(x0, y0 + rectH);</div><div class="line">        ctx.lineTo(x1, y1);</div><div class="line">        ctx.lineTo(x1 + trapW, y1);</div><div class="line">        ctx.lineTo(x0 + rectW, y0 + rectH);</div><div class="line">        ctx.closePath();</div><div class="line">        ctx.fillStyle = sColor;</div><div class="line">        ctx.globalCompositeOperation = &quot;source-atop&quot;;</div><div class="line">        ctx.fill();</div><div class="line">        ctx.moveTo(x0, y0);</div><div class="line">        ctx.lineTo(x0 + rectW, y0);</div><div class="line">        ctx.lineTo(x0 + rectW, y0 + rectH);</div><div class="line">        ctx.lineTo(x0, y0 + rectH);</div><div class="line">        ctx.lineTo(x0, y0);</div><div class="line">        ctx.fill();</div><div class="line">    &#125;</div><div class="line">    function paintText(ctx, txt,sColor) &#123;</div><div class="line">        inTxt = txt;</div><div class="line">        sColor = txtColor;</div><div class="line">        ctx.font = &quot;bold 36px Arial&quot;;</div><div class="line">        ctx.textAlign = &quot;center&quot;;</div><div class="line">        ctx.textBaseLine = &quot;middle&quot;;</div><div class="line">        ctx.fillStyle = sColor;</div><div class="line">        ctx.fillText(txt, 250, 462);</div><div class="line">    &#125;</div><div class="line"> </div><div class="line">    var v_color = &quot;rgb(174,0,0)&quot;;</div><div class="line">    var inTxt = &quot;你为什么不学习？！&quot;;</div><div class="line">    var txtColor = &quot;#fff&quot;;</div><div class="line">    window.onload = function() &#123;</div><div class="line">        drawKumamon();</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>原文地址：<a href="http://blog.ilanyy.com/html5/draw-kumamon-by-canvas.html?utm_source=tuicool&amp;utm_medium=referral" target="_blank" rel="external">http://blog.ilanyy.com/html5/draw-kumamon-by-canvas.html?utm_source=tuicool&amp;utm_medium=referral</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;从网上看到一个用canvas绘制的熊本熊&quot;&gt;&lt;a href=&quot;#从网上看到一个用canvas绘制的熊本熊&quot; class=&quot;headerlink&quot; title=&quot;从网上看到一个用canvas绘制的熊本熊&quot;&gt;&lt;/a&gt;从网上看到一个用canvas绘制的熊本熊&lt;/h3&gt;&lt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>一道常被人轻视的前端JS面试题</title>
    <link href="http://yoursite.com/2016/10/25/jsmianshi/"/>
    <id>http://yoursite.com/2016/10/25/jsmianshi/</id>
    <published>2016-10-25T12:49:36.000Z</published>
    <updated>2016-11-25T13:39:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目如下："><a href="#题目如下：" class="headerlink" title="题目如下："></a>题目如下：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">function Foo() &#123;</div><div class="line">    getName = function () &#123; alert (1); &#125;;</div><div class="line">    return this;</div><div class="line">&#125;</div><div class="line">Foo.getName = function () &#123; alert (2);&#125;;</div><div class="line">Foo.prototype.getName = function () &#123; alert (3);&#125;;</div><div class="line">var getName = function () &#123; alert (4);&#125;;</div><div class="line">function getName() &#123; alert (5);&#125;</div><div class="line"></div><div class="line">//请写出以下输出结果：</div><div class="line">Foo.getName();</div><div class="line">getName();</div><div class="line">Foo().getName();</div><div class="line">getName();</div><div class="line">new Foo.getName();</div><div class="line">new Foo().getName();</div><div class="line">new new Foo().getName();</div></pre></td></tr></table></figure>
<h3 id="答案是："><a href="#答案是：" class="headerlink" title="答案是："></a>答案是：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">function Foo() &#123;</div><div class="line">    getName = function () &#123; alert (1); &#125;;</div><div class="line">    return this;</div><div class="line">&#125;</div><div class="line">Foo.getName = function () &#123; alert (2);&#125;;</div><div class="line">Foo.prototype.getName = function () &#123; alert (3);&#125;;</div><div class="line">var getName = function () &#123; alert (4);&#125;;</div><div class="line">function getName() &#123; alert (5);&#125;</div><div class="line"></div><div class="line">//答案：</div><div class="line">Foo.getName();//2</div><div class="line">getName();//4</div><div class="line">Foo().getName();//1</div><div class="line">getName();//1</div><div class="line">new Foo.getName();//2</div><div class="line">new Foo().getName();//3</div><div class="line">new new Foo().getName();//3</div></pre></td></tr></table></figure>
<p><br>    此题是我综合之前的开发经验以及遇到的JS各种坑汇集而成。此题涉及的知识点众多，包括变量定义提升、this指针指向、运算符优先级、原型、继承、全局变量污染、对象属性及原型属性优先级等等。<br>此题包含7小问，分别说下。<br></p>

<h2 id="第一问"><a href="#第一问" class="headerlink" title="第一问:"></a>第一问:</h2><p><br>    先看此题的上半部分做了什么，首先定义了一个叫Foo的函数，之后为Foo创建了一个叫getName的静态属性存储了一个匿名函数，之后为Foo的原型对象新创建了一个叫getName的匿名函数。之后又通过函数变量表达式创建了一个getName的函数，最后再声明一个叫getName函数。<br><br>第一问的 <code>Foo.getName</code> 自然是访问Foo函数上存储的静态属性，自然是2，没什么可说的。<br></p>

<h2 id="第二问"><a href="#第二问" class="headerlink" title="第二问:"></a>第二问:</h2><p><br>    第二问，直接调用 getName 函数。既然是直接调用那么就是访问当前上文作用域内的叫<code>getName</code>的函数，所以跟1 2 3都没什么关系。此题有无数面试者回答为5。此处有两个坑，一是变量声明提升，二是函数表达式。<br></p>

<h3 id="变量声明提升"><a href="#变量声明提升" class="headerlink" title="变量声明提升"></a>变量声明提升</h3><p><br>即所有声明变量或声明函数都会被提升到当前函数的顶部。<br><br>例如下代码:<br></p>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">console.log(&apos;x&apos; in window);//true</div><div class="line">var x;</div><div class="line">x = 0;</div></pre></td></tr></table></figure>
<p><br>    代码执行时js引擎会将声明语句提升至代码最上方，变为：<br></p>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var x;</div><div class="line">console.log(&apos;x&apos; in window);//true</div><div class="line">x = 0;</div></pre></td></tr></table></figure>
<h3 id="函数表达式"><a href="#函数表达式" class="headerlink" title="函数表达式"></a>函数表达式</h3><p><br>     <code>var getName</code>与 <code>function getName</code> 都是声明语句，区别在于 <code>var getName</code>是函数表达式，而 <code>function getName</code> 是函数声明。关于JS中的各种函数创建方式可以看<a href="http://www.cnblogs.com/xxcanghai/p/4991870.html" target="_blank" rel="external">大部分人都会做错的经典JS闭包面试题</a>这篇文章有详细说明。<br><br>函数表达式最大的问题，在于js会将此代码拆分为两行代码分别执行。<br><br>例如下代码：<br></p>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">console.log(x);//输出：function x()&#123;&#125;</div><div class="line">var x=1;</div><div class="line">function x()&#123;&#125;</div></pre></td></tr></table></figure>
<p><br>    实际执行的代码为，先将 <code>var x=1</code> 拆分为 <code>var x;</code> 和 <code>x = 1;</code> 两行，再将 <code>var x;</code> 和 <code>function x(){}</code>两行提升至最上方变成：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var x;</div><div class="line">function x()&#123;&#125;</div><div class="line">console.log(x);</div><div class="line">x=1;</div></pre></td></tr></table></figure><br><br><p><br>    所以最终函数声明的x覆盖了变量声明的x，log输出为x函数。<br><br>同理，原题中代码最终执行时的是：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">function Foo() &#123;</div><div class="line">    getName = function () &#123; alert (1); &#125;;</div><div class="line">    return this;</div><div class="line">&#125;</div><div class="line">var getName;//只提升变量声明</div><div class="line">function getName() &#123; alert (5);&#125;//提升函数声明，覆盖var的声明</div><div class="line"></div><div class="line">Foo.getName = function () &#123; alert (2);&#125;;</div><div class="line">Foo.prototype.getName = function () &#123; alert (3);&#125;;</div><div class="line">getName = function () &#123; alert (4);&#125;;//最终的赋值再次覆盖function getName声明</div><div class="line"></div><div class="line">getName();//最终输出4</div></pre></td></tr></table></figure><br><br>## 第三问<br><br><p><br>    第三问的 <code>Foo().getName();</code> 先执行了Foo函数，然后调用Foo函数的返回值对象的getName属性函数。<br><br>Foo函数的第一句 <code>getName = function () { alert (1); };</code> 是一句函数赋值语句，注意它没有var声明，所以先向当前Foo函数作用域内寻找getName变量，没有。再向当前函数作用域上层，即外层作用域内寻找是否含有getName变量，找到了，也就是第二问中的alert(4)函数，将此变量的值赋值为 <code>function(){alert(1)}</code>。<br><br>此处实际上是将外层作用域内的getName函数修改了。<br></p><br><p>此处实际上是将外层作用域内的getName函数修改了。</p>

<h4 id="注意：此处若依然没有找到会一直向上查找到window对象，若window对象中也没有getName属性，就在window对象中创建一个getName变量。"><a href="#注意：此处若依然没有找到会一直向上查找到window对象，若window对象中也没有getName属性，就在window对象中创建一个getName变量。" class="headerlink" title="注意：此处若依然没有找到会一直向上查找到window对象，若window对象中也没有getName属性，就在window对象中创建一个getName变量。"></a>注意：此处若依然没有找到会一直向上查找到window对象，若window对象中也没有getName属性，就在window对象中创建一个getName变量。</h4><p><br>    之后Foo函数的返回值是this，而JS的this问题博客园中已经有非常多的文章介绍，这里不再多说。<br><br>简单的讲，this的指向是由所在函数的调用方式决定的。而此处的直接调用方式，this指向window对象。<br><br>遂Foo函数返回的是window对象，相当于执行 <code>window.getName()</code>，而window中的getName已经被修改为alert(1)，所以最终会输出1<br><br>此处考察了两个知识点，一个是变量作用域问题，一个是this指向问题。<br></p>

<h2 id="第四问"><a href="#第四问" class="headerlink" title="第四问"></a>第四问</h2><p>直接调用getName函数，相当于 <code>window.getName()</code> ，因为这个变量已经被Foo函数执行时修改了，遂结果与第三问相同，为1</p>

<h2 id="第五问"><a href="#第五问" class="headerlink" title="第五问"></a>第五问</h2><p><br>    第五问 <code>new Foo.getName();</code>,此处考察的是js的运算符优先级问题。<br></p>

<h3 id="js运算符优先级"><a href="#js运算符优先级" class="headerlink" title="js运算符优先级:"></a>js运算符优先级:</h3><p><img src="http://images2015.cnblogs.com/blog/746158/201602/746158-20160214172949325-418813184.png" alt="746158-20160214172949325-418813184"></p>
<h3 id="参考链接-https-developer-mozilla-org-zh-CN-docs-Web-JavaScript-Reference-Operators-Operator-Precedence"><a href="#参考链接-https-developer-mozilla-org-zh-CN-docs-Web-JavaScript-Reference-Operators-Operator-Precedence" class="headerlink" title="参考链接   https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Operator_Precedence"></a>参考链接   <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Operator_Precedence" target="_blank" rel="external">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Operator_Precedence</a></h3><p><br>    通过查上表可以得知点（.）的优先级高于new操作，遂相当于是:<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">new (Foo.getName)();</div></pre></td></tr></table></figure><br><br><p><br>    所以实际上将getName函数作为了构造函数来执行，遂弹出2。<br></p>

<h2 id="第六问"><a href="#第六问" class="headerlink" title="第六问"></a>第六问</h2><p><br>    第六问 <code>new Foo().getName()</code> ，首先看运算符优先级括号高于new，实际执行为<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(new Foo()).getName()</div></pre></td></tr></table></figure><br><br><p><br>    遂先执行Foo函数，而Foo此时作为构造函数却有返回值，所以这里需要说明下js中的构造函数返回值问题。<br></p><br><p><br>    原题中，返回的是this，而this在构造函数中本来就代表当前实例化对象，遂最终Foo函数返回实例化对象。<br><br>之后调用实例化对象的getName函数，因为在Foo构造函数中没有为实例化对象添加任何属性，遂到当前对象的原型对象（prototype）中寻找getName，找到了。<br><br>遂最终输出3。<br></p>


<h2 id="第七问"><a href="#第七问" class="headerlink" title="第七问"></a>第七问</h2><p><br>    第七问, <code>new new Foo().getName();</code> 同样是运算符优先级问题。<br><br>最终实际执行为：<br></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">new ((new Foo()).getName)();</div></pre></td></tr></table></figure><br><br><p><br>    先初始化Foo的实例化对象，然后将其原型上的getName函数作为构造函数再次new。<br><br>遂最终结果为3<br></p>


<p>转载自-&gt;<a href="http://www.cnblogs.com/xxcanghai/p/5189353.html" target="_blank" rel="external">http://www.cnblogs.com/xxcanghai/p/5189353.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;题目如下：&quot;&gt;&lt;a href=&quot;#题目如下：&quot; class=&quot;headerlink&quot; title=&quot;题目如下：&quot;&gt;&lt;/a&gt;题目如下：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>javascript实现点击按钮复制指定区域文本</title>
    <link href="http://yoursite.com/2016/10/22/jsCopy/"/>
    <id>http://yoursite.com/2016/10/22/jsCopy/</id>
    <published>2016-10-22T11:20:58.000Z</published>
    <updated>2016-11-25T11:45:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>html5的webAPI接口可以很轻松的使用短短的几行代码就实现点击按钮复制区域文本的功能，不需要依赖flash。<br></p>

<h3 id="代码如下"><a href="#代码如下" class="headerlink" title="代码如下:"></a>代码如下:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">/* 创建range对象   */</div><div class="line">const range = document.createRange();</div><div class="line">range.selectNode(element);    // 设定range包含的节点对象 </div><div class="line"></div><div class="line">/* 窗口的selection对象，表示用户选择的文本 */</div><div class="line">const selection = window.getSelection();</div><div class="line">if(selection.rangeCount &gt; 0) selection.removeAllRanges(); // 将已经包含的已选择的对象清除掉</div><div class="line">selection.addRange(range);                                // 将要复制的区域的range对象添加到selection对象中</div><div class="line"></div><div class="line">document.execCommand(&apos;copy&apos;); // 执行copy命令，copy用户选择的文本</div></pre></td></tr></table></figure>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试:"></a>测试:</h3><p>edge浏览器、Chrome（v54.0.2840.99 m）、Firefox（v49.0.1）可用。<br><br>IE9、IE10、IE11会弹出提示询问是否将文本粘贴到剪贴板上。<br><br>IE7、IE8不支持该功能。<br><br>IOS10的Safari浏览器可用。<br><br>根据反馈，IOS9以下的Safari浏览器应该是不支持该功能的。<br></p>

<h3 id="Demo"><a href="#Demo" class="headerlink" title="Demo:"></a>Demo:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html lang=&quot;en&quot;&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</div><div class="line">    &lt;title&gt;Title&lt;/title&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;article id=&quot;article&quot;&gt;</div><div class="line">    &lt;h4&gt;公园一日游&lt;/h4&gt;</div><div class="line">    &lt;time&gt;2016.8.15 星期二&lt;/time&gt;</div><div class="line">    &lt;p&gt;今天风和日丽，我和小红去了人民公园，玩了滑梯、打雪仗、划船，真是愉快的一天啊。&lt;/p&gt;</div><div class="line">&lt;/article&gt;</div><div class="line">&lt;button id=&quot;copy&quot;&gt;复制文章&lt;/button&gt;</div><div class="line">&lt;textarea style=&quot;width: 500px;height: 100px;&quot; placeholder=&quot;试一试ctrl + v&quot;&gt;&lt;/textarea&gt;</div><div class="line">&lt;script&gt;</div><div class="line">    function copyArticle(event)&#123;</div><div class="line">        const range = document.createRange();</div><div class="line">        range.selectNode(document.getElementById(&apos;article&apos;));</div><div class="line"></div><div class="line">        const selection = window.getSelection();</div><div class="line">        if(selection.rangeCount &gt; 0) selection.removeAllRanges();</div><div class="line">        selection.addRange(range);</div><div class="line">        </div><div class="line">        document.execCommand(&apos;copy&apos;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    document.getElementById(&apos;copy&apos;).addEventListener(&apos;click&apos;, copyArticle, false);</div><div class="line">&lt;/script&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<p>转载-&gt;<a href="https://zhuanlan.zhihu.com/p/23920249" target="_blank" rel="external">https://zhuanlan.zhihu.com/p/23920249</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;html5的webAPI接口可以很轻松的使用短短的几行代码就实现点击按钮复制区域文本的功能，不需要依赖flash。&lt;br&gt;&lt;/p&gt;

&lt;h3 id=&quot;代码如下&quot;&gt;&lt;a href=&quot;#代码如下&quot; class=&quot;headerlink&quot; title=&quot;代码如下:&quot;&gt;&lt;/a&gt;代码如
    
    </summary>
    
    
  </entry>
  
</feed>
